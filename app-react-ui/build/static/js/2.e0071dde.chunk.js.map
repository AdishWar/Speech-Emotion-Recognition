{"version":3,"sources":["../node_modules/react/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/object-assign/index.js","../node_modules/react-dom/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/mic-recorder-to-mp3/dist/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/scheduler/index.js","../node_modules/scheduler/cjs/scheduler.production.min.js"],"names":["module","exports","require","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","getOwnPropertySymbols","hasOwnProperty","prototype","propIsEnumerable","propertyIsEnumerable","toObject","val","undefined","TypeError","assign","test1","String","getOwnPropertyNames","test2","i","fromCharCode","map","n","join","test3","split","forEach","letter","keys","err","shouldUseNative","target","source","from","symbols","to","s","arguments","length","call","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","process","console","error","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","new_short","count","Int16Array","new_int$1","Int32Array","new_float$1","Float32Array","Arrays$1","a","fromIndex","toIndex","System$1","src","srcPos","dest","destPos","srcEnd","Util$1","ShortBlock$1","ordinal","this","SQRT2","FAST_LOG10","x","Math","log10","FAST_LOG10_X","y","short_block_allowed","short_block_coupled","short_block_dispensed","short_block_forced","Float$1","VbrMode$1","MAX_VALUE","vbr_off","vbr_mt","vbr_rh","vbr_abr","vbr_mtrh","vbr_default","common","new_array_n$1","args","Array","sz","slice","A","push","Int8Array","Float64Array","new_float_n$1","new_int_n$1","new_short_n","System$6","System","Util$6","Util","Arrays$6","Arrays","new_float$6","new_float","NewMDCT_1","enwindow","win","tantab_l","Encoder_1","SHORT_TYPE","cx","ca","cs","order","window_subband","x1","x1Pos","u","v","xr","wp","x2","w","t","mdct_short","inout","inoutPos","l","tc0","tc1","tc2","ts0","ts1","ts2","mdct_long","out","outPos","_in","ct","st","tc3","tc4","ts5","ts6","ts7","ts8","ts3","ts4","tc5","tc6","tc7","tc8","mdct_sub48","gfc","w0","w1","wk","wkPos","ch","channels_out","gr","mode_gr","band","gi","l3_side","tt","mdct_enc","mdct_encPos","samp","sb_sample","sampPos","k","type","block_type","band0","band1","mixed_block_flag","amp_filter","fill","work","b","bu","bd","arraycopy","System$7","new_float$7","new_float_n$7","new_float_n","III_psy_xmin_1","SBMAX_l","SBMAX_s","self","iii_psy_xmin","j","III_psy_ratio_1","thm","en","System$5","VbrMode$5","VbrMode","new_array_n$5","new_array_n","new_float$5","new_float_n$5","new_int$5","new_int","assert$5","assert","Encoder$2","NewMDCT","III_psy_ratio","FFTOFFSET","MPG_MD_MS_LR","bs","psy","vbr","qupvt","setModules","_bs","_psy","_qupvt","_vbr","newMDCT","lame_encode_mp3_frame","gfp","inbuf_l","inbuf_r","mp3buf","mp3bufPos","mp3buf_size","mp3count","masking_LR","masking","masking_MS","pe_use","inbuf","internal_flags","tot_ener","ms_ener_ratio","pe","pe_MS","lame_encode_frame_init","primebuff0","primebuff1","mf_size","BLKSIZE","framesize","padding","slot_lag","frac_SpF","out_samplerate","psymodel","bufp","bufpPos","blocktype","VBR","L3psycho_anal_vbr","L3psycho_anal_ns","mode","MPEGMode","JOINT_STEREO","cod_info","NORM_TYPE","gr2_max","max_pow","ATH","useAdjust","loudness_sq","max","aaSensitivityP","adjust","adjustLimit","adj_lim_new","adjust_ATH","mode_ext","MPG_MD_LR_LR","force_ms","sum_pe_MS","sum_pe_LR","gi0","gi1","analysis","pinfo","ms_ratio","ers","energy","f","nsPsy","pefirbuf","fircoef","iteration_loop","format_bitstream","copy_buffer","bWriteVbrTag","addVbrFrame","pcmdata","set_frame_pinfo","bitrate_index","bitrate_stereoMode_Hist","bt","bitrate_blockType_Hist","updateStats","ENCDELAY","POSTDELAY","MDCTDELAY","DECDELAY","SBLIMIT","CBANDS","SBPSY_l","SBPSY_s","PSFB21","PSFB12","HBLKSIZE","BLKSIZE_s","HBLKSIZE_s","START_TYPE","STOP_TYPE","MPG_MD_LR_I","MPG_MD_MS_I","Util$4","new_float$4","FFT_1","window","window_s","costab","fht","fz","fzPos","k4","fi","tri","fn","s1","c1","k1","k2","k3","kx","f1","f0","f3","f2","c2","s2","g0","g1","g2","g3","rv_tbl","fft_short","x_real","chn","buffer","bufPos","fft_long","jj","init_fft","cos","PI","VbrMode$3","Float$3","Float","ShortBlock$3","ShortBlock","Util$3","Arrays$3","new_float$3","new_float_n$3","new_int$3","assert$3","PsyModel_1","fft","LOG10","VO_SCALE","psycho_loudness_approx","loudness_power","eql_w","compute_ffts","fftenergy","fftenergy_s","wsamp_l","wsamp_lPos","wsamp_s","wsamp_sPos","gr_out","r","re","im","totalenergy","energy_save","athaa_loudapprox","loudness_sq_save","ma_max_i1","ma_max_i2","ma_max_m","tab","table1","table2","table3","mask_add","m1","m2","kk","shortblock","ratio","cb_s","cb_l","table2_","vbrpsy_mask_add","convert_partition2scalefac_s","eb","thr","sblock","sb","enn","thmm","bo_s_sb","bo_s","npart_s","b_lim","w_curr","PSY","bo_s_weight","w_next","convert_partition2scalefac_l","bo_l_sb","bo_l","npart_l","bo_l_weight","compute_masking_s","ebb","m","numlines_s","el","s3ind_s","ecb","s3_ss","nb_s1","min","blocktype_old","nb_s2","NS_INTERP","pow","regcoef_s","pecalc_s","mr","masking_lower","pe_s","regcoef_l","pecalc_l","pe_l","calc_energy","avg","numlines_l","rnumlines_l","calc_mask_index_l","mask_idx","last_tab_entry","vbrpsy_compute_fft_l","vbrpsy_compute_fft_s","vbrpsy_compute_loudness_approximation_l","masking_ratio","masking_MS_ratio","percep_entropy","percep_MS_entropy","blocktype_d","numchn","pcfact","msfix","wsamp_L","wsamp_S","eb_l","eb_s","uselongblock","ns_hpfsmpl","mask_idx_l","mask_idx_s","ResvMax","ResvSize","firbuf","firbufPos","sum1","sum2","attackThreshold","en_subshort","en_short","attack_intensity","ns_uselongblock","ns_attacks","last_en_subshort","pf","pfPos","pfe","p","abs","ers_save","attackthre_s","attackthre","lastAttacks","idx","s3ind","eb2","s3_ll","nb_1","nb_2","STEREO","interChRatio","calc_interchannel_masking","mld","mld_l","rmid","rside","mld_s","msfix1","athadjust","msfix2","athlower","ath","bm_l","thmLR","thmM","thmS","bm_s","ns_msfix","ATHlower","short_blocks","block_type_set","ppe","ppePos","fircoef_","vbrpsy_skip_masking_s","vbrpsy_skip_masking_l","vbrpsy_compute_masking_s","float","int","psyvbr_calc_mask_index_s","dd","dd_n","avg_mask","last","minval_s","vbrpsy_compute_masking_l","ecb_limit","ecb_limit_2","ecb_limit_1","minval_l","vbrpsy_compute_MS_thresholds","cb_mld","ath_cb","ebM","ebS","thmL","thmR","mld_m","thmMS","s3_func_x","bark","hf_slope","tempy","exp","norm_s3_func_x","lim_a","lim_b","h","sum","s3_func","tempx","temp","sqrt","freq2bark","freq","atan","init_numline","numlines","bo","bm","bval","bval_width","bo_w","sfreq","blksize","scalepos","deltafreq","sbmax","b_frq","sample_freq_frac","partition","ni","j2","bark1","sfb","i1","i2","start","end","arg","floor","f_tmp","bark2","init_s3_values","npart","norm","use_old_s3","s3","numberOfNoneZero","s3_x_norm","stereo_demask","ATHformula_GB","sub_short_factor","n_chn_psy","n_chn_out","factor","vbrpsy_attack_detection","vbrpsy_compute_block_type","ch01","mld_cb_l","mld_cb_s","new_thmm","NS_PREECHO_ATT1","NS_PREECHO_ATT2","vbrpsy_apply_block_type","psymodel_init","useOldS3","bvl_a","snr_l_a","snr_l_b","snr_s_a","snr_s_b","experimentalZ","ms_ener_ratio_old","scalefac_band","snr","level","ATHformula","log","MLIMIT","decay","exp_nspsytune","frame_duration","ATHtype","freq_inc","eql_balance","ATHcurve","MPEGMode$1","_ordinal","DUAL_CHANNEL","MONO","NOT_SET","MPEGMode_1","LameGlobalFlags_1","class_id","num_samples","num_channels","in_samplerate","scale","scale_left","scale_right","decode_only","quality","free_format","findReplayGain","decode_on_the_fly","write_id3tag_automatic","brate","compression_ratio","copyright","original","extension","emphasis","error_protection","strict_ISO","disable_reservoir","quant_comp","quant_comp_short","experimentalY","preset","VBR_q_frac","VBR_q","VBR_mean_bitrate_kbps","VBR_min_bitrate_kbps","VBR_max_bitrate_kbps","VBR_hard_min","lowpassfreq","highpassfreq","lowpasswidth","highpasswidth","maskingadjust","maskingadjust_short","ATHonly","ATHshort","noATH","athaa_type","athaa_sensitivity","useTemporal","tune","tune_value_a","version","encoder_delay","encoder_padding","frameNum","lame_allocated_gfp","L3Side$1","SFBMAX","L3Side_1","new_float$10","new_int$10","GrInfo_1","l3_enc","scalefac","xrpow_max","part2_3_length","big_values","count1","global_gain","scalefac_compress","table_select","subblock_gain","region0_count","region1_count","preflag","scalefac_scale","count1table_select","part2_length","sfb_lmax","sfb_smin","psy_lmax","sfbmax","psymax","sfbdivide","width","count1bits","sfb_partition_table","slen","max_nonzero_coeff","clone_int","array","other","new_int$9","IIISideInfo_1","main_data_begin","private_bits","resvDrain_pre","resvDrain_post","scfsi","System$11","new_int$11","ScaleFac_1","arrL","arrS","arr21","arr12","psfb21","psfb12","new_float$12","new_float_n$12","new_int$12","NsPsy_1","longfact","shortfact","VBRSeekInfo_1","seen","want","pos","size","bag","nVbrNumFrames","nBytesWritten","TotalFrameSize","new_byte$8","new_byte","new_double$8","new_double","new_float$8","new_float_n$8","new_int$8","new_int_n$8","new_int_n","LameInternalFlags$1","Header","write_timing","ptr","buf","Class_ID","iteration_init_init","fill_buffer_resample_init","mfbuf","MFSIZE","channels_in","resample_ratio","mf_samples_to_encode","VBR_min_bitrate","VBR_max_bitrate","samplerate_index","lowpass1","lowpass2","highpass1","highpass2","noise_shaping","noise_shaping_amp","substep_shaping","noise_shaping_stop","use_best_huffman","full_outer_loop","tag_spec","nMusicCRC","OldValue","CurrentStep","bv_scf","pseudohalf","sfb21_extra","inbuf_old","blackfilt","BPC","itime","sideinfo_len","header","MAX_HEADER_BUF","h_ptr","w_ptr","ancillary_flag","numlines_s_num1","numlines_l_num1","ms_ratio_s_old","ms_ratio_l_old","VBR_seek_table","nogap_total","nogap_current","findPeakSample","PeakSample","RadioGain","AudiophileGain","rgdata","noclipGainChange","noclipScale","hip","in_buffer_nsamples","in_buffer_0","in_buffer_1","MAX_BITS_PER_CHANNEL","MAX_BITS_PER_GRANULE","LameInternalFlags_1","new_float$13","ATH_1","System$15","Arrays$15","GainAnalysis$1","YULE_ORDER","MAX_SAMP_FREQ","RMS_WINDOW_TIME_NUMERATOR","RMS_WINDOW_TIME_DENOMINATOR","ABYule","MAX_SAMPLES_PER_WINDOW","ABButter","filterYule","input","inputPos","output","outputPos","nSamples","kernel","filterButter","fsqr","d","InitGainAnalysis","rgData","samplefreq","MAX_ORDER","linprebuf","lstepbuf","loutbuf","rinprebuf","rstepbuf","routbuf","reqindex","INIT_GAIN_ANALYSIS_ERROR","sampleWindow","lsum","rsum","totsamp","ill","INIT_GAIN_ANALYSIS_OK","ResetSampleFrequency","linpre","rinpre","lstep","rstep","lout","rout","B","AnalyzeSamples","left_samples","left_samplesPos","right_samples","right_samplesPos","curleft","curleftBase","curright","currightBase","batchsamples","cursamples","cursamplepos","GAIN_ANALYSIS_OK","GAIN_ANALYSIS_ERROR","STEPS_per_dB","ival","GetTitleGain","retval","len","elems","GAIN_NOT_ENOUGH_SAMPLES","upper","ceil","analyzeResult","MAX_dB","GainAnalysis_1","new_float$14","new_int$14","ReplayGain_1","freqindex","first","MeanBits_1","meanBits","bits","new_float$16","new_int$16","assert$16","CBRNewIterationLoop_1","_quantize","quantize","max_bits","l3_xmin","xrpow","targ_bits","mean_bits","mb","rv","ResvFrameBegin","on_pe","ms_convert","reduce_side","masking_lower_db","mask_adjust","mask_adjust_short","init_outer_loop","init_xrpow","calc_xmin","outer_loop","iteration_finish_one","ResvFrameEnd","HuffCodeTab","hl","xlen","linmax","table","hlen","Tables$1","ht","t1HB","t1l","t2HB","t2l","t3HB","t3l","t5HB","t5l","t6HB","t6l","t7HB","t7l","t8HB","t8l","t9HB","t9l","t10HB","t10l","t11HB","t11l","t12HB","t12l","t13HB","t13l","t16_5l","t15HB","t15l","t16HB","t16l","t24HB","t24l","t32HB","t32l","t33HB","t33l","largetbl","table23","table56","bitrate_table","samplerate_table","scfsi_band","Tables_1","VbrMode$19","Float$19","Util$19","new_float$19","new_int$19","assert$19","QuantizePVT$1","tak","_tk","_rv","IPOW20","Q_MAX","ipow20","PRECALC_SIZE","IXMAX_VAL","Q_MAX2","LARGE_BITS","nr_of_sfb_block","pretab","sfBandIndex","pow20","pow43","adj43","ATHmdct","StartLine","iteration_init","ATH_l","ATH_psfb21","ATH_s","ATH_psfb12","samp_freq","ATH_f","compute_ath","bass","alto","treble","sfb21","huffman_init","cbr","tbits","add_bits","extra_bits","ResvMaxBits","fac","move_bits","athAdjust","athFloor","o","pxmin","gsfb","pxminPos","ath_over","enable_athaa_fix","rh1","xmin","rh2","en0","xa","xb","e","max_nonzero","BitStream","EQ","tmpATH","calc_noise_core","startline","step","noise","ix","ix01","calc_noise","distort","res","prev_noise","distortPos","l3_xminPos","over","over_noise_db","tot_noise_db","max_noise","scalefacPos","over_SSD","tmp","noise_log","usefullsize","sl","over_count","tot_noise","over_noise","set_pinfo","sfb2","en1","ifqstep","L3Side","xfsf","CalcNoiseResult","bw","LAMEsfb","en_s","xfsf_s","thr_s","LAMEsfb_s","LAMEqss","LAMEmainbits","LAMEsfbits","QuantizePVT_1","System$18","Arrays$18","new_int$18","assert$18","Takehiro_1","Takehiro$1","Bits","subdv_table","quantize_lines_xrpow_01","istep","xrPos","ixPos","compareval0","quantize_lines_xrpow","remaining","x0","x3","rx0","rx1","rx2","rx3","huf_tbl_noESC","choose_table","endPos","max1","max2","ix_max","hlen1","count_bit_noESC","t1","count_bit_noESC_from2","sum3","hlen2","hlen3","count_bit_noESC_from3","choice2","choice","t2","linbits","count_bit_ESC","recalc_divide_sub","cod_info2","r01_bits","r01_div","r0_tbl","r1_tbl","bigv","r2","a2","bi","r2t","noquant_count_bits","sfb_count1","a1","best_huffman_divide","count_bits","xp","pi","codInfo","prevNoise","prev_data_use","accumulate","accumulate01","xpPos","iData","iDataPos","acc_iData","acc_iDataPos","acc_xp","acc_xpPos","quantize_xrpow","gain","roundfac","r0","r0bits","r0t","r1","r1t","recalc_divide_init","slen1_n","slen2_n","slen1_tab","slen2_tab","best_scalefac_store","recalc","c","scfsi_calc","scale_bitcount","scale_bitcount_lsf","scale_short","scale_mixed","scale_long","max_slen1","max_slen2","all_scalefactors_not_negative","max_range_sfac_tab","table_number","row_in_table","nr_sfb","max_sfac","partition_table","slen1","slen2","slen3","slen4","log2tab","printf","bv_index","scfb_anz","System$17","Arrays$17","new_byte$17","new_float_n$17","new_int$17","assert$17","BitStream$1","ga","mpg","ver","_ga","_mpg","_ver","totbit","bufByteIdx","bufBitIdx","putheader_bits","putbits2","MAX_LENGTH","Lame","LAME_MAXMP3BUFFER","putbits_noheaders","drain_into_ancillary","remainingBits","getLameShortVersion","charAt","writeheader","CRC_update","crc","huffman_coder_count1","huffbits","Huffmancode","tableindex","cbits","xbits","ext","linbits_x1","linbits_x2","ShortHuffmancodebits","region1Start","LongHuffmancodebits","bigvalues","region2Start","TotalBytes","total","compute_flushbits","total_bytes_output","flushbits","remaining_headers","bitsPerFrame","last_ptr","first_ptr","getframebits","println","bit_rate","CRC_writeheader","byte","flush_bitstream","NEQ","GainAnalysis","add_dummy_byte","old","encodeSideInfo2","data_bits","tot_bits","sfb_partition","scale_bits","sfbs","writeMainData","bufferPos","mp3data","minimum","updateMusicCRC","pcm_buf","mp3_in","samples_out","hip_decode1_unclipped","init_bit_stream_w","BitStream_1","System$2","VbrMode$2","ShortBlock$2","new_float$2","new_int_n$2","new_short_n$1","assert$2","Lame_1","Lame$1","qu","V9","V8","V7","V6","V5","V4","V3","V2","V1","V0","R3MIX","STANDARD","EXTREME","INSANE","STANDARD_FAST","EXTREME_FAST","MEDIUM","MEDIUM_FAST","id3","mpglib","LowPassHighPass","lowerlimit","BandPass","bitrate","lPass","lowpass","filter_coef","SmpFrqIndex","sample_freq","gpf","FindNearestBitrate","bRate","samplerate","BitrateIndex","optimum_bandwidth","lh","freq_map","table_index","nearestBitrateFullIndex","calcNeeded","mf_needed","lame_encode_frame","ret","enc","InOut","n_in","n_out","NumUsed","num_used","blackman","fcn","wcn","bkwn","sin","fill_buffer_resample","outbuf","outbufPos","desired_len","in_bufferPos","bpc","gcd","intratio","filter_l","BLACKSIZE","offset","time0","joff","xvalue","n_shift","fill_buffer","in_buffer","nsamples","io","numUsed","_p","_qu","_id3","_mpglib","lame_init","lame_init_old","full_bitrate_table","lower_range","lower_range_kbps","upper_range","upper_range_kbps","lame_init_params","map2MP3Frequency","linear_int","input_samplefreq","suggested_samplefreq","optimum_samplefreq","hip_decode_exit","hip_decode_init","lowpass_band","highpass_band","minband","maxband","fc1","fc2","lame_init_params_ppflt","id3tag_write_v2","InitVbrTag","lame_init_bitstream","apply_preset","LAME_DEFAULT_QUALITY","VBRNewIterationLoop","VBROldIterationLoop","vbrmode","ABRIterationLoop","lame_init_qval","NSATTACKTHRE","NSATTACKTHRE_S","lame_encode_flush","mp3buffer","mp3bufferPos","mp3buffer_size","mp3buffer_size_remaining","end_padding","frames_left","imp3","samples_to_encode","bunch","frame_num","lame_encode_buffer","id3tag_write_v1","buffer_l","buffer_r","update_inbuffer_size","mp3out","mp3size","in_buffer_ptr","inOut","buf_size","lame_encode_buffer_sample","VbrMode$20","Presets_1","VBRPresets","qual","comp","compS","shThreshold","shThresholdS","adj","adjShort","lower","curve","sens","inter","joint","mod","fix","vbr_q","quant_comp_s","expY","st_lrm","st_s","masking_adj","masking_adj_short","ath_lower","ath_curve","ath_sensitivity","interch","safejoint","sfb21mod","ABRPresets","kbps","sc","mask","interCh","sfScale","nsmsfix","nsbass","sfscale","lame","_lame","vbr_old_switch_map","vbr_psy_switch_map","apply_vbr_preset","enforce","vbr_preset","q","set","lame_set_VBR_q","abr_switch_map","apply_abr_preset","actual_bitrate","VBRQuantize_1","CalcNoiseResult_1","new_float$22","new_int$22","CalcNoiseData_1","System$21","VbrMode$21","Util$21","Arrays$21","new_float$21","assert$21","Quantize_1","tk","BinSearchDirection","loop_break","quant_compare","best","calc","better","klemm_noise","get_klemm_noise","balance_noise","bRefine","ifqstep34","trigger","amp_scalefac_bands","status","inc_scalefac_scale","amp","inc_subblock_gain","init_xrpow_core","ixwork","stop","ath21","block","ath12","psfb21_analogsilence","BINSEARCH_NONE","BINSEARCH_UP","BINSEARCH_DOWN","trancate_smallspectrums","allowedNoise","trancateThreshold","nsame","sort","cod_info_w","save_xrpow","best_noise_info","best_part2_3_length","bEndOfSearch","best_ggain_pass1","desired_rate","nBits","flagGoneOver","Direction","bin_search_StepSize","age","search_limit","noise_info","maxggain","huff_bits","ResvAdjust","VBR_encode_granule","min_bits","dbits","bst_cod_info","bst_xrpow","Max_bits","real_bits","this_bits","found","LameInternalFlags","get_framebits","frameBits","MeanBits","VBR_old_prepare","bands","analog_silence","mxb","bitpressure_strategy","VBR_new_prepare","maximum_framebits","calc_target_bits","analog_silence_bits","max_frame_bits","res_factor","totbits","assert$23","Reservoir_1","maxmp3buf","frameLength","resvLimit","fullFrameBits","resvsize","over_bits","stuffingBits","mdb_bytes","Version_1","getLameVersion","LAME_MAJOR_VERSION","getLameVeryShortVersion","getPsyVersion","PSY_MAJOR_VERSION","getLameUrl","getLameOsBitness","System$22","VbrMode$22","ShortBlock$22","Arrays$22","new_byte$22","assert$24","VBRTag","_v","NUMTOCENTRIES","MAXFRAMESIZE","LAMEHEADERSIZE","crc16Lookup","extractInteger","createInteger","createShort","shiftInBitsValue","setLameTagFrameHeader","bbyte","abyte","crcUpdateLookup","Tables","addVbr","getVbrTag","pTagData","VBRTagData","flags","hId","hSrIndex","hMode","hBitrate","samprate","equals","isVbrTag","head_flags","frames","bytes","toc","vbrScale","headersize","encDelay","encPadding","kbps_header","totalFrameSize","headerSize","getLameTagFrame","LAME_ID","indx","seek_point","xingSeekTable","streamIndex","FRAMES_FLAG","streamSize","musicLength","streamBuffer","streamBufferPos","revMethod","misc","musicCRC","abrBitrate","bytesWritten","vbrTypeTranslator","peakSignalAmplitude","radioReplayGain","noiseShaping","stereoMode","nonOptimal","sourceFreq","expNPsyTune","safeJoint","noGapMore","noGapPrevious","noGapCount","noGapCurr","athType","putLameVBR","putVbrTag","stream","seek","id3v2TagSize","fpStream","id3v2Header","readFully","startsWith","skipId3v2","write","VBRTag_1","GetAudio","parse2","mpg2","Parse","ver2","id32","pre2","MPGLib","ID3Tag","_bits","WavHeader","dataOffset","dataLen","channels","sampleRate","fourccToInt","fourcc","charCodeAt","Presets","QuantizePVT","Quantize","Takehiro","Reservoir","RIFF","WAVE","fmt_","data","readHeader","dataView","getUint32","fmtLen","getUint16","Mp3Encoder_1","gaud","parse","retcode","maxSamples","encodeBuffer","left","right","_sz","subarray","flush","classCallCheck","createClass","defineProperties","Encoder","config","bitRate","mp3Encoder","samplesMono","clearBuffer","dataBuffer","arrayBuffer","floatTo16BitPCM","convertBuffer","appendToBuffer","MicRecorder","startRecordingAt","deviceId","activeStream","context","microphone","processor","startTime","_this","timerToStart","setTimeout","createMediaStreamSource","createScriptProcessor","onaudioprocess","event","lameEncoder","encode","inputBuffer","getChannelData","connect","destination","disconnect","state","close","getAudioTracks","track","_this2","AudioContext","webkitAudioContext","audio","exact","Promise","resolve","reject","navigator","mediaDevices","getUserMedia","then","addMicrophoneListener","catch","_this3","finalBuffer","finish","Error","Blob","factory","_arrayLikeToArray","arr","arr2","_slicedToArray","isArray","Symbol","iterator","_arr","_n","_d","_e","_s","_i","next","done","minLen","toString","constructor","name","test","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","_typeof","_possibleConstructorReturn","ReferenceError","_createSuper","Derived","result","Super","NewTarget","apply","_setPrototypeOf","_inherits","subClass","superClass","create","for","z","C","encodeURIComponent","D","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","E","F","refs","updater","G","H","isReactComponent","setState","forceUpdate","I","isPureReactComponent","J","current","K","L","ref","__self","__source","M","g","children","defaultProps","$$typeof","_owner","O","P","Q","R","pop","keyPrefix","func","S","V","T","U","replace","escape","W","aa","X","N","Y","Z","ba","ReactCurrentDispatcher","ReactCurrentBatchConfig","suspense","ReactCurrentOwner","IsSomeRendererActing","Children","toArray","only","Component","Fragment","Profiler","PureComponent","StrictMode","Suspense","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","cloneElement","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","createElement","createFactory","bind","createRef","forwardRef","render","isValidElement","lazy","_ctor","_status","_result","memo","compare","useCallback","useContext","useDebugValue","useEffect","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useState","onError","da","ea","fa","ha","ia","ja","la","ma","na","oa","currentTarget","ka","pa","qa","ra","indexOf","sa","extractEvents","eventTypes","ta","phasedRegistrationNames","ua","registrationName","va","wa","dependencies","ya","document","za","Aa","Ba","Ca","stateNode","Da","Ea","Fa","Ga","Ha","Ia","Ja","Ka","La","Ma","Na","Oa","Pa","Qa","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","toLowerCase","Ua","Va","toUpperCase","xlinkHref","Wa","Xa","Sa","isNaN","Ta","Ra","removeAttribute","setAttribute","setAttributeNS","Ya","Za","$a","ab","bb","cb","db","fb","gb","hb","ib","jb","kb","lb","nb","pb","displayName","qb","tag","_debugOwner","_debugSource","fileName","lineNumber","return","rb","nodeName","_valueTracker","getOwnPropertyDescriptor","get","getValue","setValue","stopTracking","tb","yb","checked","zb","defaultChecked","defaultValue","_wrapperState","initialChecked","Ab","initialValue","controlled","Bb","Cb","Db","Eb","ownerDocument","activeElement","Gb","Fb","Hb","options","selected","defaultSelected","disabled","Ib","dangerouslySetInnerHTML","Jb","Kb","Lb","textContent","Mb","Nb","Ob","Pb","Qb","MSApp","execUnsafeLocalFunction","namespaceURI","innerHTML","valueOf","firstChild","removeChild","appendChild","Rb","lastChild","nodeType","nodeValue","Sb","Tb","animationend","animationiteration","animationstart","transitionend","Ub","Vb","Wb","style","animation","transition","Xb","Yb","Zb","$b","ac","bc","WeakMap","Map","cc","dc","alternate","effectTag","ec","memoizedState","dehydrated","fc","hc","child","sibling","gc","ic","concat","jc","kc","lc","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","release","mc","nc","srcElement","correspondingUseElement","parentNode","oc","pc","qc","topLevelType","nativeEvent","targetInst","ancestors","rc","eventSystemFlags","containerInfo","tc","uc","has","vc","wc","xc","yc","zc","Ac","Bc","Cc","Dc","Ec","Fc","Gc","Hc","Ic","Kc","blockedOn","container","Lc","delete","pointerId","Mc","Nc","Pc","unstable_runWithPriority","priority","hydrate","Qc","Rc","Sc","Tc","shift","Uc","unstable_scheduleCallback","unstable_NormalPriority","Vc","Wc","Yc","Zc","$c","ad","bubbled","captured","eventPriority","cd","unstable_UserBlockingPriority","ed","fd","gd","hd","id","addEventListener","Oc","jd","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","kd","ld","trim","md","setProperty","substring","nd","menuitem","area","base","br","col","embed","hr","img","keygen","link","meta","param","wbr","od","pd","is","qd","rd","sd","td","body","ud","vd","node","nextSibling","xd","HTMLIFrameElement","contentWindow","location","href","yd","contentEditable","Dd","Ed","Fd","autoFocus","Gd","__html","Hd","Id","clearTimeout","Jd","Kd","previousSibling","Ld","random","Md","Nd","Od","Pd","Qd","Rd","Sd","Td","dispatchConfig","Ud","_targetInst","Vd","Wd","Xd","Yd","Zd","$d","ae","be","ce","Interface","isDefaultPrevented","defaultPrevented","returnValue","ee","eventPool","fe","destructor","de","getPooled","preventDefault","stopPropagation","cancelBubble","persist","eventPhase","bubbles","cancelable","timeStamp","now","isTrusted","extend","ge","he","ie","je","ke","documentMode","le","me","ne","oe","beforeInput","compositionEnd","compositionStart","compositionUpdate","qe","keyCode","detail","se","ve","locale","which","te","ctrlKey","altKey","metaKey","char","ue","we","color","date","datetime","email","month","number","password","range","search","tel","text","time","url","week","xe","ye","change","ze","Ae","Be","Ce","De","Ee","Fe","Ge","detachEvent","He","Ie","attachEvent","Je","Ke","Le","Me","_isInputEventSupported","Ne","view","Oe","Alt","Control","Meta","Shift","Pe","getModifierState","Qe","Re","Se","Te","Ue","Ve","screenX","screenY","clientX","clientY","pageX","pageY","shiftKey","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","We","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Xe","mouseEnter","mouseLeave","pointerEnter","pointerLeave","Ye","defaultView","parentWindow","$e","af","bf","cf","df","select","ef","ff","gf","hf","jf","selectionStart","selectionEnd","anchorNode","getSelection","anchorOffset","focusNode","focusOffset","kf","onSelect","lf","animationName","elapsedTime","pseudoElement","mf","clipboardData","nf","of","charCode","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","qf","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","rf","repeat","sf","dataTransfer","tf","touches","targetTouches","changedTouches","uf","vf","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","wf","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","yf","zf","Af","Bf","Cf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","childContextTypes","Df","Ef","Ff","getChildContext","Gf","__reactInternalMemoizedMergedChildContext","Hf","If","Jf","Kf","unstable_cancelCallback","Lf","unstable_requestPaint","Mf","unstable_now","Nf","unstable_getCurrentPriorityLevel","Of","unstable_ImmediatePriority","Pf","Qf","Rf","unstable_LowPriority","Sf","unstable_IdlePriority","Tf","Uf","unstable_shouldYield","Vf","Wf","Xf","Yf","Zf","$f","ag","bg","cg","dg","eg","fg","gg","hg","ig","jg","kg","lg","mg","ng","og","pg","childExpirationTime","qg","firstContext","expirationTime","rg","sg","observedBits","responders","tg","ug","updateQueue","baseState","baseQueue","shared","pending","effects","vg","wg","suspenseConfig","payload","callback","xg","yg","zg","Ag","Bg","Cg","Dg","Eg","Fg","Jg","_reactInternalFiber","Gg","Hg","Ig","Kg","shouldComponentUpdate","Lg","contextType","Mg","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Ng","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Og","Pg","_stringRef","Qg","Rg","lastEffect","nextEffect","firstEffect","index","Sg","Tg","elementType","Ug","implementation","Vg","Wg","Xg","Yg","Zg","$g","ah","bh","dh","documentElement","tagName","eh","fh","gh","hh","memoizedProps","revealOrder","ih","responder","jh","kh","mh","nh","oh","ph","qh","rh","sh","th","queue","uh","vh","wh","lastRenderedReducer","action","eagerReducer","eagerState","lastRenderedState","dispatch","xh","yh","zh","Ah","destroy","deps","Bh","Ch","Dh","Eh","Fh","Gh","Hh","Ih","Jh","Kh","Lh","Mh","Nh","readContext","useResponder","useDeferredValue","useTransition","Oh","Ph","Qh","Rh","Sh","Th","pendingProps","Uh","Vh","Wh","Xh","Yh","Zh","$h","ai","ci","di","ei","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","getDerivedStateFromError","hi","pendingContext","qi","ii","retryTime","ji","fallback","unstable_avoidThisFallback","ki","li","isBackwards","rendering","renderingStartTime","tail","tailExpiration","tailMode","mi","ri","si","wasMultiple","multiple","onClick","onclick","createElementNS","createTextNode","ti","ui","vi","wi","xi","yi","zi","Ai","stack","Bi","WeakSet","Set","Ci","Fi","Ei","Gi","__reactInternalSnapshotBeforeUpdate","Hi","Ii","Ji","focus","Ki","Li","componentWillUnmount","Di","Mi","Ni","Oi","Pi","Qi","insertBefore","_reactRootContainer","Ri","Si","Ti","display","Ui","Vi","add","Wi","Xi","element","Yi","Zi","$i","componentDidCatch","aj","componentStack","Rj","bj","cj","dj","kj","lj","mj","nj","oj","qj","rj","sj","tj","uj","vj","wj","timeoutMs","xj","yj","zj","lastExpiredTime","Aj","firstPendingTime","lastPingedTime","nextKnownPendingLevel","callbackExpirationTime","callbackPriority","callbackNode","Bj","timeout","Cj","Dj","Ej","Fj","Gj","Hj","finishedWork","finishedExpirationTime","lastSuspendedTime","Ij","timeoutHandle","Jj","busyMinDurationMs","busyDelayMs","Kj","Mj","Nj","pingCache","Oj","ub","Pj","Xc","Qj","Sj","firstSuspendedTime","rangeCount","wb","activeElementDetached","focusedElem","selectionRange","Tj","wd","contains","compareDocumentPosition","createRange","setStart","removeAllRanges","addRange","setEnd","scrollLeft","top","scrollTop","vb","Uj","Vj","Wj","hidden","default","ob","Xj","unstable_observedBits","Zj","pendingChildren","ak","bk","ck","dk","ek","fk","Jc","_internalRoot","gk","ik","hasAttribute","hk","jk","unmount","querySelectorAll","JSON","stringify","form","Lj","lk","Events","findFiberByHostInstance","isDisabled","supportsFiber","inject","onCommitFiberRoot","onCommitFiberUnmount","Yj","overrideHookState","overrideProps","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","bundleType","rendererPackageName","createPortal","findDOMNode","flushSync","unmountComponentAtNode","unstable_batchedUpdates","unstable_createPortal","unstable_renderSubtreeIntoContainer","MessageChannel","unstable_forceFrameRate","performance","cancelAnimationFrame","requestAnimationFrame","port2","port1","onmessage","postMessage","sortIndex","priorityLevel","unstable_Profiling","unstable_continueExecution","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","delay","unstable_wrapCallback"],"mappings":"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EAAGA,EAAIgF,EAAIhF,IACpBkF,EAAEC,KAAKI,EAAYT,IAEvB,OAAOI,GAkHP,UAAa/C,EACb,YAhHJ,SAASqD,EAAYV,GACjB,GAAmB,GAAfA,EAAK3D,OACL,OAAOgB,EAAU2C,EAAK,IAE1B,IAAIE,EAAKF,EAAK,GACdA,EAAOA,EAAKG,MAAM,GAElB,IADA,IAAIC,EAAI,GACClF,EAAI,EAAGA,EAAIgF,EAAIhF,IACpBkF,EAAEC,KAAKK,EAAYV,IAEvB,OAAOI,GAuGP,OApBW,SAAUxB,MAsDrB+B,EAAWb,EAAOc,OAClBC,EAASf,EAAOgB,KAChBC,EAAWjB,EAAOkB,OAClBC,EAAcnB,EAAOoB,UA2lCrBC,EA1lCJ,WAEC,IAAIC,EAAW,EACb,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBAAuB,mBAEvB,mBACA,mBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBAAuB,mBAEvB,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,kBACA,kBAAuB,mBAEvB,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,oBACA,oBACA,kBACA,kBAAuB,mBAEvB,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,oBACA,mBACA,mBACA,kBAAuB,mBAEvB,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,kBACA,kBAAuB,mBAEvB,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,iBACA,kBAAuB,mBAEvB,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,oBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBAEA,mBACA,mBACA,oBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,kBAAuB,mBAEvB,kBACA,iBACA,oBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,oBACA,oBACA,oBACA,iBACA,mBACA,kBAAuB,kBAEvB,kBACA,kBACA,oBACA,kBACA,kBACA,mBACA,kBACA,mBACA,oBACA,iBACA,kBACA,mBACA,oBACA,oBACA,mBACA,kBACA,kBAAuB,kBAEvB,kBACA,kBACA,oBACA,kBACA,mBACA,mBACA,kBACA,mBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,kBACA,iBAAuB,mBAEvB,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,kBACA,kBAAuB,mBAEvB,kBACA,iBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,kBACA,mBAAuB,mBAEvB,iBACA,kBACA,oBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,oBACA,oBACA,oBACA,kBACA,mBAAuB,kBAEvB,WAAgBP,EAAOnC,MAAQ,GAAM,QACrC,WAAgBmC,EAAOnC,MAAQ,GAAM,QACrC,WAAemC,EAAOnC,MAAQ,GAAM,QACpC,WAAemC,EAAOnC,MAAQ,GAAM,QACpC,UAAcmC,EAAOnC,MAAQ,GAAM,QACnC,UAAcmC,EAAOnC,MAAQ,GAAM,QACnC,UAAcmC,EAAOnC,MAAQ,GAAM,QACnC,SAAamC,EAAOnC,MAAQ,GAAM,QAElC,mBAA2B,mBAC3B,kBAAyB,mBACzB,mBAA0B,mBAC1B,mBAME2C,EAAM,CACN,CACC,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBAEA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBAEC,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBAEA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBAEF,CACC,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBAEA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBAEC,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,qBAED,EACA,EACA,EACA,EACA,EACA,GACC,sBACA,sBACA,sBAEF,CACC,kBACA,iBACA,kBAEA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBAEA,iBACA,kBACA,kBACA,mBACC,mBACA,kBACD,kBACA,IAEC,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBAED,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBAED,CACC,EACA,EACA,EACA,EACA,EACA,EACA,qBACA,qBACA,qBAEA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,sBAEC,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBAEA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,uBAIFC,EAAWD,EAAIE,EAAUC,YACzBC,EAAKJ,EAAIE,EAAUC,YACnBE,EAAKL,EAAIE,EAAUC,YACnBG,EAAKN,EAAIE,EAAUC,YAanBI,EAAQ,CACR,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GACtD,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAM5D,SAASC,EAAeC,EAAIC,EAAOlE,GAKlC,IAJA,IAuEWmE,EAAGC,EA8BTC,EArGDC,EAAK,GAELC,EAAKL,EAAQ,IAAM,GAAK,IAEnB7G,GAAK,GAAIA,EAAI,EAAGA,IAAK,CAC7B,IAAImH,EAAGlG,EAAGmG,EAEVD,EAAIjB,EAASe,GAAM,IACnBhG,EAAI2F,EAAGM,GAAM,KAAOC,EACpBC,EAAIR,EAAGC,EAAQ,KAAOM,EACtBA,EAAIjB,EAASe,GAAM,GACnBhG,GAAK2F,EAAGM,GAAM,KAAOC,EACrBC,GAAKR,EAAGC,EAAQ,KAAOM,EACvBA,EAAIjB,EAASe,GAAM,GACnBhG,GAAK2F,EAAGM,GAAM,IAAMC,EACpBC,GAAKR,EAAGC,EAAQ,IAAMM,EACtBA,EAAIjB,EAASe,GAAM,GACnBhG,GAAK2F,EAAGM,GAAM,IAAMC,EACpBC,GAAKR,EAAGC,EAAQ,IAAMM,EACtBA,EAAIjB,EAASe,GAAM,GACnBhG,GAAK2F,EAAGM,EAAK,IAAMC,EACnBC,GAAKR,EAAGC,GAAS,IAAMM,EACvBA,EAAIjB,EAASe,GAAM,GACnBhG,GAAK2F,EAAGM,EAAK,IAAMC,EACnBC,GAAKR,EAAGC,GAAS,IAAMM,EACvBA,EAAIjB,EAASe,GAAM,GACnBhG,GAAK2F,EAAGM,EAAK,KAAOC,EACpBC,GAAKR,EAAGC,GAAS,KAAOM,EACxBA,EAAIjB,EAASe,GAAM,GACnBhG,GAAK2F,EAAGM,EAAK,KAAOC,EACpBC,GAAKR,EAAGC,GAAS,KAAOM,EAExBA,EAAIjB,EAASe,GAAM,GACnBhG,GAAK2F,EAAGC,GAAS,KAAOM,EACxBC,GAAKR,EAAGM,EAAK,KAAOC,EACpBA,EAAIjB,EAASe,GAAM,GACnBhG,GAAK2F,EAAGC,GAAS,KAAOM,EACxBC,GAAKR,EAAGM,EAAK,KAAOC,EACpBA,EAAIjB,EAASe,EAAK,GAClBhG,GAAK2F,EAAGC,GAAS,KAAOM,EACxBC,GAAKR,EAAGM,EAAK,KAAOC,EACpBA,EAAIjB,EAASe,EAAK,GAClBhG,GAAK2F,EAAGC,GAAS,IAAMM,EACvBC,GAAKR,EAAGM,EAAK,IAAMC,EACnBA,EAAIjB,EAASe,EAAK,GAClBhG,GAAK2F,EAAGC,EAAQ,GAAKM,EACrBC,GAAKR,EAAGM,EAAK,GAAKC,EAClBA,EAAIjB,EAASe,EAAK,GAClBhG,GAAK2F,EAAGC,EAAQ,IAAMM,EACtBC,GAAKR,EAAGM,GAAM,IAAMC,EACpBA,EAAIjB,EAASe,EAAK,GAClBhG,GAAK2F,EAAGC,EAAQ,KAAOM,EACvBC,GAAKR,EAAGM,GAAM,KAAOC,EACrBA,EAAIjB,EAASe,EAAK,GAClBhG,GAAK2F,EAAGC,EAAQ,KAAOM,EASvBA,GARAC,GAAKR,EAAGM,GAAM,KAAOC,IAOrBlG,GAAKiF,EAASe,EAAK,IAEnBtE,EAAE,GAAS,EAAJ3C,GAASoH,EAAInG,EACpB0B,EAAE,GAAS,EAAJ3C,GAASkG,EAASe,EAAK,GAAKE,EACnCF,GAAM,GACNJ,IACAK,IAIAE,EAAIR,EAAGC,GAAS,IAAMX,EAASe,GAAM,IACrChG,EAAI2F,EAAGC,GAAS,IAAMX,EAASe,GAAM,GACrCG,IAAMR,EAAGC,GAAS,IAAMD,EAAGC,EAAQ,KAAOX,EAASe,GAAM,GACzDhG,GAAK2F,EAAGC,GAAS,IAAMX,EAASe,GAAM,GACtCG,IAAMR,EAAGC,GAAS,IAAMD,EAAGC,EAAQ,KAAOX,EAASe,GAAM,GACzDhG,GAAK2F,EAAGC,GAAS,KAAOX,EAASe,EAAK,GACtCG,IAAMR,EAAGC,GAAS,KAAOD,EAAGC,EAAQ,KAAOX,EAASe,GAAM,GAC1DhG,GAAK2F,EAAGC,GAAS,KAAOX,EAASe,EAAK,GACtCG,IAAMR,EAAGC,GAAS,KAAOD,EAAGC,EAAQ,MAAQX,EAASe,GAAM,GAC3DhG,GAAK2F,EAAGC,EAAQ,IAAMX,EAASe,EAAK,GACpCG,IAAMR,EAAGC,GAAS,KAAOD,EAAGC,EAAQ,MAAQX,EAASe,GAAM,GAC3DhG,GAAK2F,EAAGC,EAAQ,IAAMX,EAASe,EAAK,GACpCG,IAAMR,EAAGC,GAAS,KAAOD,EAAGC,EAAQ,MAAQX,EAASe,GAAM,GAC3DhG,GAAK2F,EAAGC,EAAQ,KAAOX,EAASe,EAAK,GACrCG,IAAMR,EAAGC,GAAS,KAAOD,EAAGC,EAAQ,MAAQX,EAASe,GAAM,GAG3DH,GAFA7F,GAAK2F,EAAGC,EAAQ,MAERO,EACRL,EAAI9F,EAAImG,EAERA,EAAIzE,EAAE,IACN1B,EAAI0B,EAAE,IAAMyE,EAEZzE,EAAE,IAAMoE,EAAIK,EACZzE,EAAE,IAAMmE,EAAI7F,EACZ0B,EAAE,IAAMmE,EAAI7F,EACZ0B,EAAE,IAAMoE,EAAIK,EAIZJ,EAAKrE,EAAE,IAAMA,EAAE,GACfA,EAAE,IAAMA,EAAE,IACVA,EAAE,IAAMqE,EAAKd,EAASe,GAAK,GAAU,GACrCD,EAAKrE,EAAE,IAAMA,EAAE,GACfA,EAAE,IAAMA,EAAE,IACVA,EAAE,IAAMqE,EAAKd,EAASe,GAAK,GAAU,GAErCD,EAAKrE,EAAE,IAAMA,EAAE,GACfA,EAAE,IAAMA,EAAE,IACVA,EAAE,IAAMqE,EAAKd,EAASe,GAAK,GAAU,GACrCD,EAAKrE,EAAE,IAAMA,EAAE,GACfA,EAAE,IAAMA,EAAE,IACVA,EAAE,IAAMqE,EAAKd,EAASe,GAAK,GAAU,GAErCD,EAAKrE,EAAE,IAAMA,EAAE,GACfA,EAAE,IAAMA,EAAE,IACVA,EAAE,IAAMqE,EAAKd,EAASe,GAAK,IAAU,GACrCD,EAAKrE,EAAE,IAAMA,EAAE,GACfA,EAAE,IAAMA,EAAE,IACVA,EAAE,IAAMqE,EAAKd,EAASe,GAAK,IAAU,GAErCD,EAAKrE,EAAE,IAAMA,EAAE,GACfA,EAAE,IAAMA,EAAE,IACVA,EAAE,IAAMqE,EAAKrB,EAAOnC,MACpBwD,EAAKrE,EAAE,IAAMA,EAAE,GACfA,EAAE,IAAMA,EAAE,IACVA,EAAE,IAAMqE,EAAKrB,EAAOnC,MAAQb,EAAE,GAC9BA,EAAE,IAAMA,EAAE,GACVA,EAAE,KAAOA,EAAE,GACXA,EAAE,KAAOA,EAAE,IAEXqE,EAAKrE,EAAE,GACPA,EAAE,GAAKA,EAAE,IAAMqE,EACfrE,EAAE,IAAMA,EAAE,IAAMqE,EAChBA,EAAKrE,EAAE,GACPA,EAAE,GAAKA,EAAE,IAAMqE,EACfrE,EAAE,IAAMA,EAAE,IAAMqE,EAChBA,EAAKrE,EAAE,IACPA,EAAE,IAAMA,EAAE,IAAMqE,EAChBrE,EAAE,IAAMA,EAAE,IAAMqE,EAChBA,EAAKrE,EAAE,IACPA,EAAE,IAAMA,EAAE,IAAMqE,EAChBrE,EAAE,IAAMA,EAAE,IAAMqE,EAEhBA,EAAKrE,EAAE,IAAMA,EAAE,GACfA,EAAE,IAAMA,EAAE,IACVA,EAAE,IAAMqE,EAAKd,EAASe,GAAK,IAAW,GACtCD,EAAKrE,EAAE,IAAMA,EAAE,GACfA,EAAE,IAAMA,EAAE,IACVA,EAAE,IAAMqE,EAAKd,EAASe,GAAK,IAAW,GAEtCD,EAAKrE,EAAE,IAAMA,EAAE,IACfA,EAAE,KAAOA,EAAE,IACXA,EAAE,IAAMqE,EAAKd,EAASe,GAAK,IAAW,GACtCD,EAAKrE,EAAE,IAAMA,EAAE,IACfA,EAAE,KAAOA,EAAE,IACXA,EAAE,IAAMqE,EAAKd,EAASe,GAAK,IAAW,GAEtCD,EAAKrE,EAAE,IAAMA,EAAE,IACfA,EAAE,KAAOA,EAAE,IACXA,EAAE,IAAMqE,EAAKd,EAASe,GAAK,IAAW,GACtCD,EAAKrE,EAAE,IAAMA,EAAE,IACfA,EAAE,KAAOA,EAAE,IACXA,EAAE,IAAMqE,EAAKd,EAASe,GAAK,IAAW,GAEtCD,GAAMrE,EAAE,IAAMA,EAAE,IAChBA,EAAE,KAAOA,EAAE,IACXA,EAAE,IAAMqE,EAAKd,EAASe,GAAK,IAAW,GACtCD,GAAMrE,EAAE,IAAMA,EAAE,IAChBA,EAAE,KAAOA,EAAE,IACXA,EAAE,IAAMqE,EAAKd,EAASe,GAAK,IAAW,GAEtCD,EAAKrE,EAAE,GAAKA,EAAE,GACdA,EAAE,IAAMA,EAAE,GACVA,EAAE,GAAKqE,EAAKd,EAASe,GAAK,IAAW,GACrCD,EAAKrE,EAAE,GAAKA,EAAE,GACdA,EAAE,IAAMA,EAAE,GACVA,EAAE,GAAKqE,EAAKd,EAASe,GAAK,IAAW,GAErCD,EAAKrE,EAAE,GAAKA,EAAE,IACdA,EAAE,IAAMA,EAAE,IACVA,EAAE,IAAMqE,EAAKd,EAASe,GAAK,GAAU,GACrCD,EAAKrE,EAAE,GAAKA,EAAE,IACdA,EAAE,IAAMA,EAAE,IACVA,EAAE,IAAMqE,EAAKd,EAASe,GAAK,GAAU,GACrCD,EAAKrE,EAAE,IAAMA,EAAE,IACfA,EAAE,KAAOA,EAAE,IACXA,EAAE,IAAMqE,EAAKd,EAASe,GAAK,GAAU,GACrCD,GAAMrE,EAAE,IAAMA,EAAE,IAChBA,EAAE,KAAOA,EAAE,IACXA,EAAE,IAAMqE,EAAKd,EAASe,GAAK,GAAU,GAErCD,EAAKrB,EAAOnC,OAASb,EAAE,GAAKA,EAAE,KAC9BA,EAAE,IAAMA,EAAE,IACVA,EAAE,IAAMqE,EACRA,EAAKrB,EAAOnC,OAASb,EAAE,GAAKA,EAAE,KAC9BA,EAAE,IAAMA,EAAE,IACVA,EAAE,IAAMqE,EACRA,EAAKrB,EAAOnC,QAAUb,EAAE,IAAMA,EAAE,KAChCA,EAAE,KAAOA,EAAE,IACXA,EAAE,IAAMqE,EAAKrE,EAAE,IACfqE,EAAKrB,EAAOnC,QAAUb,EAAE,IAAMA,EAAE,KAChCA,EAAE,KAAOA,EAAE,IACXA,EAAE,IAAMqE,EAAKrE,EAAE,IAEfqE,EAAKrE,EAAE,GACPA,EAAE,KAAOA,EAAE,GACXA,EAAE,IAAMqE,EACRrE,EAAE,GAAKA,EAAE,IAAMqE,EACfrE,EAAE,KAAOqE,EACTA,EAAKrE,EAAE,GACPA,EAAE,KAAOA,EAAE,IACXA,EAAE,KAAOqE,EACTrE,EAAE,GAAKA,EAAE,IAAMqE,EACfrE,EAAE,KAAOqE,EACTA,EAAKrE,EAAE,IACPA,EAAE,KAAOA,EAAE,IACXA,EAAE,KAAOqE,EACTrE,EAAE,IAAMA,EAAE,IAAMqE,EAChBrE,EAAE,KAAOqE,EAETA,EAAKrE,EAAE,IACPA,EAAE,KAAOqE,EACTrE,EAAE,IAAMA,EAAE,IAAMqE,EAChBrE,EAAE,KAAOqE,EACTA,EAAKrE,EAAE,IACPA,EAAE,KAAOqE,EACTrE,EAAE,IAAMA,EAAE,IAAMqE,EAChBrE,EAAE,KAAOqE,EACTA,EAAKrE,EAAE,IACPA,EAAE,KAAOqE,EACTrE,EAAE,IAAMA,EAAE,IAAMqE,EAChBrE,EAAE,KAAOqE,EACTA,EAAKrE,EAAE,IACPA,EAAE,KAAOqE,EACTrE,EAAE,IAAMA,EAAE,GAAKqE,EACfrE,EAAE,IAAMqE,EAERA,EAAKrE,EAAE,IACPA,EAAE,IAAMA,EAAE,GAAKqE,EACfrE,EAAE,IAAMqE,EAERA,EAAKrB,EAAOnC,OAASb,EAAE,GAAKA,EAAE,IAC9BA,EAAE,IAAMA,EAAE,GACVA,EAAE,GAAKqE,EACPA,EAAKrB,EAAOnC,OAASb,EAAE,GAAKA,EAAE,IAC9BA,EAAE,IAAMA,EAAE,GACVA,EAAE,GAAKqE,EACPA,EAAKrB,EAAOnC,OAASb,EAAE,IAAMA,EAAE,KAC/BA,EAAE,KAAOA,EAAE,IACXA,EAAE,IAAMqE,EACRA,EAAKrB,EAAOnC,OAASb,EAAE,IAAMA,EAAE,KAC/BA,EAAE,KAAOA,EAAE,IACXA,EAAE,IAAMqE,EAERA,GAAMrB,EAAOnC,OAASb,EAAE,GAAKA,EAAE,KAC/BA,EAAE,IAAMA,EAAE,IACVA,EAAE,IAAMqE,EAAKrE,EAAE,GACfqE,GAAMrB,EAAOnC,OAASb,EAAE,GAAKA,EAAE,KAC/BA,EAAE,IAAMA,EAAE,IACVA,EAAE,IAAMqE,EAAKrE,EAAE,GACfqE,GAAMrB,EAAOnC,OAASb,EAAE,IAAMA,EAAE,KAChCA,EAAE,KAAOA,EAAE,IACXA,EAAE,IAAMqE,EAAKrE,EAAE,IACfqE,GAAMrB,EAAOnC,OAASb,EAAE,IAAMA,EAAE,KAChCA,EAAE,KAAOA,EAAE,IACXA,EAAE,IAAMqE,EAAKrE,EAAE,IAEfqE,EAAKrE,EAAE,IAAMA,EAAE,IACfA,EAAE,IAAMqE,EACRA,EAAKrE,EAAE,IAAMqE,EACbrE,EAAE,IAAMqE,EACRA,EAAKrE,EAAE,IAAMqE,EACbrE,EAAE,IAAMqE,EAERA,EAAKrE,EAAE,IAAMA,EAAE,IACfA,EAAE,IAAMqE,EACRA,EAAKrE,EAAE,IAAMqE,EACbrE,EAAE,IAAMqE,EACRA,EAAKrE,EAAE,IAAMqE,EACbrE,EAAE,IAAMqE,EAERA,EAAKrE,EAAE,IAAMA,EAAE,GACfA,EAAE,IAAMqE,EACRA,EAAKrE,EAAE,GAAKqE,EACZrE,EAAE,GAAKqE,EACPA,EAAKrE,EAAE,IAAMqE,EACbrE,EAAE,IAAMqE,EACRA,EAAKrE,EAAE,GAAKqE,EACZrE,EAAE,GAAKqE,EACPA,EAAKrE,EAAE,IAAMqE,EACbrE,EAAE,IAAMqE,EACRA,EAAKrE,EAAE,IAAMqE,EACbrE,EAAE,IAAMqE,EACRA,EAAKrE,EAAE,IAAMqE,EACbrE,EAAE,IAAMqE,EAERA,EAAKrE,EAAE,GAAKA,EAAE,GACdA,EAAE,GAAKqE,EACPA,EAAKrE,EAAE,IAAMqE,EACbrE,EAAE,IAAMqE,EACRA,EAAKrE,EAAE,IAAMqE,EACbrE,EAAE,IAAMqE,EACRA,EAAKrE,EAAE,GAAKqE,EACZrE,EAAE,GAAKqE,EACPA,EAAKrE,EAAE,GAAKqE,EACZrE,EAAE,GAAKqE,EACPA,EAAKrE,EAAE,IAAMqE,EACbrE,EAAE,IAAMqE,EACRA,EAAKrE,EAAE,IAAMqE,EACbrE,EAAE,IAAMqE,EACRA,EAAKrE,EAAE,GAAKqE,EACZrE,EAAE,GAAKqE,EACPA,EAAKrE,EAAE,GAAKqE,EACZrE,EAAE,GAAKqE,EACPA,EAAKrE,EAAE,IAAMqE,EACbrE,EAAE,IAAMqE,EACRA,EAAKrE,EAAE,IAAMqE,EACbrE,EAAE,IAAMqE,EACRA,EAAKrE,EAAE,IAAMqE,EACbrE,EAAE,IAAMqE,EACRA,EAAKrE,EAAE,IAAMqE,EACbrE,EAAE,IAAMqE,EACRA,EAAKrE,EAAE,IAAMqE,EACbrE,EAAE,IAAMqE,EACRA,EAAKrE,EAAE,IAAMqE,EACbrE,EAAE,IAAMqE,EAERA,EAAKrE,EAAE,GACPA,EAAE,IAAMA,EAAE,IACVA,EAAE,KAAOqE,EACTA,EAAKrE,EAAE,GACPA,EAAE,IAAMA,EAAE,IACVA,EAAE,KAAOqE,EACTA,EAAKrE,EAAE,IACPA,EAAE,KAAOA,EAAE,IACXA,EAAE,KAAOqE,EACTA,EAAKrE,EAAE,IACPA,EAAE,KAAOA,EAAE,IACXA,EAAE,KAAOqE,EACTA,EAAKrE,EAAE,GACPA,EAAE,IAAMA,EAAE,IACVA,EAAE,KAAOqE,EACTA,EAAKrE,EAAE,GACPA,EAAE,IAAMA,EAAE,IACVA,EAAE,KAAOqE,EACTA,EAAKrE,EAAE,IACPA,EAAE,KAAOA,EAAE,GACXA,EAAE,IAAMqE,EACRA,EAAKrE,EAAE,IACPA,EAAE,KAAOA,EAAE,GACXA,EAAE,IAAMqE,EACRA,EAAKrE,EAAE,GACPA,EAAE,IAAMA,EAAE,IACVA,EAAE,KAAOqE,EACTA,EAAKrE,EAAE,GACPA,EAAE,IAAMA,EAAE,IACVA,EAAE,KAAOqE,EACTA,EAAKrE,EAAE,IACPA,EAAE,KAAOA,EAAE,IACXA,EAAE,KAAOqE,EACTA,EAAKrE,EAAE,IACPA,EAAE,KAAOA,EAAE,IACXA,EAAE,KAAOqE,EACTA,EAAKrE,EAAE,IACPA,EAAE,KAAOA,EAAE,IACXA,EAAE,KAAOqE,EACTA,EAAKrE,EAAE,IACPA,EAAE,KAAOA,EAAE,IACXA,EAAE,KAAOqE,EACTA,EAAKrE,EAAE,IACPA,EAAE,KAAOA,EAAE,GACXA,EAAE,IAAMqE,EACRA,EAAKrE,EAAE,IACPA,EAAE,KAAOA,EAAE,GACXA,EAAE,IAAMqE,EAeV,SAASK,EAAWC,EAAOC,GAC1B,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC3B,IAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAM7BJ,GAJAE,EAAMN,EAAMC,EAAW,GAASpB,EAAIE,EAAUC,YAAY,GACtDgB,EAAMC,EAAW,MACrBE,EAAMH,EAAMC,EAAW,GAASpB,EAAIE,EAAUC,YAAY,GACtDgB,EAAMC,EAAW,IAErBI,EAAMC,EAAMH,EAMZI,GAJAD,EAAMN,EAAMC,EAAW,IAASpB,EAAIE,EAAUC,YAAY,GACtDgB,EAAMC,EAAW,KACrBE,EAAMH,EAAMC,EAAW,GAASpB,EAAIE,EAAUC,YAAY,GACtDgB,EAAMC,EAAW,IAErBO,GAAOF,EAAMH,EAEbA,EAA2F,sBAApFH,EAAMC,EAAW,GAASpB,EAAIE,EAAUC,YAAY,GAAKgB,EAAMC,EAAW,KAIjFK,EAA2F,sBAApFN,EAAMC,EAAW,IAASpB,EAAIE,EAAUC,YAAY,GAAKgB,EAAMC,EAAW,IAIjFD,EAAMC,EAAW,GAAe,oBAANG,EAA8BD,EAIxDH,EAAMC,EAAW,IAAgB,qBAANM,EAA8BD,EAIzDD,EAAY,kBAANA,EAA+B,qBAIrCE,EAAY,GAANA,EAAY,qBAAwBD,EAC1CN,EAAMC,EAAW,GAASI,EAAME,EAChCP,EAAMC,EAAW,GAASI,EAAME,EAEhCH,EAAY,GAANA,EAAY,qBAAwBD,EAC1CK,EAAY,kBAANA,EAA+B,qBAIrCR,EAAMC,EAAW,GAASG,EAAMI,EAChCR,EAAMC,EAAW,IAASG,EAAMI,EAEhCP,KAIF,SAASQ,EAAUC,EAAKC,EAAQC,GAC/B,IAAIC,EAAIC,EAEHV,EAAKC,EAAKU,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAkCnCb,EAAKC,EAAKa,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAhCvCtB,EAAMQ,EAAI,IAAMA,EAAI,GACpBG,EAAMH,EAAI,IAAMA,EAAI,IACpBI,EAAMJ,EAAI,IAAMA,EAAI,IACpBK,EAAML,EAAI,GAAKA,EAAI,GACnBM,EAAMN,EAAI,GAAKA,EAAI,GACnBO,EAAMP,EAAI,GAAKA,EAAI,GACnBQ,EAAMR,EAAI,GAAKA,EAAI,GAEnBF,EAAIC,EAAS,IAAOM,EAAME,EAAMC,GAAQF,EAAMN,EAAI,IAClDE,GAAMG,EAAME,EAAMC,GAAOnC,EAAG,KAAWiC,EAAMN,EAAI,IACjDC,GAAMT,EAAMW,EAAMC,GAAO/B,EAAG,IAC5ByB,EAAIC,EAAS,GAAKE,EAAKC,EACvBJ,EAAIC,EAAS,GAAKE,EAAKC,EAEvBT,GAAOO,EAAI,IAAMA,EAAI,KAAO3B,EAAG,IAC/BiC,EAAMA,EAAMjC,EAAG,IAAU2B,EAAI,GAC7BC,EAAKT,EAAMnB,EAAG,IAAUoB,EAAMU,EAAM9B,EAAG,IAAU+B,EAAM/B,EAAG,IAC1D6B,GAAMG,EAAMhC,EAAG,IAAUiC,EAAMC,EAAMlC,EAAG,IAAUmC,EAAMnC,EAAG,IAC3DyB,EAAIC,EAAS,GAAKE,EAAKC,EACvBJ,EAAIC,EAAS,GAAKE,EAAKC,EAEvBD,EAAKT,EAAMnB,EAAG,IAAUoB,EAAMU,EAAM9B,EAAG,IAAU+B,EAAM/B,EAAG,IAC1D6B,GAAMG,EAAMhC,EAAG,IAAUiC,EAAMC,EAAMlC,EAAG,IAAUmC,EAAMnC,EAAG,IAC3DyB,EAAIC,EAAS,GAAKE,EAAKC,EACvBJ,EAAIC,EAAS,IAAME,EAAKC,EAExBD,EAAKT,EAAMnB,EAAG,IAAUoB,EAAMU,EAAM9B,EAAG,IAAU+B,EAAM/B,EAAG,IAC1D6B,EAAKG,EAAMhC,EAAG,IAAUiC,EAAMC,EAAMlC,EAAG,IAAUmC,EAAMnC,EAAG,IAC1DyB,EAAIC,EAAS,IAAME,EAAKC,EACxBJ,EAAIC,EAAS,IAAME,EAAKC,EAKxBP,EAAMK,EAAI,GAAKA,EAAI,GACnBS,EAAMT,EAAI,GAAKA,EAAI,GACnBU,EAAMV,EAAI,GAAKA,EAAI,GACnBW,EAAMX,EAAI,IAAMA,EAAI,GACpBY,EAAMZ,EAAI,IAAMA,EAAI,IACpBa,EAAMb,EAAI,IAAMA,EAAI,IACpBc,EAAMd,EAAI,IAAMA,EAAI,IAEpBF,EAAIC,EAAS,GAAMY,EAAME,EAAMC,GAAQF,EAAMZ,EAAI,KACjDC,GAAMU,EAAME,EAAMC,GAAOzC,EAAG,KAAWuC,EAAMZ,EAAI,KACjDE,GAAMP,EAAMc,EAAMC,GAAOrC,EAAG,IAC5ByB,EAAIC,EAAS,IAAME,EAAKC,EACxBJ,EAAIC,EAAS,IAAME,EAAKC,EAExBN,GAAOI,EAAI,GAAKA,EAAI,IAAM3B,EAAG,IAC7BuC,EAAMZ,EAAI,IAAMY,EAAMvC,EAAG,IACzB4B,EAAKU,EAAMtC,EAAG,IAAUuC,EAAMC,EAAMxC,EAAG,IAAUyC,EAAMzC,EAAG,IAC1D6B,EAAKP,EAAMtB,EAAG,IAAUuB,EAAMa,EAAMpC,EAAG,IAAUqC,EAAMrC,EAAG,IAC1DyB,EAAIC,EAAS,GAAKE,EAAKC,EACvBJ,EAAIC,EAAS,GAAKE,EAAKC,EAEvBD,GAAMU,EAAMtC,EAAG,IAAUuC,EAAMC,EAAMxC,EAAG,IAAUyC,EAAMzC,EAAG,IAC3D6B,EAAKP,EAAMtB,EAAG,IAAUuB,EAAMa,EAAMpC,EAAG,IAAUqC,EAAMrC,EAAG,IAC1DyB,EAAIC,EAAS,GAAKE,EAAKC,EACvBJ,EAAIC,EAAS,GAAKE,EAAKC,EAEvBD,GAAMU,EAAMtC,EAAG,IAAUuC,EAAMC,EAAMxC,EAAG,IAAUyC,EAAMzC,EAAG,IAC3D6B,EAAKP,EAAMtB,EAAG,IAAUuB,EAAMa,EAAMpC,EAAG,IAAUqC,EAAMrC,EAAG,IAC1DyB,EAAIC,EAAS,IAAME,EAAKC,EACxBJ,EAAIC,EAAS,IAAME,EAAKC,EAI1B7E,KAAK0F,WAAa,SAASC,EAAKC,EAAIC,GAInC,IAHA,IAAIC,EAAKF,EACLG,EAAQ,IAEHC,EAAK,EAAGA,EAAKL,EAAIM,aAAcD,IAAM,CAC7C,IAAK,IAAIE,EAAK,EAAGA,EAAKP,EAAIQ,QAASD,IAAM,CAQxC,IAPA,IAAIE,EACAC,EAAMV,EAAIW,QAAQC,GAAGL,GAAIF,GACzBQ,EAAWH,EAAG5C,GACdgD,EAAc,EACdC,EAAOf,EAAIgB,UAAUX,GAAI,EAAIE,GAC7BU,EAAU,EAELC,EAAI,EAAGA,EAAI,EAAQA,IAQ3B,IAPAzD,EAAe0C,EAAIC,EAAOW,EAAKE,IAC/BxD,EAAe0C,EAAIC,EAAQ,GAAIW,EAAKE,EAAU,IAC9CA,GAAW,EACXb,GAAS,GAIJK,EAAO,EAAGA,EAAO,GAAIA,GAAQ,EACjCM,EAAKE,EAAU,GAAGR,KAAU,EAQ9B,IAAKA,EAAO,EAAGA,EAAO,GAAIA,IAAQK,GAAe,GAAI,CACpD,IAAIK,EAAOT,EAAGU,WACVC,EAAQrB,EAAIgB,UAAUX,GAAIE,GAC1Be,EAAQtB,EAAIgB,UAAUX,GAAI,EAAIE,GAGlC,GAF2B,GAAvBG,EAAGa,kBAAyBd,EAAO,IACtCU,EAAO,GACJnB,EAAIwB,WAAWf,GAAQ,MAC1B9D,EAAS8E,KAAKZ,EAAUC,EAAc,EACpCA,EAAc,GAAI,OACd,CACN,GAAId,EAAIwB,WAAWf,GAAQ,EAC1B,IAASS,EAAI,EAAGA,EAAI,GAAIA,IACvBI,EAAMJ,GAAG1D,EAAMiD,KAAUT,EAAIwB,WAAWf,GAE1C,GAAIU,GAAQhE,EAAUC,WAAY,CACjC,IAAS8D,GAAI,EAASA,EAAI,EAAGA,IAAK,CACjC,IAAIjD,EAAIhB,EAAIE,EAAUC,YAAY8D,EAAI,GACtCL,EAASC,EAAkB,EAAJI,EAAQ,GAAKG,EAAM,EAAIH,GAAG1D,EAAMiD,IACnDxC,EAAIoD,EAAM,EAAIH,GAAG1D,EAAMiD,IAC3BI,EAASC,EAAkB,EAAJI,EAAQ,IAAMG,EAAM,GAAKH,GAAG1D,EAAMiD,IACrDxC,EAAIoD,EAAM,GAAKH,GAAG1D,EAAMiD,IAC5BI,EAASC,EAAkB,EAAJI,EAAQ,IAAMG,EAAM,GAAKH,GAAG1D,EAAMiD,IACrDxC,EAAIoD,EAAM,GAAKH,GAAG1D,EAAMiD,IAC5BI,EAASC,EAAkB,EAAJI,EAAQ,IAAMI,EAAM,EAAIJ,GAAG1D,EAAMiD,IACpDxC,EAAIqD,EAAM,EAAIJ,GAAG1D,EAAMiD,IAC3BI,EAASC,EAAkB,EAAJI,EAAQ,IAAMI,EAAM,EAAIJ,GAAG1D,EAAMiD,IACpDxC,EAAIqD,EAAM,EAAIJ,GAAG1D,EAAMiD,IAC3BI,EAASC,EAAkB,EAAJI,EAAQ,IAAMI,EAAM,EAAIJ,GAAG1D,EAAMiD,IACpDxC,EAAIqD,EAAM,EAAIJ,GAAG1D,EAAMiD,IAE5BtC,EAAW0C,EAAUC,OACf,CACN,IAAIY,EAAO7E,EAAY,IACvB,IAASqE,GAAI,EAASA,EAAI,EAAGA,IAAK,CACjC,IAAIzH,EAAGkI,EACPlI,EAAIwD,EAAIkE,GAAMD,EAAI,IACdI,EAAMJ,EAAI,GAAG1D,EAAMiD,IACnBxD,EAAIkE,GAAMD,EAAI,IACdI,EAAM,EAAIJ,GAAG1D,EAAMiD,IACvBkB,EAAI1E,EAAIkE,GAAMD,EAAI,GACdG,EAAMH,EAAI,GAAG1D,EAAMiD,IACnBxD,EAAIkE,GAAMD,EAAI,IACdG,EAAM,EAAIH,GAAG1D,EAAMiD,IACvBiB,EAAKR,EAAI,GAAKzH,EAAIkI,EAAIzE,EAAS,EAAIgE,EAAI,GACvCQ,EAAKR,EAAI,IAAMzH,EAAIyD,EAAS,EAAIgE,EAAI,GAAKS,EAG1C9C,EAAUgC,EAAUC,EAAaY,IAMnC,GAAIP,GAAQhE,EAAUC,YAAsB,GAARqD,EACnC,IAASS,EAAI,EAAGA,GAAK,IAAKA,EAAG,CAC5B,IAAIU,EAAIC,EACRD,EAAKf,EAASC,EAAcI,GAAK5D,EAAG,GAAK4D,GACrCL,EAASC,GAAe,EAAII,GAC5B3D,EAAG,GAAK2D,GACZW,EAAKhB,EAASC,EAAcI,GAAK3D,EAAG,GAAK2D,GACrCL,EAASC,GAAe,EAAII,GAC5B5D,EAAG,GAAK4D,GAEZL,EAASC,GAAe,EAAII,GAAKU,EACjCf,EAASC,EAAcI,GAAKW,IAOhC,GAFA1B,EAAKD,EACLE,EAAQ,IACW,GAAfJ,EAAIQ,QACP,IAAK,IAAI1J,EAAI,EAAGA,EAAI,GAAIA,IACvByF,EAASuF,UAAU9B,EAAIgB,UAAUX,GAAI,GAAGvJ,GAAI,EAC1CkJ,EAAIgB,UAAUX,GAAI,GAAGvJ,GAAI,EAAG,OAS/BiL,EAAWrG,EAAOc,OAClBwF,EAActG,EAAOoB,UACrBmF,EAAgBvG,EAAOwG,YAgBvBC,EAfJ,WACI9H,KAAKiE,EAAI0D,EAAY7E,EAAUiF,SAC/B/H,KAAKtC,EAAIkK,EAAc,CAAC9E,EAAUkF,QAAS,IAE3C,IAAIC,EAAOjI,KACXA,KAAK5D,OAAS,SAAU8L,GACpBR,EAASD,UAAUS,EAAajE,EAAG,EAAGgE,EAAKhE,EAAG,EAAGnB,EAAUiF,SAC3D,IAAK,IAAItL,EAAI,EAAGA,EAAIqG,EAAUkF,QAASvL,IACnC,IAAK,IAAI0L,EAAI,EAAGA,EAAI,EAAGA,IACnBF,EAAKvK,EAAEjB,GAAG0L,GAAKD,EAAaxK,EAAEjB,GAAG0L,KAiB7CC,EALJ,WACCpI,KAAKqI,IAAM,IAAIP,EACf9H,KAAKsI,GAAK,IAAIR,GAKXS,EAAWlH,EAAOc,OAClBqG,EAAYnH,EAAOoH,QACnBC,EAAgBrH,EAAOsH,YACvBC,EAAcvH,EAAOoB,UACrBoG,EAAgBxH,EAAOwG,YACvBiB,EAAYzH,EAAO0H,QACnBC,EAAW3H,EAAO4H,OA8FtB,SAASC,IACL,IAAIC,EAAUzG,EACV0G,EAAgBhB,EAEhBiB,EAAYH,EAAUG,UACtBC,EAAeJ,EAAUI,aAKzBC,EAAK,KACTvJ,KAAKwJ,IAAM,KACX,IAAIA,EAAM,KACNC,EAAM,KACNC,EAAQ,KAIZ1J,KAAK2J,WAAa,SAAUC,EAAKC,EAAMC,EAAQC,GAC3CR,EAAKK,EACL5J,KAAKwJ,IAAMK,EACXL,EAAMK,EACNJ,EAAMM,EACNL,EAAQI,GAGZ,IAAIE,EAAU,IAAIb,EA4PlBnJ,KAAKiK,sBAAwB,SAAUC,EAAKC,EAASC,EAASC,EAAQC,EAAWC,GAC7E,IAAIC,EACAC,EAAa/B,EAAc,CAAC,EAAG,IAKnC+B,EAAW,GAAG,GAAK,IAAIrB,EACvBqB,EAAW,GAAG,GAAK,IAAIrB,EACvBqB,EAAW,GAAG,GAAK,IAAIrB,EACvBqB,EAAW,GAAG,GAAK,IAAIrB,EACvB,IAOIsB,EAPAC,EAAajC,EAAc,CAAC,EAAG,IAEnCiC,EAAW,GAAG,GAAK,IAAIvB,EACvBuB,EAAW,GAAG,GAAK,IAAIvB,EACvBuB,EAAW,GAAG,GAAK,IAAIvB,EACvBuB,EAAW,GAAG,GAAK,IAAIvB,EAIvB,IASIwB,EAEA5E,EAAIE,EAXJ2E,EAAQ,CAAC,KAAM,MACflF,EAAMuE,EAAIY,eAEVC,EAAWlC,EAAc,CAAC,EAAG,IAC7BmC,EAAgB,CAAC,GAAI,IACrBC,EAAK,CAAC,CAAC,EAAI,GAAK,CAAC,EAAI,IACrBC,EAAQ,CAAC,CAAC,EAAI,GAAK,CAAC,EAAI,IAsC5B,GA/BAL,EAAM,GAAKV,EACXU,EAAM,GAAKT,EAEuB,GAA9BzE,EAAIwF,wBAzIZ,SAAgCjB,EAAKW,GACjC,IAEI7E,EAAIE,EAFJP,EAAMuE,EAAIY,eAId,GAAkC,GAA9BnF,EAAIwF,uBAA6B,CAEjC,IAAI1O,EAAG0L,EACHiD,EAAaxC,EAAY,MACzByC,EAAazC,EAAY,MAE7B,IADAjD,EAAIwF,uBAAyB,EACxB1O,EAAI,EAAG0L,EAAI,EAAG1L,EAAI,IAAM,KAAO,EAAIkJ,EAAIQ,WAAY1J,EAChDA,EAAI,IAAMkJ,EAAIQ,SACdiF,EAAW3O,GAAK,EACQ,GAApBkJ,EAAIM,eACJoF,EAAW5O,GAAK,KAEpB2O,EAAW3O,GAAKoO,EAAM,GAAG1C,GACD,GAApBxC,EAAIM,eACJoF,EAAW5O,GAAKoO,EAAM,GAAG1C,MAC3BA,GAIV,IAAKjC,EAAK,EAAGA,EAAKP,EAAIQ,QAASD,IAC3B,IAAKF,EAAK,EAAGA,EAAKL,EAAIM,aAAcD,IAChCL,EAAIW,QAAQC,GAAGL,GAAIF,GAAIe,WAAamC,EAAUnG,WAGtDiH,EAAQtE,WAAWC,EAAKyF,EAAYC,GAGpCrC,EAAS,KAAOE,EAAUG,WAE1BL,EAASrD,EAAI2F,SAAYpC,EAAUqC,QAAUrB,EAAIsB,UAAYtC,EAAUG,WAEvEL,EAASrD,EAAI2F,SAAY,IAAMpB,EAAIsB,UAAY,KAuG/CL,CAAuBjB,EAAKW,GAgBhClF,EAAI8F,QAAU,GACT9F,EAAI+F,UAAY/F,EAAIgG,UAAY,IACjChG,EAAI+F,UAAYxB,EAAI0B,eACpBjG,EAAI8F,QAAU,GAOE,GAAhB9F,EAAIkG,SAAe,CAKnB,IACIC,EAAO,CAAC,KAAM,MAEdC,EAAU,EAEVC,EAAYlD,EAAU,GAE1B,IAAK5C,EAAK,EAAGA,EAAKP,EAAIQ,QAASD,IAAM,CAEjC,IAAKF,EAAK,EAAGA,EAAKL,EAAIM,aAAcD,IAChC8F,EAAK9F,GAAM6E,EAAM7E,GACjB+F,EAAU,IAAW,IAAL7F,EAAWgD,EAAUG,UAWzC,GAAW,IATPa,EAAI+B,KAAOzD,EAAUrH,UAAY+I,EAAI+B,KAAOzD,EAAUxH,OAChDwI,EAAI0C,kBAAkBhC,EAAK4B,EAAMC,EAAS7F,EAC5CuE,EAAYE,EAAYM,EAAG/E,GAAKgF,EAAMhF,GACtC6E,EAAS7E,GAAK8F,GAEZxC,EAAI2C,iBAAiBjC,EAAK4B,EAAMC,EAAS7F,EAC3CuE,EAAYE,EAAYM,EAAG/E,GAAKgF,EAAMhF,GACtC6E,EAAS7E,GAAK8F,IAGlB,OAAQ,EASZ,IAPI9B,EAAIkC,MAAQC,SAASC,eACrBtB,EAAc9E,GAAM6E,EAAS7E,GAAI,GAAK6E,EAAS7E,GAAI,GAC/C8E,EAAc9E,GAAM,IACpB8E,EAAc9E,GAAM6E,EAAS7E,GAAI,GAAK8E,EAAc9E,KAIvDF,EAAK,EAAGA,EAAKL,EAAIM,aAAcD,IAAM,CACtC,IAAIuG,EAAW5G,EAAIW,QAAQC,GAAGL,GAAIF,GAClCuG,EAASxF,WAAaiF,EAAUhG,GAChCuG,EAASrF,iBAAmB,SAKpC,IAAKhB,EAAK,EAAGA,EAAKP,EAAIQ,QAASD,IAC3B,IAAKF,EAAK,EAAGA,EAAKL,EAAIM,aAAcD,IAChCL,EAAIW,QAAQC,GAAGL,GAAIF,GAAIe,WAAamC,EAAUsD,UAC9C7G,EAAIW,QAAQC,GAAGL,GAAIF,GAAIkB,iBAAmB,EAC1CgE,EAAMhF,GAAIF,GAAMiF,EAAG/E,GAAIF,GAAM,IAqBzC,GApWJ,SAAoBL,GAChB,IAAI8G,EAASC,EAEb,GAAyB,GAArB/G,EAAIgH,IAAIC,UAyCZ,GAhCAF,EAAU/G,EAAIkH,YAAY,GAAG,GAC7BJ,EAAU9G,EAAIkH,YAAY,GAAG,GACL,GAApBlH,EAAIM,cACJyG,GAAW/G,EAAIkH,YAAY,GAAG,GAC9BJ,GAAW9G,EAAIkH,YAAY,GAAG,KAE9BH,GAAWA,EACXD,GAAWA,GAEI,GAAf9G,EAAIQ,UACJuG,EAAUtM,KAAK0M,IAAIJ,EAASD,IAEhCC,GAAW,IAKXA,GAAW/G,EAAIgH,IAAII,gBAeL,OACNpH,EAAIgH,IAAIK,QAAU,EAClBrH,EAAIgH,IAAIK,OAAS,EAKbrH,EAAIgH,IAAIK,OAASrH,EAAIgH,IAAIM,cACzBtH,EAAIgH,IAAIK,OAASrH,EAAIgH,IAAIM,aAGjCtH,EAAIgH,IAAIM,YAAc,MACnB,CAEH,IAAIC,EAAc,MAAQR,EAAU,OAChC/G,EAAIgH,IAAIK,QAAUE,GAClBvH,EAAIgH,IAAIK,QAAwB,KAAdE,EAAsB,KACpCvH,EAAIgH,IAAIK,OAASE,IACjBvH,EAAIgH,IAAIK,OAASE,IAGjBvH,EAAIgH,IAAIM,aAAeC,EACvBvH,EAAIgH,IAAIK,OAASE,EAIbvH,EAAIgH,IAAIK,OAASrH,EAAIgH,IAAIM,cACzBtH,EAAIgH,IAAIK,OAASrH,EAAIgH,IAAIM,aAIrCtH,EAAIgH,IAAIM,YAAcC,OAvEtBvH,EAAIgH,IAAIK,OAAS,EAgVrBG,CAAWxH,GAOXqE,EAAQtE,WAAWC,EAAKkF,EAAM,GAAIA,EAAM,IAOxClF,EAAIyH,SAAWlE,EAAUmE,aAErBnD,EAAIoD,SACJ3H,EAAIyH,SAAWlE,EAAUI,kBACtB,GAAIY,EAAIkC,MAAQC,SAASC,aAAc,CAgB1C,IAAIiB,EAAY,EACZC,EAAY,EAChB,IAAKtH,EAAK,EAAGA,EAAKP,EAAIQ,QAASD,IAC3B,IAAKF,EAAK,EAAGA,EAAKL,EAAIM,aAAcD,IAChCuH,GAAarC,EAAMhF,GAAIF,GACvBwH,GAAavC,EAAG/E,GAAIF,GAK5B,GAAIuH,GAAa,EAAOC,EAAW,CAE/B,IAAIC,EAAM9H,EAAIW,QAAQC,GAAG,GACrBmH,EAAM/H,EAAIW,QAAQC,GAAGZ,EAAIQ,QAAU,GAEnCsH,EAAI,GAAG1G,YAAc0G,EAAI,GAAG1G,YACzB2G,EAAI,GAAG3G,YAAc2G,EAAI,GAAG3G,aAE/BpB,EAAIyH,SAAWlE,EAAUI,eAiBrC,GAXI3D,EAAIyH,UAAY9D,GAChBoB,EAAUC,EAEVC,EAASM,IAETR,EAAUD,EAEVG,EAASK,GAITf,EAAIyD,UAAyB,MAAbhI,EAAIiI,MACpB,IAAK1H,EAAK,EAAGA,EAAKP,EAAIQ,QAASD,IAC3B,IAAKF,EAAK,EAAGA,EAAKL,EAAIM,aAAcD,IAChCL,EAAIiI,MAAMC,SAAS3H,GAAMP,EAAIkI,SAAS3H,GACtCP,EAAIiI,MAAM5C,cAAc9E,GAAM8E,EAAc9E,GAC5CP,EAAIiI,MAAM5B,UAAU9F,GAAIF,GAAML,EAAIW,QAAQC,GAAGL,GAAIF,GAAIe,WACrDpB,EAAIiI,MAAM3C,GAAG/E,GAAIF,GAAM4E,EAAO1E,GAAIF,GAClCuC,EAASd,UAAU9B,EAAIW,QAAQC,GAAGL,GAAIF,GAAIvC,GAAI,EAC1CkC,EAAIiI,MAAMnK,GAAGyC,GAAIF,GAAK,EAAG,KAKzBL,EAAIyH,UAAY9D,IAChB3D,EAAIiI,MAAME,IAAI5H,GAAIF,GAAML,EAAIiI,MAAME,IAAI5H,GAAIF,EAAK,GAC/CuC,EAASd,UAAU9B,EAAIiI,MAAMG,OAAO7H,GAAIF,EAAK,GAAI,EAC7CL,EAAIiI,MAAMG,OAAO7H,GAAIF,GAAK,EAC1BL,EAAIiI,MAAMG,OAAO7H,GAAIF,GAAIpI,SAU7C,GAAIsM,EAAI+B,KAAOzD,EAAUzH,SAAWmJ,EAAI+B,KAAOzD,EAAUtH,QAAS,CAE9D,IAAIzE,EACAuR,EAEJ,IAAKvR,EAAI,EAAGA,EAAI,GAAIA,IAChBkJ,EAAIsI,MAAMC,SAASzR,GAAKkJ,EAAIsI,MAAMC,SAASzR,EAAI,GAGnD,IADAuR,EAAI,EACC9H,EAAK,EAAGA,EAAKP,EAAIQ,QAASD,IAC3B,IAAKF,EAAK,EAAGA,EAAKL,EAAIM,aAAcD,IAChCgI,GAAKpD,EAAO1E,GAAIF,GAIxB,IAHAL,EAAIsI,MAAMC,SAAS,IAAMF,EAEzBA,EAAIrI,EAAIsI,MAAMC,SAAS,GAClBzR,EAAI,EAAGA,EAAI,EAAGA,IACfuR,IAAMrI,EAAIsI,MAAMC,SAASzR,GAAKkJ,EAAIsI,MAAMC,SAAS,GAAKzR,IAChDyM,EAAUiF,QAAQ1R,GAG5B,IADAuR,EAAK,KAAUrI,EAAIQ,QAAUR,EAAIM,aAAgB+H,EAC5C9H,EAAK,EAAGA,EAAKP,EAAIQ,QAASD,IAC3B,IAAKF,EAAK,EAAGA,EAAKL,EAAIM,aAAcD,IAChC4E,EAAO1E,GAAIF,IAAOgI,EAmB9B,GAfArI,EAAIyI,eAAeA,eAAelE,EAAKU,EAAQI,EAAeN,GAO9DnB,EAAG8E,iBAAiBnE,GAGpBM,EAAWjB,EAAG+E,YAAY3I,EAAK0E,EAAQC,EAAWC,EAAa,GAE3DL,EAAIqE,cACJ9E,EAAI+E,YAAYtE,GAEhBA,EAAIyD,UAAyB,MAAbhI,EAAIiI,MAAe,CACnC,IAAK5H,EAAK,EAAGA,EAAKL,EAAIM,aAAcD,IAAM,CACtC,IAAImC,EACJ,IAAKA,EAAI,EAAGA,EAAIkB,EAAWlB,IACvBxC,EAAIiI,MAAMa,QAAQzI,GAAImC,GAAKxC,EAAIiI,MAAMa,QAAQzI,GAAImC,EAC/C+B,EAAIsB,WACV,IAAKrD,EAAIkB,EAAWlB,EAAI,KAAMA,IAC1BxC,EAAIiI,MAAMa,QAAQzI,GAAImC,GAAK0C,EAAM7E,GAAImC,EAAIkB,GAGjDK,EAAMgF,gBAAgBxE,EAAKQ,GAK/B,OA9YJ,SAAqB/E,GACjB,IAAIO,EAAIF,EAaR,IAZAgD,EAAS,GAAKrD,EAAIgJ,eAAiBhJ,EAAIgJ,cAAgB,IACvD3F,EAAS,GAAKrD,EAAIyH,UAAYzH,EAAIyH,SAAW,GAG7CzH,EAAIiJ,wBAAwBjJ,EAAIgJ,eAAe,KAC/ChJ,EAAIiJ,wBAAwB,IAAI,KAGR,GAApBjJ,EAAIM,eACJN,EAAIiJ,wBAAwBjJ,EAAIgJ,eAAehJ,EAAIyH,YACnDzH,EAAIiJ,wBAAwB,IAAIjJ,EAAIyH,aAEnClH,EAAK,EAAGA,EAAKP,EAAIQ,UAAWD,EAC7B,IAAKF,EAAK,EAAGA,EAAKL,EAAIM,eAAgBD,EAAI,CACtC,IAAI6I,EAAyC,EAApClJ,EAAIW,QAAQC,GAAGL,GAAIF,GAAIe,WACe,GAA3CpB,EAAIW,QAAQC,GAAGL,GAAIF,GAAIkB,mBACvB2H,EAAK,GACTlJ,EAAImJ,uBAAuBnJ,EAAIgJ,eAAeE,KAC9ClJ,EAAImJ,uBAAuBnJ,EAAIgJ,eAAe,KAC9ChJ,EAAImJ,uBAAuB,IAAID,KAC/BlJ,EAAImJ,uBAAuB,IAAI,MAsXvCC,CAAYpJ,GAEL6E,GAtnBftB,EAAU8F,SAAW,IAUrB9F,EAAU+F,UAAY,KAMtB/F,EAAUgG,UAAY,GACtBhG,EAAUG,UAAa,IAAMH,EAAUgG,UAKvChG,EAAUiG,SAAW,IAKrBjG,EAAUkG,QAAU,GAKpBlG,EAAUmG,OAAS,GAKnBnG,EAAUoG,QAAU,GACpBpG,EAAUqG,QAAU,GAKpBrG,EAAUnB,QAAU,GACpBmB,EAAUlB,QAAU,GACpBkB,EAAUsG,OAAS,EACnBtG,EAAUuG,OAAS,EAKnBvG,EAAUqC,QAAU,KACpBrC,EAAUwG,SAAYxG,EAAUqC,QAAU,EAAI,EAC9CrC,EAAUyG,UAAY,IACtBzG,EAAU0G,WAAc1G,EAAUyG,UAAY,EAAI,EAElDzG,EAAUsD,UAAY,EACtBtD,EAAU2G,WAAa,EACvB3G,EAAUnG,WAAa,EACvBmG,EAAU4G,UAAY,EActB5G,EAAUmE,aAAe,EACzBnE,EAAU6G,YAAc,EACxB7G,EAAUI,aAAe,EACzBJ,EAAU8G,YAAc,EAExB9G,EAAUiF,QAAU,EAAC,UAAgB,SACpB,GAAZ,UAAe,QAAe,YAAiB,SAAY,EAC5D,OAAa,QAAc,QAAW,GA2iB1C,IAAIrL,EAAYoG,EAEZ+G,EAAS5O,EAAOgB,KAChB6N,EAAc7O,EAAOoB,UAoOrB0N,EAnOJ,WAEI,IAAIC,EAASF,EAAYpN,EAAUyI,SAC/B8E,EAAWH,EAAYpN,EAAU6M,UAAY,GAE7CW,EAAS,CACT,kBAAuB,kBACvB,kBAAuB,kBACvB,kBAAuB,mBACvB,kBAAuB,qBAG3B,SAASC,EAAIC,EAAIC,EAAO7T,GACpB,IACI8T,EACAC,EACAtK,EAHAuK,EAAM,EAONC,EAAKJ,GAFT7T,IAAM,GAGN8T,EAAK,EACL,EAAG,CACC,IAAII,EAAIC,EACJtU,EAAGuU,EAAIC,EAAIC,EAAIC,EACnBA,EAAKT,GAAM,EAGXQ,GADAD,EAAKP,GAAM,IADXM,EAAKN,GAGLA,EAAKO,GAAM,EAEX5K,GADAsK,EAAKF,GACKU,EACV,GAEIC,EAAKZ,EAAGG,EAAK,GAAKH,EAAGG,EAAKK,GAC1BK,EAAKb,EAAGG,EAAK,GAAKH,EAAGG,EAAKK,GAC1BM,EAAKd,EAAGG,EAAKM,GAAMT,EAAGG,EAAKO,GAC3BK,EAAKf,EAAGG,EAAKM,GAAMT,EAAGG,EAAKO,GAC3BV,EAAGG,EAAKM,GAAMI,EAAKE,EACnBf,EAAGG,EAAK,GAAKU,EAAKE,EAClBf,EAAGG,EAAKO,GAAME,EAAKE,EACnBd,EAAGG,EAAKK,GAAMI,EAAKE,EACnBF,EAAKZ,EAAGnK,EAAK,GAAKmK,EAAGnK,EAAK2K,GAC1BK,EAAKb,EAAGnK,EAAK,GAAKmK,EAAGnK,EAAK2K,GAC1BM,EAAMrB,EAAOhQ,MAAQuQ,EAAGnK,EAAK6K,GAC7BK,EAAMtB,EAAOhQ,MAAQuQ,EAAGnK,EAAK4K,GAC7BT,EAAGnK,EAAK4K,GAAMI,EAAKE,EACnBf,EAAGnK,EAAK,GAAKgL,EAAKE,EAClBf,EAAGnK,EAAK6K,GAAME,EAAKE,EACnBd,EAAGnK,EAAK2K,GAAMI,EAAKE,EACnBjL,GAAMqK,EACNC,GAAMD,QACDC,EAAKE,GAGd,IAFAE,EAAKT,EAAOM,EAAM,GAClBE,EAAKR,EAAOM,EAAM,GACbnU,EAAI,EAAGA,EAAI0U,EAAI1U,IAAK,CACrB,IAAI+U,EAAIC,EACRD,EAAK,EAAK,EAAIV,EAAMA,EACpBW,EAAM,EAAIX,EAAMC,EAChBJ,EAAKF,EAAQhU,EACb4J,EAAKoK,EAAQO,EAAKvU,EAClB,EAAG,CACC,IAAI2C,EAAGkI,EAAGoK,EAAIL,EAAID,EAAIO,EAAIJ,EAAIK,EAAIN,EAAIO,EACtCvK,EAAImK,EAAKjB,EAAGG,EAAKK,GAAMQ,EAAKhB,EAAGnK,EAAK2K,GACpC5R,EAAIoS,EAAKhB,EAAGG,EAAKK,GAAMS,EAAKjB,EAAGnK,EAAK2K,GACpCI,EAAKZ,EAAGG,EAAK,GAAKvR,EAClBiS,EAAKb,EAAGG,EAAK,GAAKvR,EAClBuS,EAAKnB,EAAGnK,EAAK,GAAKiB,EAClBoK,EAAKlB,EAAGnK,EAAK,GAAKiB,EAClBA,EAAImK,EAAKjB,EAAGG,EAAKO,GAAMM,EAAKhB,EAAGnK,EAAK6K,GACpC9R,EAAIoS,EAAKhB,EAAGG,EAAKO,GAAMO,EAAKjB,EAAGnK,EAAK6K,GACpCI,EAAKd,EAAGG,EAAKM,GAAM7R,EACnBmS,EAAKf,EAAGG,EAAKM,GAAM7R,EACnByS,EAAKrB,EAAGnK,EAAK4K,GAAM3J,EACnBsK,EAAKpB,EAAGnK,EAAK4K,GAAM3J,EACnBA,EAAIwJ,EAAKS,EAAKR,EAAKc,EACnBzS,EAAI2R,EAAKQ,EAAKT,EAAKe,EACnBrB,EAAGG,EAAKM,GAAMI,EAAKjS,EACnBoR,EAAGG,EAAK,GAAKU,EAAKjS,EAClBoR,EAAGnK,EAAK6K,GAAMS,EAAKrK,EACnBkJ,EAAGnK,EAAK2K,GAAMW,EAAKrK,EACnBA,EAAIyJ,EAAKa,EAAKd,EAAKQ,EACnBlS,EAAI0R,EAAKc,EAAKb,EAAKO,EACnBd,EAAGnK,EAAK4K,GAAMS,EAAKtS,EACnBoR,EAAGnK,EAAK,GAAKqL,EAAKtS,EAClBoR,EAAGG,EAAKO,GAAME,EAAK9J,EACnBkJ,EAAGG,EAAKK,GAAMI,EAAK9J,EACnBjB,GAAMqK,EACNC,GAAMD,QACDC,EAAKE,GAEdE,GADAS,EAAKT,GACKT,EAAOM,EAAM,GAAKE,EAAKR,EAAOM,EAAM,GAC9CE,EAAKU,EAAKlB,EAAOM,EAAM,GAAKE,EAAKR,EAAOM,EAAM,GAElDA,GAAO,QACFF,EAAK9T,GAGlB,IAAIkV,EAAS,CAAC,EAAM,IAAM,GACtB,IAAM,GAAM,IAAM,GAAM,IAAM,GAC9B,IAAM,GAAM,IAAM,GAAM,IAAM,IAC9B,IAAM,EAAM,IAAM,GAAM,IAAM,GAC9B,IAAM,IAAM,IAAM,GAAM,IAAM,GAC9B,IAAM,GAAM,IAAM,IAAM,IAAM,EAC9B,IAAM,GAAM,IAAM,GAAM,IAAM,IAC9B,IAAM,GAAM,IAAM,GAAM,IAAM,GAC9B,IAAM,IAAM,IAAM,GAAM,IAAM,GAC9B,IAAM,GAAM,IAAM,IAAM,IAAM,GAC9B,IAAM,GAAM,IAAM,GAAM,IAAM,IAC9B,IAAM,EAAM,IAAM,GAAM,IAAM,GAC9B,IAAM,GAAM,IAAM,GAAM,IAAM,GAC9B,IAAM,GAAM,IAAM,IAAM,IAAM,GAC9B,IAAM,GAAM,IAAM,GAAM,IAAM,IAC9B,IAAM,GAAM,IAAM,GAAM,IAAM,GAC9B,IAAM,IAAM,IAAM,EAAM,IAAM,GAC9B,IAAM,GAAM,IAAM,IAAM,IAAM,GAC9B,IAAM,GAAM,IAAM,GAAM,IAAM,IAC9B,IAAM,GAAM,IAAM,GAAM,IAAM,GAC9B,IAAM,IAAM,IAAM,GAAM,IAAM,GAC9B,IAAM,GAAM,IAAM,IAAM,KAE5B9R,KAAK+R,UAAY,SAAUpM,EAAKqM,EAAQC,EAAKC,EAAQC,GACjD,IAAK,IAAI7K,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAInH,EAAI2C,EAAU6M,UAAY,EAC1B9I,EAAI,MAAW,KAAYS,EAAI,GAC/Ba,EAAIrF,EAAU6M,UAAY,EAAI,EAClC,EAAG,CACC,IAAI0B,EAAID,EAAIG,EAAID,EAAI1N,EAChBnH,EAAqB,IAAjBqV,EAAO3J,GAAK,GAIpBiJ,GAFAC,EAAKhB,EAAS5T,GAAKyV,EAAOD,GAAKE,EAAS1V,EAAIoK,KAC5CjD,EAAIyM,EAAS,IAAO5T,GAAKyV,EAAOD,GAAKE,EAAS1V,EAAIoK,EAAI,MAEtDwK,GAAUzN,EAGV0N,GAFAC,EAAKlB,EAAS5T,EAAI,IAAQyV,EAAOD,GAAKE,EAAS1V,EAAIoK,EAAI,MACvDjD,EAAIyM,EAAS,GAAO5T,GAAKyV,EAAOD,GAAKE,EAAS1V,EAAIoK,EAAI,MAEtD0K,GAAU3N,EAEVzD,GAAK,EACL6R,EAAO1K,GAAGnH,EAAI,GAAKkR,EAAKE,EACxBS,EAAO1K,GAAGnH,EAAI,GAAKkR,EAAKE,EACxBS,EAAO1K,GAAGnH,EAAI,GAAKiR,EAAKE,EACxBU,EAAO1K,GAAGnH,EAAI,GAAKiR,EAAKE,EAIxBF,GAFAC,EAAKhB,EAAS5T,EAAI,GAAQyV,EAAOD,GAAKE,EAAS1V,EAAIoK,EAAI,KACvDjD,EAAIyM,EAAS,IAAO5T,GAAKyV,EAAOD,GAAKE,EAAS1V,EAAIoK,EAAI,MAEtDwK,GAAUzN,EAGV0N,GAFAC,EAAKlB,EAAS5T,EAAI,IAAQyV,EAAOD,GAAKE,EAAS1V,EAAIoK,EAAI,MACvDjD,EAAIyM,EAAS,GAAO5T,GAAKyV,EAAOD,GAAKE,EAAS1V,EAAIoK,EAAI,MAEtD0K,GAAU3N,EAEVoO,EAAO1K,GAAGnH,EAAI2C,EAAU6M,UAAY,EAAI,GAAK0B,EAAKE,EAClDS,EAAO1K,GAAGnH,EAAI2C,EAAU6M,UAAY,EAAI,GAAK0B,EAAKE,EAClDS,EAAO1K,GAAGnH,EAAI2C,EAAU6M,UAAY,EAAI,GAAKyB,EAAKE,EAClDU,EAAO1K,GAAGnH,EAAI2C,EAAU6M,UAAY,EAAI,GAAKyB,EAAKE,UAC3CnJ,GAAK,GAEhBoI,EAAIyB,EAAO1K,GAAInH,EAAG2C,EAAU6M,UAAY,KAMhD3P,KAAKoS,SAAW,SAAUzM,EAAKpF,EAAG0R,EAAKC,EAAQC,GAC3C,IAAIE,EAAKvP,EAAUyI,QAAU,EAAI,EAC7BpL,EAAI2C,EAAUyI,QAAU,EAE5B,EAAG,CACC,IAAI8F,EAAID,EAAIG,EAAID,EAAI1N,EAChBnH,EAAiB,IAAbqV,EAAOO,GAGfjB,GAFAC,EAAKjB,EAAO3T,GAAKyV,EAAOD,GAAKE,EAAS1V,KACtCmH,EAAIwM,EAAO3T,EAAI,KAASyV,EAAOD,GAAKE,EAAS1V,EAAI,MAEjD4U,GAAUzN,EAGV0N,GAFAC,EAAKnB,EAAO3T,EAAI,KAASyV,EAAOD,GAAKE,EAAS1V,EAAI,OAClDmH,EAAIwM,EAAO3T,EAAI,KAASyV,EAAOD,GAAKE,EAAS1V,EAAI,MAEjD8U,GAAU3N,EAGVrD,EAAM,GADNJ,GAAK,IACMkR,EAAKE,EAChBhR,EAAEJ,EAAI,GAAKkR,EAAKE,EAChBhR,EAAEJ,EAAI,GAAKiR,EAAKE,EAChB/Q,EAAEJ,EAAI,GAAKiR,EAAKE,EAIhBF,GAFAC,EAAKjB,EAAO3T,EAAI,GAASyV,EAAOD,GAAKE,EAAS1V,EAAI,KAClDmH,EAAIwM,EAAO3T,EAAI,KAASyV,EAAOD,GAAKE,EAAS1V,EAAI,MAEjD4U,GAAUzN,EAGV0N,GAFAC,EAAKnB,EAAO3T,EAAI,KAASyV,EAAOD,GAAKE,EAAS1V,EAAI,OAClDmH,EAAIwM,EAAO3T,EAAI,KAASyV,EAAOD,GAAKE,EAAS1V,EAAI,MAEjD8U,GAAU3N,EAEVrD,EAAEJ,EAAI2C,EAAUyI,QAAU,EAAI,GAAK8F,EAAKE,EACxChR,EAAEJ,EAAI2C,EAAUyI,QAAU,EAAI,GAAK8F,EAAKE,EACxChR,EAAEJ,EAAI2C,EAAUyI,QAAU,EAAI,GAAK6F,EAAKE,EACxC/Q,EAAEJ,EAAI2C,EAAUyI,QAAU,EAAI,GAAK6F,EAAKE,UACjCe,GAAM,GAEjB9B,EAAIhQ,EAAGJ,EAAG2C,EAAUyI,QAAU,IAIlCvL,KAAKsS,SAAW,SAAU3M,GAMtB,IAAK,IAAIlJ,EAAI,EAAGA,EAAIqG,EAAUyI,QAAS9O,IAEnC2T,EAAO3T,GAAM,IAAO,GAAM2D,KAAKmS,IAAI,EAAInS,KAAKoS,IAAM/V,EAAI,IAChDqG,EAAUyI,SAAW,IAAOnL,KAAKmS,IAAI,EAAInS,KAAKoS,IAAM/V,EAAI,IACxDqG,EAAUyI,SAEpB,IAAS9O,EAAI,EAAGA,EAAIqG,EAAU6M,UAAY,EAAGlT,IACzC4T,EAAS5T,GAAM,IAAO,EAAM2D,KAAKmS,IAAI,EAAMnS,KAAKoS,IACzC/V,EAAI,IAAOqG,EAAU6M,cAQpC8C,EAAYpR,EAAOoH,QACnBiK,EAAUrR,EAAOsR,MACjBC,EAAevR,EAAOwR,WACtBC,EAASzR,EAAOgB,KAChB0Q,EAAW1R,EAAOkB,OAClByQ,EAAc3R,EAAOoB,UACrBwQ,EAAgB5R,EAAOwG,YACvBqL,EAAY7R,EAAO0H,QACnBoK,EAAW9R,EAAO4H,OAsrFlBmK,EAjrFJ,WAEI,IAAIC,EAAM,IAAIlD,EAEVmD,EAAQ,kBAWRC,EAAY,EAAK,WAAmBzQ,EAAUyI,QAAU,GAiE5D,SAASiI,EAAuBzF,EAAQpI,GAGpC,IAFA,IAAI8N,EAAiB,EAEZhX,EAAI,EAAGA,EAAIqG,EAAUyI,QAAU,IAAK9O,EACzCgX,GAAkB1F,EAAOtR,GAAKkJ,EAAIgH,IAAI+G,MAAMjX,GAGhD,OAFAgX,GAAkBF,EAKtB,SAASI,EAAazJ,EAAK0J,EAAWC,EAAaC,EAASC,EAAYC,EAASC,EAAYC,EAAQjC,EAAKC,EAAQC,GAC9G,IAAIxM,EAAMuE,EAAIY,eACd,GAAImH,EAAM,EACNoB,EAAIjB,SAASzM,EAAKmO,EAAQC,GAAa9B,EAAKC,EAAQC,GACpDkB,EAAItB,UAAUpM,EAAKqO,EAAQC,GAAahC,EAAKC,EAAQC,QAGpD,GAAW,GAAPF,EAAU,CACf,IAAK,IAAI9J,EAAIrF,EAAUyI,QAAU,EAAGpD,GAAK,IAAKA,EAAG,CAC7C,IAAIlE,EAAI6P,EAAQC,EAAa,GAAG5L,GAC5BgM,EAAIL,EAAQC,EAAa,GAAG5L,GAChC2L,EAAQC,EAAa,GAAG5L,IAAMlE,EAAIkQ,GAAKrB,EAAO7S,MAAQ,GACtD6T,EAAQC,EAAa,GAAG5L,IAAMlE,EAAIkQ,GAAKrB,EAAO7S,MAAQ,GAE1D,IAAK,IAAIqH,EAAI,EAAGA,GAAK,IAAKA,EACtB,IAASa,EAAIrF,EAAU6M,UAAY,EAAGxH,GAAK,IAAKA,EACxClE,EAAI+P,EAAQC,EAAa,GAAG3M,GAAGa,GAC/BgM,EAAIH,EAAQC,EAAa,GAAG3M,GAAGa,GACnC6L,EAAQC,EAAa,GAAG3M,GAAGa,IAAMlE,EAAIkQ,GAAKrB,EAAO7S,MAAQ,GACzD+T,EAAQC,EAAa,GAAG3M,GAAGa,IAAMlE,EAAIkQ,GAAKrB,EAAO7S,MAAQ,GAWrE,IAHA2T,EAAU,GAA6BE,EAAQC,EAAa,GAAG,GAC/DH,EAAU,IAAMA,EAAU,GAEjBzL,EAAIrF,EAAUyI,QAAU,EAAI,EAAGpD,GAAK,IAAKA,EAAG,CACjD,IAAIiM,EAAMN,EAAQC,EAAa,GAAIjR,EAAUyI,QAAU,EAAIpD,GACvDkM,EAAMP,EAAQC,EAAa,GAAIjR,EAAUyI,QAAU,EAAIpD,GAC3DyL,EAAU9Q,EAAUyI,QAAU,EAAIpD,GACZ,IAD0CiM,EAC1DA,EAAKC,EAAKA,GAEpB,IAAS/M,EAAI,EAAGA,GAAK,IAAKA,EAGtB,IAFAuM,EAAYvM,GAAG,GAAM0M,EAAQC,EAAa,GAAI3M,GAAG,GACjDuM,EAAYvM,GAAG,IAAMuM,EAAYvM,GAAG,GAC3Ba,EAAIrF,EAAU6M,UAAY,EAAI,EAAGxH,GAAK,IAAKA,EAC5CiM,EAAMJ,EAAQC,EAAa,GAAI3M,GAAGxE,EAAU6M,UAC9C,EAAIxH,GACFkM,EAAML,EAAQC,EAAa,GAAI3M,GAAGxE,EAAU6M,UAC9C,EAAIxH,GACN0L,EAAYvM,GAAGxE,EAAU6M,UAAY,EAAIxH,GACnB,IADiDiM,EACjEA,EAAKC,EAAKA,GAKpB,IAAIC,EAAc,EAClB,IAASnM,EAAI,GAAIA,EAAIrF,EAAU4M,SAAUvH,IACrCmM,GAAeV,EAAUzL,GAKjC,GAHIxC,EAAIoF,SAASkH,GAAOqC,EAGpBpK,EAAIyD,SAAU,CACd,IAASxF,EAAI,EAAGA,EAAIrF,EAAU4M,SAAUvH,IACpCxC,EAAIiI,MAAMG,OAAOmG,GAAQjC,GAAK9J,GAAKxC,EAAIiI,MAAM2G,YAAYtC,GAAK9J,GAC9DxC,EAAIiI,MAAM2G,YAAYtC,GAAK9J,GAAKyL,EAAUzL,GAE9CxC,EAAIiI,MAAM3C,GAAGiJ,GAAQjC,GAAOtM,EAAIsF,GAAGgH,GAMX,GAAxB/H,EAAIsK,kBAAyBvC,EAAM,IAEnCtM,EAAIkH,YAAYqH,GAAQjC,GAAOtM,EAAI8O,iBAAiBxC,GACpDtM,EAAI8O,iBAAiBxC,GAAOuB,EAAuBI,EAAWjO,IAyBtE,IAUI+O,EACAC,EACAC,EAUAC,EAAM,CAAC,EAAK,OAAS,OAAS,OAC9B,OAAS,OAAS,OAAS,OAAS,QAQpCC,EAAS,CAAC,OAAS,OACnB,QAAU,QAAS,aAAmB,aACtC,aAAmB,aAAmB,QAAU,QAChD,MAAQ,MAAO,aAAmB,QAAU,QAC5C,QAAU,QAAS,QAAU,QAAS,aACtC,aAAmB,QAAU,QAAS,QAAU,QAChD,aAAmB,aAAmB,QAAU,QAChD,aAAmB,QAAU,QAAS,OAAS,OAC/C,aAAmB,aAAmB,GAEtCC,EAAS,CAAC,aACV,QAAU,QAAS,QAAU,QAAS,QAAU,QAChD,QAAU,QAAS,OAAS,OAAQ,aACpC,QAAU,QAAS,aAAmB,GAEtCC,EAAS,CAAC,aACV,QAAU,QAAS,aAAmB,QAAU,QAChD,QAAU,QAAS,QAAU,QAAS,QAAU,QAChD,QAAU,QAAS,aAAmB,QAAU,QAChD,QAAU,QAAS,QAAU,QAAS,aACtC,cAKJ,SAASC,EAASC,EAAIC,EAAIC,EAAI9N,EAAG3B,EAAK0P,GAClC,IAAIC,EAmDQtH,EAAGmG,EAjDf,GAAIgB,EAAKD,EAAI,CACT,KAAIC,EAAMD,EAAKP,GAGX,OAAQO,EAAKC,EAFbG,EAAQH,EAAKD,MAGd,CACH,GAAIA,GAAOC,EAAKR,EACZ,OAAQO,EAAKC,EACjBG,EAAQJ,EAAKC,EASjB,GALAhC,EAAS+B,GAAM,GACf/B,EAASgC,GAAM,GAEfD,GAAMC,EAED7N,EAAI,GAAM,EAAO,CAIlB,GAAIgO,GAASZ,EAET,OAAOQ,EAIX,IAAIzY,EAAI,EAAKqW,EAAOxS,aAAagV,EAAO,IACxC,OAAOJ,EAAKH,EAAOtY,GAiBvB,OAPIA,EAAI,EAAIqW,EAAOxS,aAAagV,EAAO,IAEnCH,EADc,GAAdE,EACK1P,EAAIgH,IAAI4I,KAAKH,GAAMzP,EAAIgH,IAAIK,OAE3BrH,EAAIgH,IAAI6I,KAAKJ,GAAMzP,EAAIgH,IAAIK,OAEpCmG,EAASgC,GAAM,GACXD,EAAKN,EAAWO,EAGZD,EAAKC,GAGLnH,EAAI,EACAvR,GAAK,KACLuR,EAAIgH,EAAOvY,IAEf0X,EAAIrB,EAAOxS,aAAa4U,EAAKC,EAAI,GAAO,IACjCD,IAAOJ,EAAOrY,GAAKuR,GAAKmG,EAAInG,IAGnCvR,EAAI,GACGyY,EAEJA,EAAKF,EAAOvY,GAIhByY,EAAKJ,EAAOrY,GAGvB,IAAIgZ,EAAU,CAAC,aACX,QAAU,QAAS,QAAU,QAAS,QAAU,QAChD,QAAU,QAAS,OAAS,OAAQ,aACpC,QAAU,QAAS,aAAmB,GAK1C,SAASC,EAAgBR,EAAIC,EAAI7N,GAC7B,IAAIgO,EAQJ,GANIJ,EAAK,IACLA,EAAK,GAELC,EAAK,IACLA,EAAK,GAELD,GAAM,EACN,OAAOC,EAEX,GAAIA,GAAM,EACN,OAAOD,EAOX,GAJII,EADAH,EAAKD,EACGC,EAAKD,EAELA,EAAKC,GAEZ,GAAK7N,GAAKA,GAAK,EAAG,CAGnB,GAAIgO,GAASZ,EACT,OAAOQ,EAAKC,EAEZ,IAAI1Y,EAAI,EAAKqW,EAAOxS,aAAagV,EAAO,IACxC,OAAQJ,EAAKC,GAAMM,EAAQhZ,GAGnC,OAAI6Y,EAAQX,EACDO,EAAKC,GAEZD,EAAKC,IACLD,EAAKC,GAEFD,GA6HX,SAASS,EAA6BhQ,EAAKiQ,EAAIC,EAAK5D,EAAK6D,GACrD,IAAIC,EAAIzO,EACJ0O,EAAM,EACNC,EAAO,EACX,IAAKF,EAAKzO,EAAI,EAAGyO,EAAKjT,EAAUkF,UAAWV,IAAKyO,EAAI,CAIhD,IAHA,IAAIG,EAAUvQ,EAAIwQ,KAAKJ,GACnBK,EAAUzQ,EAAIyQ,QACdC,EAAQH,EAAUE,EAAUF,EAAUE,EACnC9O,EAAI+O,GACPlD,EAASyC,EAAGtO,IAAM,GAElB6L,EAAS0C,EAAIvO,IAAM,GACnB0O,GAAOJ,EAAGtO,GACV2O,GAAQJ,EAAIvO,GACZA,IAKJ,GAHA3B,EAAI2C,GAAG2J,GAAKvU,EAAEqY,GAAID,GAAUE,EAC5BrQ,EAAI0C,IAAI4J,GAAKvU,EAAEqY,GAAID,GAAUG,EAEzB3O,GAAK8O,EAAS,GACZL,EACF,MAEJ5C,EAASyC,EAAGtO,IAAM,GAElB6L,EAAS0C,EAAIvO,IAAM,GAGf,IAAIgP,EAAS3Q,EAAI4Q,IAAIC,YAAYT,GAC7BU,EAAS,EAAMH,EACnBN,EAAMM,EAASV,EAAGtO,GAClB2O,EAAOK,EAAST,EAAIvO,GACpB3B,EAAI2C,GAAG2J,GAAKvU,EAAEqY,GAAID,IAAWE,EAC7BrQ,EAAI0C,IAAI4J,GAAKvU,EAAEqY,GAAID,IAAWG,EAC9BD,EAAMS,EAASb,EAAGtO,GAClB2O,EAAOQ,EAASZ,EAAIvO,GAI5B,KAAOyO,EAAKjT,EAAUkF,UAAW+N,EAC7BpQ,EAAI2C,GAAG2J,GAAKvU,EAAEqY,GAAID,GAAU,EAC5BnQ,EAAI0C,IAAI4J,GAAKvU,EAAEqY,GAAID,GAAU,EAOrC,SAASY,EAA6B/Q,EAAKiQ,EAAIC,EAAK5D,GAChD,IAAI8D,EAAIzO,EACJ0O,EAAM,EACNC,EAAO,EACX,IAAKF,EAAKzO,EAAI,EAAGyO,EAAKjT,EAAUiF,UAAWT,IAAKyO,EAAI,CAIhD,IAHA,IAAIY,EAAUhR,EAAIiR,KAAKb,GACnBc,EAAUlR,EAAIkR,QACdR,EAAQM,EAAUE,EAAUF,EAAUE,EACnCvP,EAAI+O,GACPlD,EAASyC,EAAGtO,IAAM,GAElB6L,EAAS0C,EAAIvO,IAAM,GACnB0O,GAAOJ,EAAGtO,GACV2O,GAAQJ,EAAIvO,GACZA,IAKJ,GAHA3B,EAAI2C,GAAG2J,GAAKhO,EAAE8R,GAAMC,EACpBrQ,EAAI0C,IAAI4J,GAAKhO,EAAE8R,GAAME,EAEjB3O,GAAKuP,EAAS,GACZd,EACF,MAEJ5C,EAASyC,EAAGtO,IAAM,GAClB6L,EAAS0C,EAAIvO,IAAM,GAGf,IAAIgP,EAAS3Q,EAAI4Q,IAAIO,YAAYf,GAC7BU,EAAS,EAAMH,EACnBN,EAAMM,EAASV,EAAGtO,GAClB2O,EAAOK,EAAST,EAAIvO,GACpB3B,EAAI2C,GAAG2J,GAAKhO,EAAE8R,IAAOC,EACrBrQ,EAAI0C,IAAI4J,GAAKhO,EAAE8R,IAAOE,EACtBD,EAAMS,EAASb,EAAGtO,GAClB2O,EAAOQ,EAASZ,EAAIvO,GAI5B,KAAOyO,EAAKjT,EAAUiF,UAAWgO,EAC7BpQ,EAAI2C,GAAG2J,GAAKhO,EAAE8R,GAAM,EACpBpQ,EAAI0C,IAAI4J,GAAKhO,EAAE8R,GAAM,EAI7B,SAASgB,EAAkB7M,EAAK2J,EAAa+B,EAAIC,EAAK5D,EAAK6D,GACvD,IACI3N,EAAGb,EADH3B,EAAMuE,EAAIY,eAGd,IAAKxD,EAAIa,EAAI,EAAGb,EAAI3B,EAAIyQ,UAAW9O,EAAG,CAGlC,IAFA,IAAI0P,EAAM,EAAGC,EAAI,EACbra,EAAI+I,EAAIuR,WAAW5P,GACd7K,EAAI,EAAGA,EAAIG,IAAKH,IAAK0L,EAAG,CAC7B,IAAIgP,EAAKtD,EAAYiC,GAAQ3N,GAC7B6O,GAAOG,EACHF,EAAIE,IACJF,EAAIE,GAEZvB,EAAGtO,GAAK0P,EAIZ,IAFA7D,EAAS7L,GAAK3B,EAAIyQ,SAClBjD,EAAc,KAALhL,GACJA,EAAIb,EAAI,EAAGA,EAAI3B,EAAIyQ,QAAS9O,IAAK,CAClC,IAAI8N,EAAKzP,EAAIyR,QAAQ9P,GAAG,GACpB+P,EAAM1R,EAAI2R,MAAMnP,KAAOyN,EAAGR,GAE9B,MADEA,EACKA,GAAMzP,EAAIyR,QAAQ9P,GAAG,IACxB+P,GAAO1R,EAAI2R,MAAMnP,GAAKyN,EAAGR,KACvBjN,IACAiN,EAIF,IAAIjV,EAnlBD,EAmlBgBwF,EAAI4R,MAAMtF,GAAK3K,GAGtC,GAFIuO,EAAIvO,GAAKlH,KAAKoX,IAAIH,EAAKlX,GAEvBwF,EAAI8R,cAAoB,EAANxF,IAAYnP,EAAUC,WAAY,CAEhD5C,EAvlBA,GAulBgBwF,EAAI+R,MAAMzF,GAAK3K,GAAnC,IACI/G,EAAIsV,EAAIvO,GACZuO,EAAIvO,GAAKlH,KAAKoX,IAAIrX,EAAGI,GAGzBoF,EAAI+R,MAAMzF,GAAK3K,GAAK3B,EAAI4R,MAAMtF,GAAK3K,GACnC3B,EAAI4R,MAAMtF,GAAK3K,GAAK+P,EACpBlE,EAAS0C,EAAIvO,IAAM,GAEvB,KAAOA,GAAKxE,EAAUuM,SAAU/H,EAC5BsO,EAAGtO,GAAK,EACRuO,EAAIvO,GAAK,EAgDjB,SAASqQ,EAAUxX,EAAGI,EAAG4T,GAErB,OAAIA,GAAK,EAEEhU,EAEPgU,GAAK,EACE5T,EACPA,EAAI,EAEIH,KAAKwX,IAAIzX,EAAII,EAAG4T,GAAK5T,EAG1B,EAMX,IAAIsX,EAAY,CAAC,KAAM,KAAM,KAAM,GAAI,KACnC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAIxC,SAASC,EAASC,EAAIC,GAElB,IADA,IAAIC,EAAO,OACFlC,EAAK,EAAGA,EAAKjT,EAAUkF,QAAU,EAAG+N,IACzC,IAAK,IAAID,EAAS,EAAGA,EAAS,EAAGA,IAAU,CACvC,IAAIzN,EAAM0P,EAAG1P,IAAI3K,EAAEqY,GAAID,GAEvB,GADA3C,EAAS4C,EAAK8B,EAAUja,QACpByK,EAAM,EAAK,CACX,IAAIlI,EAAIkI,EAAM2P,EACV1P,EAAKyP,EAAGzP,GAAG5K,EAAEqY,GAAID,GACjBxN,EAAKnI,IACDmI,EAAS,KAAJnI,EACL8X,GAAQJ,EAAU9B,IAAO,GAAOzC,IAEhCH,EAAShT,EAAI,GACb8X,GAAQJ,EAAU9B,GAAMjD,EAAO5S,WAAWoI,EAAKnI,MAOnE,OAAO8X,EAMX,IAAIC,EAAY,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IACtC,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KACpD,KAAM,KAAM,KAAM,KAAM,OAI5B,SAASC,EAASJ,EAAIC,GAElB,IADA,IAAII,EAAO,SACFrC,EAAK,EAAGA,EAAKjT,EAAUiF,QAAU,EAAGgO,IAAM,CAC/C,IAAI1N,EAAM0P,EAAG1P,IAAIpE,EAAE8R,GAEnB,GADA5C,EAAS4C,EAAKmC,EAAUta,QACpByK,EAAM,EAAK,CACX,IAAIlI,EAAIkI,EAAM2P,EACV1P,EAAKyP,EAAGzP,GAAGrE,EAAE8R,GACbzN,EAAKnI,IACDmI,EAAS,KAAJnI,EACLiY,GAAQF,EAAUnC,IAAO,GAAOzC,IAEhCH,EAAShT,EAAI,GACbiY,GAAQF,EAAUnC,GAAMjD,EAAO5S,WAAWoI,EAAKnI,MAK/D,OAAOiY,EAGX,SAASC,EAAY1S,EAAKiO,EAAWgC,EAAI9I,EAAKwL,GAC1C,IAAIhR,EAAGa,EAEP,IAAKb,EAAIa,EAAI,EAAGb,EAAI3B,EAAIkR,UAAWvP,EAAG,CAClC,IACI7K,EADAua,EAAM,EAAGC,EAAI,EAEjB,IAAKxa,EAAI,EAAGA,EAAIkJ,EAAI4S,WAAWjR,KAAM7K,IAAK0L,EAAG,CACzC,IAAIgP,EAAKvD,EAAUzL,GACnBgL,EAASgE,GAAM,GACfH,GAAOG,EACHF,EAAIE,IACJF,EAAIE,GAEZvB,EAAGtO,GAAK0P,EACRlK,EAAIxF,GAAK2P,EACTqB,EAAIhR,GAAK0P,EAAMrR,EAAI6S,YAAYlR,GAC/B6L,EAASxN,EAAI6S,YAAYlR,IAAM,GAC/B6L,EAAS6D,GAAO,GAChB7D,EAASyC,EAAGtO,IAAM,GAClB6L,EAASrG,EAAIxF,IAAM,GACnB6L,EAASmF,EAAIhR,IAAM,IAI3B,SAASmR,EAAkB9S,EAAKmH,EAAKwL,EAAKI,GACtC,IAAIC,EAAiB9D,EAAIjX,OAAS,EAC9B0J,EAAI,EACJlI,EAAIkZ,EAAIhR,GAAKgR,EAAIhR,EAAI,GAiBzB,IAhBA6L,EAAS/T,GAAK,GACVA,EAAI,IACA6X,EAAInK,EAAIxF,IACJwF,EAAIxF,EAAI,KACZ2P,EAAInK,EAAIxF,EAAI,IAChB6L,EAAUxN,EAAI4S,WAAWjR,GAAK3B,EAAI4S,WAAWjR,EAAI,GAAK,EAAK,IAGvDT,EAAI,GAFRzH,EAAI,IAAY,EAAJ6X,EAAU7X,IACfA,GAAKuG,EAAI4S,WAAWjR,GAAK3B,EAAI4S,WAAWjR,EAAI,GAAK,MAEhDqR,IACJ9R,EAAI8R,GACRD,EAASpR,GAAKT,GAEd6R,EAASpR,GAAK,EAGbA,EAAI,EAAGA,EAAI3B,EAAIkR,QAAU,EAAGvP,IAAK,CAI9B,IAAI2P,EAUApQ,EAbRzH,EAAIkZ,EAAIhR,EAAI,GAAKgR,EAAIhR,GAAKgR,EAAIhR,EAAI,GAClC6L,EAAS/T,GAAK,GACVA,EAAI,IACA6X,EAAInK,EAAIxF,EAAI,IACRwF,EAAIxF,KACR2P,EAAInK,EAAIxF,IACR2P,EAAInK,EAAIxF,EAAI,KACZ2P,EAAInK,EAAIxF,EAAI,IAChB6L,EAAUxN,EAAI4S,WAAWjR,EAAI,GAAK3B,EAAI4S,WAAWjR,GAAK3B,EAAI4S,WAAWjR,EAAI,GAAK,EAAK,IAK/ET,EAAI,GAJRzH,EAAI,IACO,EAAJ6X,EAAU7X,IACVA,GAAKuG,EAAI4S,WAAWjR,EAAI,GAAK3B,EAAI4S,WAAWjR,GAC7C3B,EAAI4S,WAAWjR,EAAI,GAAK,MAEtBqR,IACJ9R,EAAI8R,GACRD,EAASpR,GAAKT,GAEd6R,EAASpR,GAAK,EAGtB6L,EAAS7L,EAAI,GACb6L,EAAS7L,GAAK3B,EAAIkR,QAAU,GAE5BzX,EAAIkZ,EAAIhR,EAAI,GAAKgR,EAAIhR,GACrB6L,EAAS/T,GAAK,GACVA,EAAI,IACA6X,EAAInK,EAAIxF,EAAI,IACRwF,EAAIxF,KACR2P,EAAInK,EAAIxF,IACZ6L,EAAUxN,EAAI4S,WAAWjR,EAAI,GAAK3B,EAAI4S,WAAWjR,GAAK,EAAK,IAGvDT,EAAI,GAFRzH,EAAI,IAAY,EAAJ6X,EAAU7X,IACfA,GAAKuG,EAAI4S,WAAWjR,EAAI,GAAK3B,EAAI4S,WAAWjR,GAAK,MAEhDqR,IACJ9R,EAAI8R,GACRD,EAASpR,GAAKT,GAEd6R,EAASpR,GAAK,EAElB6L,EAAS7L,GAAM3B,EAAIkR,QAAU,GAGjC,IAAI1I,EAAU,EACV,aAAkB,WAAiB,YAAkB,UACrD,YAAkB,UAAgB,UAAkB,UACpD,aAAkB,SAoYtB,SAASyK,EAAqB1O,EAAKgI,EAAQC,EAAQF,EAAKiC,EAAQN,EAAWE,EAASC,GAChF,IAAIpO,EAAMuE,EAAIY,eACd,GAAImH,EAAM,EACNoB,EAAIjB,SAASzM,EAAKmO,EAAQC,GAAa9B,EAAKC,EAAQC,QACjD,GAAW,GAAPF,EAEP,IAAK,IAAI9J,EAAIrF,EAAUyI,QAAU,EAAGpD,GAAK,IAAKA,EAAG,CAC7C,IAAIlE,EAAI6P,EAAQC,EAAa,GAAG5L,GAC5BgM,EAAIL,EAAQC,EAAa,GAAG5L,GAChC2L,EAAQC,EAAa,GAAG5L,IAAMlE,EAAIkQ,GAAKrB,EAAO7S,MAAQ,GACtD6T,EAAQC,EAAa,GAAG5L,IAAMlE,EAAIkQ,GAAKrB,EAAO7S,MAAQ,GAU9D,IAHA2T,EAAU,GAA6BE,EAAQC,EAAa,GAAG,GAC/DH,EAAU,IAAMA,EAAU,GAEjBzL,EAAIrF,EAAUyI,QAAU,EAAI,EAAGpD,GAAK,IAAKA,EAAG,CACjD,IAAIiM,EAAKN,EAAQC,EAAa,GAAGjR,EAAUyI,QAAU,EAAIpD,GACrDkM,EAAKP,EAAQC,EAAa,GAAGjR,EAAUyI,QAAU,EAAIpD,GACzDyL,EAAU9Q,EAAUyI,QAAU,EAAIpD,GACZ,IAD0CiM,EAC1DA,EAAKC,EAAKA,GAIhB,IAAIC,EAAc,EAClB,IAASnM,EAAI,GAAIA,EAAIrF,EAAU4M,SAAUvH,IACrCmM,GAAeV,EAAUzL,GAKjC,GAHIxC,EAAIoF,SAASkH,GAAOqC,EAGpBpK,EAAIyD,SAAU,CACd,IAASxF,EAAI,EAAGA,EAAIrF,EAAU4M,SAAUvH,IACpCxC,EAAIiI,MAAMG,OAAOmG,GAAQjC,GAAK9J,GAAKxC,EAAIiI,MAAM2G,YAAYtC,GAAK9J,GAC9DxC,EAAIiI,MAAM2G,YAAYtC,GAAK9J,GAAKyL,EAAUzL,GAE9CxC,EAAIiI,MAAM3C,GAAGiJ,GAAQjC,GAAOtM,EAAIsF,GAAGgH,IAI3C,SAAS4G,EAAqB3O,EAAKgI,EAAQC,EAAQF,EAAK6D,EAAQjC,EAAaG,EAASC,GAClF,IAAItO,EAAMuE,EAAIY,eAKd,GAHc,GAAVgL,GAAe7D,EAAM,GACrBoB,EAAItB,UAAUpM,EAAKqO,EAAQC,GAAahC,EAAKC,EAAQC,GAE9C,GAAPF,EAEA,IAAK,IAAI9J,EAAIrF,EAAU6M,UAAY,EAAGxH,GAAK,IAAKA,EAAG,CAC/C,IAAIlE,EAAI+P,EAAQC,EAAa,GAAG6B,GAAQ3N,GACpCgM,EAAIH,EAAQC,EAAa,GAAG6B,GAAQ3N,GACxC6L,EAAQC,EAAa,GAAG6B,GAAQ3N,IAAMlE,EAAIkQ,GAAKrB,EAAO7S,MAAQ,GAC9D+T,EAAQC,EAAa,GAAG6B,GAAQ3N,IAAMlE,EAAIkQ,GAAKrB,EAAO7S,MAAQ,GAStE,IAFA4T,EAAYiC,GAAQ,GAAK9B,EAAQC,EAAa,GAAG6B,GAAQ,GACzDjC,EAAYiC,GAAQ,IAAMjC,EAAYiC,GAAQ,GACrC3N,EAAIrF,EAAU6M,UAAY,EAAI,EAAGxH,GAAK,IAAKA,EAAG,CACnD,IAAIiM,EAAKJ,EAAQC,EAAa,GAAG6B,GAAQhT,EAAU6M,UAAY,EAAIxH,GAC/DkM,EAAKL,EAAQC,EAAa,GAAG6B,GAAQhT,EAAU6M,UAAY,EAAIxH,GACnE0L,EAAYiC,GAAQhT,EAAU6M,UAAY,EAAIxH,GACxB,IADsDiM,EACtEA,EAAKC,EAAKA,IAOxB,SAASyE,EAAwC5O,EAAKgK,EAAQjC,EAAK2B,GAC/D,IAAIjO,EAAMuE,EAAIY,eACc,GAAxBZ,EAAIsK,kBAAyBvC,EAAM,IAEnCtM,EAAIkH,YAAYqH,GAAQjC,GAAOtM,EAAI8O,iBAAiBxC,GACpDtM,EAAI8O,iBAAiBxC,GAAOuB,EAAuBI,EAAWjO,IAldtE3F,KAAKmM,iBAAmB,SAAUjC,EAAKgI,EAAQC,EAAQ+B,EAAQ6E,EAAeC,EAAkBC,EAAgBC,EAAmBnL,EAAQoL,GAKvI,IAeIC,EAAQnH,EACR3K,EAAG7K,EAAG0L,EAAGtB,EACTkP,EAAID,EAIJuD,EAuTIC,EA5UJ3T,EAAMuE,EAAIY,eAGVyO,EAAUtG,EAAc,CAAC,EAAGnQ,EAAUyI,UACtCiO,EAAUvG,EAAc,CAAC,EAAG,EAAGnQ,EAAU6M,YAGzC8J,EAAOzG,EAAYlQ,EAAUuM,OAAS,GACtCqK,EAAO1G,EAAYlQ,EAAUuM,OAAS,GACtCwG,EAAM7C,EAAYlQ,EAAUuM,OAAS,GAGrCrD,EAAYkH,EAAU,GAAIyG,EAAezG,EAAU,GAQnD0G,EAAa3G,EAAc,CAAC,EAAG,MAE/B4G,EAAa3G,EAAUpQ,EAAUuM,OAAS,GAAIyK,EAAa5G,EAAUpQ,EAAUuM,OAAS,GAwB5F,IAtBA0D,EAAS3L,KAAK0S,EAAY,GAE1BV,EAASzT,EAAIM,aAETiE,EAAIkC,MAAQC,SAASC,eACrB8M,EAAS,GAGTC,EADAnP,EAAI+B,KAAOwG,EAAU1R,QACG,GAAf4E,EAAIoU,QAAe,EAAMpU,EAAIqU,SACpCrU,EAAIoU,QAAU,GACX7P,EAAI+B,KAAOwG,EAAUxR,QAAUiJ,EAAI+B,KAAOwG,EAAUtR,UACtD+I,EAAI+B,KAAOwG,EAAUzR,OACf,GAEA,EAQRiR,EAAM,EAAGA,EAAMtM,EAAIM,aAAcgM,IAAO,CAEzC,IAAIgI,EAAS/H,EAAOD,GAChBiI,EAAY/H,EAAS,IAAM,IAj2BxB,GAi2ByC,IAEhD,IADAgB,EAA4B,IAAnBhF,EAAQvQ,QACZnB,EAAI,EAAGA,EAAI,IAAKA,IAAK,CACtB,IAAI0d,EAAMC,GAGV,IAFAD,EAAOF,EAAOC,EAAYzd,EAAI,IAC9B2d,GAAO,EACFjS,EAAI,EAAGA,EAAK,EAAyBA,GAAK,EAC3CgS,GAAQhM,EAAQhG,IACT8R,EAAOC,EAAYzd,EAAI0L,GAAK8R,EAAOC,EAAYzd,EAz2BvD,GA02BkB0L,IACjBiS,IAAQjM,EAAQhG,EAAI,IACb8R,EAAOC,EAAYzd,EAAI0L,EAAI,GAAK8R,EAAOC,EACxCzd,EA72BP,GA62BsB0L,EAAI,IAE7ByR,EAAW3H,GAAKxV,GAAK0d,EAAOC,GAEhCrB,EAAc7E,GAAQjC,GAAK3J,GAAGlM,OAAOuJ,EAAI2C,GAAG2J,IAC5C8G,EAAc7E,GAAQjC,GAAK5J,IAAIjM,OAAOuJ,EAAI0C,IAAI4J,IAC1CmH,EAAS,IAGTJ,EAAiB9E,GAAQjC,GAAK3J,GAAGlM,OAAOuJ,EAAI2C,GAAG2J,EAAM,IACrD+G,EAAiB9E,GAAQjC,GAAK5J,IAAIjM,OAAOuJ,EAAI0C,IAAI4J,EAAM,KAI/D,IAAKA,EAAM,EAAGA,EAAMmH,EAAQnH,IAAO,CAC/B,IAMIoI,GAJAC,GAActH,EAAY,IAC1BuH,GAAW,CAAC,EAAG,EAAG,EAAG,GACrBC,GAAmBxH,EAAY,IAC/ByH,GAAkB,EAElB3N,GAAMkG,EAAYlQ,EAAUuM,QAASiJ,GAAMtF,EAAYlQ,EAAUuM,QACjEqL,GAAa,CAAC,EAAG,EAAG,EAAG,GACvB9G,GAAYZ,EAAYlQ,EAAU4M,UAClCmE,GAAcZ,EAAc,CAAC,EAAGnQ,EAAU8M,aAc9C,IAPAuD,EAASxN,EAAIyQ,SAAWtT,EAAUuM,QAClC8D,EAASxN,EAAIkR,SAAW/T,EAAUuM,QAM7B5S,EAAI,EAAGA,EAAI,EAAGA,IACf6d,GAAY7d,GAAKkJ,EAAIsI,MAAM0M,iBAAiB1I,GAAKxV,EAAI,GACrD0W,EAASxN,EAAIsI,MAAM0M,iBAAiB1I,GAAKxV,EAAI,GAAK,GAClD+d,GAAiB/d,GAAK6d,GAAY7d,GAC5BkJ,EAAIsI,MAAM0M,iBAAiB1I,GAAKxV,EAAI,GAC1C8d,GAAS,IAAMD,GAAY7d,GAG/B,GAAW,GAAPwV,EACA,IAAKxV,EAAI,EAAGA,EAAI,IAAKA,IAAK,CACtB,IAAIwH,GAAGkQ,GACPlQ,GAAI2V,EAAW,GAAGnd,GAClB0X,GAAIyF,EAAW,GAAGnd,GAClBmd,EAAW,GAAGnd,GAAKwH,GAAIkQ,GACvByF,EAAW,GAAGnd,GAAKwH,GAAIkQ,GAI3B,IAAIyG,GAAKhB,EAAiB,EAAN3H,GAChB4I,GAAQ,EACZ,IAAKpe,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAGpB,IAFA,IAAIqe,GAAMD,GAAQ,GACdE,GAAI,EACDF,GAAQC,GAAKD,KACZE,GAAI3a,KAAK4a,IAAIJ,GAAGC,OAChBE,GAAI3a,KAAK4a,IAAIJ,GAAGC,MAExBlV,EAAIsI,MAAM0M,iBAAiB1I,GAAKxV,GAAK6d,GAAY7d,EAAI,GAAKse,GAC1DR,GAAS,EAAI9d,EAAI,IAAMse,GACnBA,GAAIT,GAAY7d,EAAI,EAAI,IACxB0W,EAASmH,GAAY7d,EAAI,EAAI,GAAK,GAClCse,IAAQT,GAAY7d,EAAI,EAAI,IACrB6d,GAAY7d,EAAI,EAAI,GAAS,GAAJse,IAChC5H,EAAS4H,GAAI,GACbA,GAAIT,GAAY7d,EAAI,EAAI,IAAU,GAAJse,KAE9BA,GAAI,EACRP,GAAiB/d,EAAI,GAAKse,GAIlC,GAAI7Q,EAAIyD,SAAU,CACd,IAAIxN,GAAIqa,GAAiB,GACzB,IAAK/d,EAAI,EAAGA,EAAI,GAAIA,IACZ0D,GAAIqa,GAAiB/d,KACrB0D,GAAIqa,GAAiB/d,IAC7BkJ,EAAIiI,MAAME,IAAIoG,GAAQjC,GAAOtM,EAAIiI,MAAMqN,SAAShJ,GAChDtM,EAAIiI,MAAMqN,SAAShJ,GAAO9R,GAM9B,IAFAka,GAA0B,GAAPpI,EAAYtM,EAAIsI,MAAMiN,aACnCvV,EAAIsI,MAAMkN,WACX1e,EAAI,EAAGA,EAAI,GAAIA,IACZ,GAAKie,GAAWje,EAAI,IACjB+d,GAAiB/d,GAAK4d,KACzBK,GAAWje,EAAI,GAAMA,EAAI,EAAK,GAMtC,IAAKA,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACpB,IAAI6Y,GACAiF,GAAS9d,EAAI,GAAK8d,GAAS9d,IAC3B0W,EAASoH,GAAS9d,GAAK,GACvB6Y,GAAQiF,GAAS9d,EAAI,GAAK8d,GAAS9d,KAEnC0W,EAASoH,GAAS9d,EAAI,GAAK,GAC3B6Y,GAAQiF,GAAS9d,GAAK8d,GAAS9d,EAAI,IAEnC6Y,GAAQ,MACRoF,GAAWje,GAAK,EACP,GAALA,IACAie,GAAW,GAAK,IA+C5B,IA3CqB,GAAjBA,GAAW,IAAyC,GAA9B/U,EAAIsI,MAAMmN,YAAYnJ,KAC5CyI,GAAW,GAAK,GAEc,GAA9B/U,EAAIsI,MAAMmN,YAAYnJ,IAClByI,GAAW,GAAKA,GAAW,GAAKA,GAAW,GAAKA,GAAW,IAAO,IACtED,GAAkB,EAEG,GAAjBC,GAAW,IAA4B,GAAjBA,GAAW,KACjCA,GAAW,GAAK,GACC,GAAjBA,GAAW,IAA4B,GAAjBA,GAAW,KACjCA,GAAW,GAAK,GACC,GAAjBA,GAAW,IAA4B,GAAjBA,GAAW,KACjCA,GAAW,GAAK,IAGpBzI,EAAM,EACN0H,EAAa1H,GAAOwI,GAEG,GAAnBA,KACAd,EAAa,GAAKA,EAAa,GAAK,GAQ5C5L,EAAOkE,GAAOtM,EAAIoF,SAASkH,GAO3B0B,EAAazJ,EAAK0J,GAAWC,GADnB0F,EACgD,EAANtH,EAF1CuH,EAGU,EAANvH,EAAUiC,EAAQjC,EAAKC,EAAQC,GAK7CkG,EAAY1S,EAAKiO,GAAW6F,EAAM3M,GAAKwL,IACvCG,EAAkB9S,EAAKmH,GAAKwL,GAAKuB,GAE5B/D,EAAS,EAAGA,EAAS,EAAGA,IAAU,CACnC,IAAIE,GAAKC,GAIT,IAHAc,EAAkB7M,EAAK2J,GAAa6F,EAAM7D,EAAK5D,EAAK6D,GACpDH,EAA6BhQ,EAAK+T,EAAM7D,EAAK5D,EAAK6D,GAE7CC,EAAK,EAAGA,EAAKjT,EAAUkF,QAAS+N,IAAM,CAIvC,GAHAE,GAAOtQ,EAAI0C,IAAI4J,GAAKvU,EAAEqY,GAAID,GAE1BG,IA9hCM,GA+hCFyE,GAAW5E,IAAW,GAA+B,GAA1B4E,GAAW5E,EAAS,GAAS,CACxD,IAAIuF,GAAiB,GAAVvF,EAAeA,EAAS,EAAI,EACnCiF,GAAIpD,EAAUhS,EAAI0C,IAAI4J,GAAKvU,EAAEqY,GAAIsF,IAAMpF,GAhiCzC,GAiiCoBoD,GACtBpD,GAAO7V,KAAKoX,IAAIvB,GAAM8E,IAGA,GAAtBL,GAAW5E,IACPuF,GAAiB,GAAVvF,EAAeA,EAAS,EAAI,EACnCiF,GAAIpD,EAAUhS,EAAI0C,IAAI4J,GAAKvU,EAAEqY,GAAIsF,IAAMpF,GAtiCzC,GAuiCoBoD,GACtBpD,GAAO7V,KAAKoX,IAAIvB,GAAM8E,MACJ,GAAVjF,GAAyC,GAA1B4E,GAAW5E,EAAS,IAC7B,GAAVA,GAA6C,GAA9BnQ,EAAIsI,MAAMmN,YAAYnJ,MACrCoJ,GAAiB,GAAVvF,EAAeA,EAAS,EAAI,EACnCiF,GAAIpD,EAAUhS,EAAI0C,IAAI4J,GAAKvU,EAAEqY,GAAIsF,IAAMpF,GA5iCzC,GA6iCoBoD,GACtBpD,GAAO7V,KAAKoX,IAAIvB,GAAM8E,KAI1B/E,GAAMsE,GAAqB,EAATxE,EAAa,GACzBwE,GAAqB,EAATxE,EAAa,GACzBwE,GAAqB,EAATxE,EAAa,GACG,EAA9BwE,GAAqB,EAATxE,EAAa,GAASE,KAClCC,IAAQ,GAC0B,EAA9BqE,GAAqB,EAATxE,EAAa,GAASE,KAClCC,IAAQ,KAGhBtQ,EAAI0C,IAAI4J,GAAKvU,EAAEqY,GAAID,GAAUG,IAWjC,IARJtQ,EAAIsI,MAAMmN,YAAYnJ,GAAOyI,GAAW,GAMxC7T,EAAI,EAEKS,EAAI,EAAGA,EAAI3B,EAAIkR,QAASvP,IAAK,CAQ9B,IAHA,IAAI8N,GAAKzP,EAAI2V,MAAMhU,GAAG,GAClBiU,GAAM9B,EAAKrE,IAAMP,EAAIgF,EAAWzE,KAChCiC,GAAM1R,EAAI6V,MAAM3U,KAAO0U,KAClBnG,IAAMzP,EAAI2V,MAAMhU,GAAG,IACxBiU,GAAM9B,EAAKrE,IAAMP,EAAIgF,EAAWzE,KAChCiC,GAAMpC,EAASoC,GAAK1R,EAAI6V,MAAM3U,KAAO0U,GAAKnG,GAAIA,GAAK9N,EAC/C3B,EAAK,GAEb0R,IAAO,iBAoBH1R,EAAI8R,cAAoB,EAANxF,IAAYnP,EAAUC,WACxC8S,EAAIvO,GAAK+P,GAETxB,EAAIvO,GAAKqQ,EACLvX,KAAKoX,IAAIH,GAAKjX,KAAKoX,IA1nC9B,EA2nCiB7R,EAAI8V,KAAKxJ,GAAK3K,GA1nC9B,GA2nCgB3B,EAAI+V,KAAKzJ,GAAK3K,KAAM+P,GAAKgC,GAEvC1T,EAAI+V,KAAKzJ,GAAK3K,GAAK3B,EAAI8V,KAAKxJ,GAAK3K,GACjC3B,EAAI8V,KAAKxJ,GAAK3K,GAAK+P,GAG3B,KAAO/P,GAAKxE,EAAUuM,SAAU/H,EAC5BmS,EAAKnS,GAAK,EACVuO,EAAIvO,GAAK,EAGboP,EAA6B/Q,EAAK8T,EAAM5D,EAAK5D,GA0BjD,IAtBI/H,EAAIkC,MAAQC,SAASsP,QAAUzR,EAAIkC,MAAQC,SAASC,cAChDpC,EAAI0R,aAAe,GAtyB/B,SAAmC1R,EAAKoL,GACpC,IAAI3P,EAAMuE,EAAIY,eACd,GAAInF,EAAIM,aAAe,EAAG,CACtB,IAAK,IAAI8P,EAAK,EAAGA,EAAKjT,EAAUiF,QAASgO,IAAM,CAC3C,IAAI9R,EAAI0B,EAAI0C,IAAI,GAAGpE,EAAE8R,GACjB5B,EAAIxO,EAAI0C,IAAI,GAAGpE,EAAE8R,GACrBpQ,EAAI0C,IAAI,GAAGpE,EAAE8R,IAAO5B,EAAImB,EACxB3P,EAAI0C,IAAI,GAAGpE,EAAE8R,IAAO9R,EAAIqR,EAE5B,IAASS,EAAK,EAAGA,EAAKjT,EAAUkF,QAAS+N,IACrC,IAAK,IAAID,EAAS,EAAGA,EAAS,EAAGA,IACzB7R,EAAI0B,EAAI0C,IAAI,GAAG3K,EAAEqY,GAAID,GACrB3B,EAAIxO,EAAI0C,IAAI,GAAG3K,EAAEqY,GAAID,GACzBnQ,EAAI0C,IAAI,GAAG3K,EAAEqY,GAAID,IAAW3B,EAAImB,EAChC3P,EAAI0C,IAAI,GAAG3K,EAAEqY,GAAID,IAAW7R,EAAIqR,GAyxBpCuG,CAA0B3R,EAAKA,EAAI0R,cAIvC1R,EAAIkC,MAAQC,SAASC,eApxB7B,SAAgB3G,GACZ,IAAK,IAAIoQ,EAAK,EAAGA,EAAKjT,EAAUiF,QAASgO,IAIrC,KAAIpQ,EAAI0C,IAAI,GAAGpE,EAAE8R,GAAM,KAAOpQ,EAAI0C,IAAI,GAAGpE,EAAE8R,IACpCpQ,EAAI0C,IAAI,GAAGpE,EAAE8R,GAAM,KAAOpQ,EAAI0C,IAAI,GAAGpE,EAAE8R,IAD9C,CAGA,IAAI+F,EAAMnW,EAAIoW,MAAMhG,GAAMpQ,EAAI2C,GAAG,GAAGrE,EAAE8R,GAClCiG,EAAO5b,KAAK0M,IAAInH,EAAI0C,IAAI,GAAGpE,EAAE8R,GAC7B3V,KAAKoX,IAAI7R,EAAI0C,IAAI,GAAGpE,EAAE8R,GAAK+F,IAE/BA,EAAMnW,EAAIoW,MAAMhG,GAAMpQ,EAAI2C,GAAG,GAAGrE,EAAE8R,GAClC,IAAIkG,EAAQ7b,KAAK0M,IAAInH,EAAI0C,IAAI,GAAGpE,EAAE8R,GAC9B3V,KAAKoX,IAAI7R,EAAI0C,IAAI,GAAGpE,EAAE8R,GAAK+F,IAC/BnW,EAAI0C,IAAI,GAAGpE,EAAE8R,GAAMiG,EACnBrW,EAAI0C,IAAI,GAAGpE,EAAE8R,GAAMkG,EAGvB,IAASlG,EAAK,EAAGA,EAAKjT,EAAUkF,QAAS+N,IACrC,IAAK,IAAID,EAAS,EAAGA,EAAS,EAAGA,IACzBnQ,EAAI0C,IAAI,GAAG3K,EAAEqY,GAAID,GAAU,KAAOnQ,EAAI0C,IAAI,GAAG3K,EAAEqY,GAAID,IAChDnQ,EAAI0C,IAAI,GAAG3K,EAAEqY,GAAID,GAAU,KAAOnQ,EAAI0C,IAAI,GAAG3K,EAAEqY,GAAID,KAEtDgG,EAAMnW,EAAIuW,MAAMnG,GAAMpQ,EAAI2C,GAAG,GAAG5K,EAAEqY,GAAID,GACtCkG,EAAO5b,KAAK0M,IAAInH,EAAI0C,IAAI,GAAG3K,EAAEqY,GAAID,GACjC1V,KAAKoX,IAAI7R,EAAI0C,IAAI,GAAG3K,EAAEqY,GAAID,GAASgG,IAEvCA,EAAMnW,EAAIuW,MAAMnG,GAAMpQ,EAAI2C,GAAG,GAAG5K,EAAEqY,GAAID,GAClCmG,EAAQ7b,KAAK0M,IAAInH,EAAI0C,IAAI,GAAG3K,EAAEqY,GAAID,GAClC1V,KAAKoX,IAAI7R,EAAI0C,IAAI,GAAG3K,EAAEqY,GAAID,GAASgG,IAEvCnW,EAAI0C,IAAI,GAAG3K,EAAEqY,GAAID,GAAUkG,EAC3BrW,EAAI0C,IAAI,GAAG3K,EAAEqY,GAAID,GAAUmG,GAqvB/BE,CAAOxW,GACP2T,EAAQpP,EAAIoP,MACRlZ,KAAK4a,IAAI1B,GAAS,GA7uB9B,SAAkB3T,EAAK2T,EAAO8C,GAC1B,IAAIC,EAAS/C,EACTgD,EAAWlc,KAAKwX,IAAI,GAAIwE,GAE5B9C,GAAS,EACT+C,GAAU,EACV,IAAK,IAAItG,EAAK,EAAGA,EAAKjT,EAAUiF,QAASgO,IAErCwG,EAAO5W,EAAIgH,IAAI6I,KAAK7P,EAAI6W,KAAKzG,IAAQuG,GACrCG,EAAQrc,KAAKoX,IAAIpX,KAAK0M,IAAInH,EAAI0C,IAAI,GAAGpE,EAAE8R,GAAKwG,GACxCnc,KAAK0M,IAAInH,EAAI0C,IAAI,GAAGpE,EAAE8R,GAAKwG,KAGnBjD,GAFZoD,EAAOtc,KAAK0M,IAAInH,EAAI0C,IAAI,GAAGpE,EAAE8R,GAAKwG,KAClCI,EAAOvc,KAAK0M,IAAInH,EAAI0C,IAAI,GAAGpE,EAAE8R,GAAKwG,KAK9BpJ,GAFAuJ,GADI1O,EAAIyO,EAAQJ,GAAUK,EAAOC,KAEjCA,GAAQ3O,GACe,GAE3BrI,EAAI0C,IAAI,GAAGpE,EAAE8R,GAAM3V,KAAKoX,IAAIkF,EAAM/W,EAAI0C,IAAI,GAAGpE,EAAE8R,IAC/CpQ,EAAI0C,IAAI,GAAGpE,EAAE8R,GAAM3V,KAAKoX,IAAImF,EAAMhX,EAAI0C,IAAI,GAAGpE,EAAE8R,IAInD,IADAuG,GAAcxZ,EAAU6M,UAAY7M,EAAUyI,QACrCwK,EAAK,EAAGA,EAAKjT,EAAUkF,QAAS+N,IACrC,IAAK,IAAID,EAAS,EAAGA,EAAS,EAAGA,IAAU,CACvC,IAAI2G,EAAOC,EAAMC,EAAMJ,EAQfvO,EAPRuO,EAAO5W,EAAIgH,IAAI4I,KAAK5P,EAAIiX,KAAK7G,IAAQuG,GACrCG,EAAQrc,KAAKoX,IAAIpX,KAAK0M,IAAInH,EAAI0C,IAAI,GAAG3K,EAAEqY,GAAID,GAASyG,GAChDnc,KAAK0M,IAAInH,EAAI0C,IAAI,GAAG3K,EAAEqY,GAAID,GAASyG,KAI3BjD,GAHZoD,EAAOtc,KAAK0M,IAAInH,EAAI0C,IAAI,GAAG3K,EAAEqY,GAAID,GAASyG,KAC1CI,EAAOvc,KAAK0M,IAAInH,EAAI0C,IAAI,GAAG3K,EAAEqY,GAAID,GAASyG,KAMtCpJ,GAFAuJ,GADI1O,EAAIyO,EAAQnD,GAASoD,EAAOC,KAEhCA,GAAQ3O,GACe,GAE3BrI,EAAI0C,IAAI,GAAG3K,EAAEqY,GAAID,GAAU1V,KAAKoX,IAAI7R,EAAI0C,IAAI,GAAG3K,EAAEqY,GAAID,GACjD4G,GACJ/W,EAAI0C,IAAI,GAAG3K,EAAEqY,GAAID,GAAU1V,KAAKoX,IAAI7R,EAAI0C,IAAI,GAAG3K,EAAEqY,GAAID,GACjD6G,IAosBJE,CAASlX,EAAK2T,EAAOpP,EAAI4S,SAAWnX,EAAIgH,IAAIK,SA7iBxD,SAAwB9C,EAAKyP,EAAcR,EAAanN,GACpD,IAAIrG,EAAMuE,EAAIY,eAEVZ,EAAI6S,cAAgBnK,EAAanS,qBAIT,GAAnBkZ,EAAa,IAA8B,GAAnBA,EAAa,KAC1CA,EAAa,GAAKA,EAAa,GAAK,GAMxC,IAAK,IAAI1H,EAAM,EAAGA,EAAMtM,EAAIM,aAAcgM,IACtCjG,EAAUiG,GAAOnP,EAAU0J,UAEvBtC,EAAI6S,cAAgBnK,EAAalS,wBACjCiZ,EAAa1H,GAAO,GACpB/H,EAAI6S,cAAgBnK,EAAajS,qBACjCgZ,EAAa1H,GAAO,GAEC,GAArB0H,EAAa1H,IAEbkB,EAASxN,EAAI8R,cAAcxF,IAAQnP,EAAU+M,YACzClK,EAAI8R,cAAcxF,IAAQnP,EAAUC,aACpCiJ,EAAUiG,GAAOnP,EAAUgN,aAG/B9D,EAAUiG,GAAOnP,EAAUC,WACvB4C,EAAI8R,cAAcxF,IAAQnP,EAAU0J,YACpC7G,EAAI8R,cAAcxF,GAAOnP,EAAU+M,YAEnClK,EAAI8R,cAAcxF,IAAQnP,EAAUgN,YACpCnK,EAAI8R,cAAcxF,GAAOnP,EAAUC,aAG3CoW,EAAYlH,GAAOtM,EAAI8R,cAAcxF,GAErCtM,EAAI8R,cAAcxF,GAAOjG,EAAUiG,GA4gBvC+K,CAAe9S,EAAKyP,EAAcR,EAAanN,GAK1CiG,EAAM,EAAGA,EAAMmH,EAAQnH,IAAO,CAC/B,IAAIgL,GAEAnW,GACAiR,GAFAmF,GAAS,EAITjL,EAAM,GACNgL,GAAM/D,EACNgE,IAAU,EACVpW,GAAOhE,EAAU0J,UACb2M,EAAY,IAAMrW,EAAUC,YACzBoW,EAAY,IAAMrW,EAAUC,aAC/B+D,GAAOhE,EAAUC,YACrBgV,GAAKiB,EAAiB9E,GAAQjC,EAAM,KAEpCgL,GAAMhE,EACNiE,GAAS,EACTpW,GAAOqS,EAAYlH,GACnB8F,GAAKgB,EAAc7E,GAAQjC,IAG3BnL,IAAQhE,EAAUC,WAClBka,GAAIC,GAASjL,GAAO6F,EAASC,GAAIpS,EAAIqS,eAErCiF,GAAIC,GAASjL,GAAOkG,EAASJ,GAAIpS,EAAIqS,eAErC9N,EAAIyD,WACJhI,EAAIiI,MAAM3C,GAAGiJ,GAAQjC,GAAOgL,GAAIC,GAASjL,IAGjD,OAAO,GAwFX,IAAIkL,EAAW,EAAC,aACZ,WAAiB,YAAkB,UACnC,YAAkB,UAAgB,UAClC,UAAe,aAAkB,SA2LrC,SAASC,EAAsBzX,EAAKsM,EAAK6D,GACrC,GAAc,GAAVA,EACA,IAAK,IAAIxO,EAAI,EAAGA,EAAI3B,EAAIyQ,QAAS9O,IAC7B3B,EAAI+R,MAAMzF,GAAK3K,GAAK3B,EAAI4R,MAAMtF,GAAK3K,GACnC3B,EAAI4R,MAAMtF,GAAK3K,GAAK,EAKhC,SAAS+V,EAAsB1X,EAAKsM,GAChC,IAAK,IAAI3K,EAAI,EAAGA,EAAI3B,EAAIkR,QAASvP,IAC7B3B,EAAI+V,KAAKzJ,GAAK3K,GAAK3B,EAAI8V,KAAKxJ,GAAK3K,GACjC3B,EAAI8V,KAAKxJ,GAAK3K,GAAK,EAqE3B,SAASgW,EAAyBpT,EAAK2J,EAAa+B,EAAIC,EAAK5D,EAAK6D,GAC9D,IAEIrZ,EAAG0L,EAAGb,EAFN3B,EAAMuE,EAAIY,eACVgC,EAAM,IAAIyQ,MAAMza,EAAUuM,QAASiJ,EAAMtF,EAAYlQ,EAAUuM,QAE/DyK,EAAa,IAAI0D,IAAI1a,EAAUuM,QAEnC,IAAK/H,EAAIa,EAAI,EAAGb,EAAI3B,EAAIyQ,UAAW9O,EAAG,CAClC,IAAI0P,EAAM,EAAGC,EAAI,EACbra,EAAI+I,EAAIuR,WAAW5P,GACvB,IAAK7K,EAAI,EAAGA,EAAIG,IAAKH,IAAK0L,EAAG,CACzB,IAAIgP,EAAKtD,EAAYiC,GAAQ3N,GAC7B6O,GAAOG,EACHF,EAAIE,IACJF,EAAIE,GAEZvB,EAAGtO,GAAK0P,EACR7D,EAAS6D,GAAO,GAChBlK,EAAIxF,GAAK2P,EACT9D,EAASvW,EAAI,GACb0b,EAAIhR,GAAK0P,EAAMpa,EACfuW,EAASmF,EAAIhR,IAAM,GAIvB,IAFA6L,EAAS7L,GAAK3B,EAAIyQ,SAClBjD,EAAc,KAALhL,GACFb,EAAIxE,EAAUuM,SAAU/H,EAC3BwF,EAAIxF,GAAK,EACTgR,EAAIhR,GAAK,EAGb,IA9FJ,SAAkC3B,EAAKmH,EAAKwL,EAAKI,GAC7C,IAAIC,EAAiB9D,EAAIjX,OAAS,EAC9B0J,EAAI,EACJlI,EAAIkZ,EAAIhR,GAAKgR,EAAIhR,EAAI,GAiBzB,IAhBA6L,EAAS/T,GAAK,GACVA,EAAI,IACA6X,EAAInK,EAAIxF,IACJwF,EAAIxF,EAAI,KACZ2P,EAAInK,EAAIxF,EAAI,IAChB6L,EAAUxN,EAAIuR,WAAW5P,GAAK3B,EAAIuR,WAAW5P,EAAI,GAAK,EAAK,IAGvDT,EAAI,GAFRzH,EAAI,IAAY,EAAJ6X,EAAU7X,IACfA,GAAKuG,EAAIuR,WAAW5P,GAAK3B,EAAIuR,WAAW5P,EAAI,GAAK,MAEhDqR,IACJ9R,EAAI8R,GACRD,EAASpR,GAAKT,GAEd6R,EAASpR,GAAK,EAGbA,EAAI,EAAGA,EAAI3B,EAAIyQ,QAAU,EAAG9O,IAAK,CAK9B,IAAI2P,EAUApQ,EAdRzH,EAAIkZ,EAAIhR,EAAI,GAAKgR,EAAIhR,GAAKgR,EAAIhR,EAAI,GAClC6L,EAAS7L,EAAI,EAAI3B,EAAIyQ,SACrBjD,EAAS/T,GAAK,GACVA,EAAI,IACA6X,EAAInK,EAAIxF,EAAI,IACRwF,EAAIxF,KACR2P,EAAInK,EAAIxF,IACR2P,EAAInK,EAAIxF,EAAI,KACZ2P,EAAInK,EAAIxF,EAAI,IAChB6L,EAAUxN,EAAIuR,WAAW5P,EAAI,GAAK3B,EAAIuR,WAAW5P,GAAK3B,EAAIuR,WAAW5P,EAAI,GAAK,EAAK,IAK/ET,EAAI,GAJRzH,EAAI,IACO,EAAJ6X,EAAU7X,IACVA,GAAKuG,EAAIuR,WAAW5P,EAAI,GAAK3B,EAAIuR,WAAW5P,GAC7C3B,EAAIuR,WAAW5P,EAAI,GAAK,MAEtBqR,IACJ9R,EAAI8R,GACRD,EAASpR,GAAKT,GAEd6R,EAASpR,GAAK,EAGtB6L,EAAS7L,EAAI,GACb6L,EAAS7L,GAAK3B,EAAIyQ,QAAU,GAE5BhX,EAAIkZ,EAAIhR,EAAI,GAAKgR,EAAIhR,GACrB6L,EAAS/T,GAAK,GACVA,EAAI,IACA6X,EAAInK,EAAIxF,EAAI,IACRwF,EAAIxF,KACR2P,EAAInK,EAAIxF,IACZ6L,EAAUxN,EAAIuR,WAAW5P,EAAI,GAAK3B,EAAIuR,WAAW5P,GAAK,EAAK,IAGvDT,EAAI,GAFRzH,EAAI,IAAY,EAAJ6X,EAAU7X,IACfA,GAAKuG,EAAIuR,WAAW5P,EAAI,GAAK3B,EAAIuR,WAAW5P,GAAK,MAEhDqR,IACJ9R,EAAI8R,GACRD,EAASpR,GAAKT,GAEd6R,EAASpR,GAAK,EAElB6L,EAAS7L,GAAM3B,EAAIyQ,QAAU,GA+B7BqH,CAAyB9X,EAAKmH,EAAKwL,EAAKwB,GACnC3R,EAAIb,EAAI,EAAGA,EAAI3B,EAAIyQ,QAAS9O,IAAK,CAClC,IAEIoW,EAAIC,EACJxd,EAAGkX,EAAKuG,EAHRxI,EAAKzP,EAAIyR,QAAQ9P,GAAG,GACpBuW,EAAOlY,EAAIyR,QAAQ9P,GAAG,GAQ1B,IALAoW,EAAK5D,EAAW1E,GAChBuI,EAAO,EACPtG,EAAM1R,EAAI2R,MAAMnP,GAAKyN,EAAGR,GAAMP,EAAIiF,EAAW1E,MAC3CjN,IACAiN,EACKA,GAAMyI,GACTH,GAAM5D,EAAW1E,GACjBuI,GAAQ,EAERtG,EAAM3B,EAAgB2B,EADtBlX,EAAIwF,EAAI2R,MAAMnP,GAAKyN,EAAGR,GAAMP,EAAIiF,EAAW1E,IACbA,EAAK9N,KACjCa,IACAiN,EAINiC,GADAuG,EAAqB,GAAV/I,EADX6I,GAAM,EAAI,EAAIA,IAAO,EAAIC,IAGzB9H,EAAIvO,GAAK+P,EACT1R,EAAI+R,MAAMzF,GAAK3K,GAAK3B,EAAI4R,MAAMtF,GAAK3K,GACnC3B,EAAI4R,MAAMtF,GAAK3K,GAAK+P,EAQhBlX,EAAI2M,EAAIxF,GACRnH,GAAKwF,EAAImY,SAASxW,GAClBnH,GAAKyd,EACD/H,EAAIvO,GAAKnH,IACT0V,EAAIvO,GAAKnH,GAGbwF,EAAIqS,cAAgB,IACpBnC,EAAIvO,IAAM3B,EAAIqS,eAEdnC,EAAIvO,GAAKsO,EAAGtO,KACZuO,EAAIvO,GAAKsO,EAAGtO,IAEZ3B,EAAIqS,cAAgB,IACpBnC,EAAIvO,IAAM3B,EAAIqS,eAGlB7E,EAAS0C,EAAIvO,IAAM,GAEvB,KAAOA,EAAIxE,EAAUuM,SAAU/H,EAC3BsO,EAAGtO,GAAK,EACRuO,EAAIvO,GAAK,EAIjB,SAASyW,EAAyBpY,EAAKiO,EAAW6F,EAAM5D,EAAK5D,GACzD,IAEI3K,EAFAwF,EAAMkG,EAAYlQ,EAAUuM,QAASiJ,EAAMtF,EAAYlQ,EAAUuM,QACjEwK,EAAa3G,EAAUpQ,EAAUuM,OAAS,GAM9CgJ,EAAY1S,EAAKiO,EAAW6F,EAAM3M,EAAKwL,GACvCG,EAAkB9S,EAAKmH,EAAKwL,EAAKuB,GAMjC,IAAIhT,EAAI,EACR,IAAKS,EAAI,EAAGA,EAAI3B,EAAIkR,QAASvP,IAAK,CAC9B,IAAInH,EAAGkX,EAAKuG,EAERxI,EAAKzP,EAAI2V,MAAMhU,GAAG,GAClBuW,EAAOlY,EAAI2V,MAAMhU,GAAG,GACpBoW,EAAK,EAAGC,EAAO,EAMnB,IALAD,EAAK7D,EAAWzE,GAChBuI,GAAQ,EACRtG,EAAM1R,EAAI6V,MAAM3U,GAAK4S,EAAKrE,GAAMP,EAAIgF,EAAWzE,MAC7CvO,IACAuO,EACKA,GAAMyI,GACTH,GAAM7D,EAAWzE,GACjBuI,GAAQ,EAGRtG,EADI3B,EAAgB2B,EADpBlX,EAAIwF,EAAI6V,MAAM3U,GAAK4S,EAAKrE,GAAMP,EAAIgF,EAAWzE,IACjBA,EAAK9N,KAE/BT,IACAuO,EAoBN,GAhBAiC,GADAuG,EAAqB,GAAV/I,EADX6I,GAAM,EAAI,EAAIA,IAAO,EAAIC,IAkBrBhY,EAAI8R,cAAoB,EAANxF,IAAenP,EAAUC,WAAY,CACvD,IAAIib,EAlrDH,EAkrDwBrY,EAAI8V,KAAKxJ,GAAK3K,GAEnCuO,EAAIvO,GADJ0W,EAAY,EACH5d,KAAKoX,IAAIH,EAAK2G,GAad5d,KAAKoX,IAAIH,EAlrDZ,GAkrDiBoC,EAAKnS,QAE7B,CACH,IAAI2W,EAnsDF,GAmsD0BtY,EAAI+V,KAAKzJ,GAAK3K,GACtC4W,EArsDH,EAqsD0BvY,EAAI8V,KAAKxJ,GAAK3K,GAErC2W,GAAe,IACfA,EAAc5G,GAEd6G,GAAe,IACfA,EAAc7G,GAGd2G,EADArY,EAAI8R,cAAoB,EAANxF,IAAenP,EAAU0J,UAC/BpM,KAAKoX,IAAI0G,EAAaD,GAEtBC,EAEhBrI,EAAIvO,GAAKlH,KAAKoX,IAAIH,EAAK2G,GAE3BrY,EAAI+V,KAAKzJ,GAAK3K,GAAK3B,EAAI8V,KAAKxJ,GAAK3K,GACjC3B,EAAI8V,KAAKxJ,GAAK3K,GAAK+P,EAQflX,EAAI2M,EAAIxF,GACRnH,GAAKwF,EAAIwY,SAAS7W,GAClBnH,GAAKyd,EACD/H,EAAIvO,GAAKnH,IACT0V,EAAIvO,GAAKnH,GAGbwF,EAAIqS,cAAgB,IACpBnC,EAAIvO,IAAM3B,EAAIqS,eAEdnC,EAAIvO,GAAKmS,EAAKnS,KACduO,EAAIvO,GAAKmS,EAAKnS,IAEd3B,EAAIqS,cAAgB,IACpBnC,EAAIvO,IAAM3B,EAAIqS,eAElB7E,EAAS0C,EAAIvO,IAAM,GAEvB,KAAOA,EAAIxE,EAAUuM,SAAU/H,EAC3BmS,EAAKnS,GAAK,EACVuO,EAAIvO,GAAK,EA6DjB,SAAS8W,EAA6BxI,EAAIC,EAAKwI,EAAQC,EAAQlC,EAAW9C,EAAO1c,GAI7E,IAHA,IAEIqf,EAAOD,EAFPK,EAAiB,EAAR/C,EACTgD,EAAWhD,EAAQ,EAAIlZ,KAAKwX,IAAI,GAAIwE,GAAa,EAE5C9U,EAAI,EAAGA,EAAI1K,IAAK0K,EAAG,CACxB,IAAIiX,EAAM3I,EAAG,GAAGtO,GACZkX,EAAM5I,EAAG,GAAGtO,GACZmX,EAAO5I,EAAI,GAAGvO,GACdoX,EAAO7I,EAAI,GAAGvO,GACdoV,EAAO7G,EAAI,GAAGvO,GACdqV,EAAO9G,EAAI,GAAGvO,GAGlB,GAAImX,GAAQ,KAAOC,GAAQA,GAAQ,KAAOD,EAAM,CAC5C,IAAIE,EAAQN,EAAO/W,GAAKkX,EACpBtC,EAAQmC,EAAO/W,GAAKiX,EACxBvC,EAAO5b,KAAK0M,IAAI4P,EAAMtc,KAAKoX,IAAImF,EAAMgC,IACrC1C,EAAQ7b,KAAK0M,IAAI6P,EAAMvc,KAAKoX,IAAIkF,EAAMR,SAEtCF,EAAOU,EACPT,EAAQU,EAEZ,GAAIrD,EAAQ,EAAG,CAKX,IAAImD,EAAOmC,EACPrC,EAAM+B,EAAOhX,GAAKgV,EAKtB,GAJAG,EAAQrc,KAAKoX,IAAIpX,KAAK0M,IAAI2R,EAAMlC,GAAMnc,KAAK0M,IAAI4R,EAAMnC,KAGrDqC,GAFAlC,EAAOtc,KAAK0M,IAAIkP,EAAMO,KACtBI,EAAOvc,KAAK0M,IAAImP,EAAOM,KAEX,GAAME,EAAQJ,EAAUuC,EAAO,CACvC,IAAI5Q,EAAIyO,EAAQJ,EAASuC,EACzBlC,GAAQ1O,EACR2O,GAAQ3O,EACRmF,EAASyL,EAAQ,GAErB5C,EAAO5b,KAAKoX,IAAIkF,EAAMV,GACtBC,EAAQ7b,KAAKoX,IAAImF,EAAMV,GAEvBD,EAAOuC,IACPvC,EAAOuC,GAEPtC,EAAQuC,IACRvC,EAAQuC,GAEZ3I,EAAI,GAAGvO,GAAK0U,EACZnG,EAAI,GAAGvO,GAAK2U,GAmMpB,SAAS4C,EAAUC,EAAMC,GACrB,IAAkBC,EAOlB,OAJIA,EAHQF,GAEC,EACQ,IAHTA,IAKQC,KAEN,GACH,EAEJ3e,KAAK6e,IAphEE,YAohEED,GAGpB,SAASE,EAAeH,GACpB,IAAII,EAAWC,EAkBAnb,EAAGob,EAhBVlf,EAAI,EACR,IAAKA,EAAI,EAAG0e,EAAU1e,EAAG4e,GAAY,MAAO5e,GAAK,GAIjD,IAFA8D,EAAI9D,EACJkf,EAAI,EACGjf,KAAK4a,IAAIqE,EAAIpb,GAAK,OAEjB4a,EADJ1e,GAAKkf,EAAIpb,GAAK,EACG8a,GAAY,EACzBM,EAAIlf,EAEJ8D,EAAI9D,EAOZ,IAJAgf,EAAQlb,EAGJ9D,EAAI,EACHA,EAAI,EAAG0e,EAAU1e,EAAG4e,GAAY,MAAO5e,GAAK,GAIjD,IAFA8D,EAAI,EACJob,EAAIlf,EACGC,KAAK4a,IAAIqE,EAAIpb,GAAK,OAEjB4a,EADJ1e,GAAKkf,EAAIpb,GAAK,EACG8a,GAAY,EACzB9a,EAAI9D,EAEJkf,EAAIlf,EAGZif,EAAQC,EAGR,IAEI5iB,EAFA6iB,EAAM,EACNrI,EAAI,IAER,IAAKxa,EAAI,EAAGA,GAAKwa,IAAKxa,EAGlB6iB,GADQT,EADJ1e,EAAIgf,EAAQ1iB,GAAK2iB,EAAQD,GAASlI,EACjB8H,GAMrB,OAFW,MAAWO,GAAOF,EAAQD,IAUjD,SAASI,EAAQT,GACb,IAAIU,EAAOrf,EAAG6e,EAAOS,EAgBrB,OAfAD,EAAQV,EAQJ3e,GANAqf,GADAA,GAAS,EACA,EAEA,MAEA,IAAOA,GAAS,IAErB,IADJC,EAAOD,EAAQ,IACGC,EAAO,EAAMA,GAE3B,GAERT,EAAQ,UAAY,KADpBQ,GAAS,MACyB,KAC5Bpf,KAAKsf,KAAK,EAAMF,EAAQA,MAEhB,GACH,GAEXA,EAAQpf,KAAK6e,IAjmEC,aAimEI9e,EAAI6e,IAYtBQ,GAAS,UAOb,SAASG,EAAUC,GAKf,OAHIA,EAAO,IACPA,EAAO,GACXA,GAAc,KACP,GAAOxf,KAAKyf,KAAK,IAAMD,GAAQ,IAChCxf,KAAKyf,KAAKD,EAAOA,EAAP,OAGpB,SAASE,EAAaC,EAAUC,EAAIC,EAAIC,EAAMC,EAAYrE,EAAKsE,EAAMC,EAAOC,EAASC,EAAUC,EAAWC,GACtG,IAGIhkB,EAHAikB,EAAQ1N,EAAYlQ,EAAUuM,OAAS,GACvCsR,EAAmBN,GAASI,EAAQ,GAAK,KAAU,KACnDG,EAAY1N,EAAUpQ,EAAU4M,UAEpC2Q,GAASC,EACT,IAAInY,EAAI,EACJ0Y,EAAK,EAGT,IAAKpkB,EAAI,EAAGA,EAAIqG,EAAUuM,OAAQ5S,IAAK,CACnC,IACIqkB,EAKJ,IAJAC,EAAQpB,EAAUU,EAAQlY,GAE1BuY,EAAMjkB,GAAK4jB,EAAQlY,EAEd2Y,EAAK3Y,EAAGwX,EAAUU,EAAQS,GAAMC,EAjqE/B,KAkqEHD,GAAMR,EAAU,EAAGQ,KAMtB,IAHAf,EAAStjB,GAAKqkB,EAAK3Y,EACnB0Y,EAAKpkB,EAAI,EAEF0L,EAAI2Y,GACP3N,EAAShL,EAAIrF,EAAU4M,UACvBkR,EAAUzY,KAAO1L,EAErB,GAAI0L,EAAImY,EAAU,EAAG,CACjBnY,EAAImY,EAAU,IACZ7jB,EACF,OAGR0W,EAAS1W,EAAIqG,EAAUuM,QACvBqR,EAAMjkB,GAAK4jB,EAAQlY,EAEnB,IAAK,IAAI6Y,EAAM,EAAGA,EAAMP,EAAOO,IAAO,CAClC,IAAIC,EAAIC,EAAIC,EAAOC,EACfC,EACJF,EAAQZ,EAASS,GACjBI,EAAMb,EAASS,EAAM,IAErBC,EAAK,EAAI7gB,KAAKkhB,MAAM,GAAKd,GAAaW,EAAQ,MACrC,IACLF,EAAK,IACTC,EAAK,EAAI9gB,KAAKkhB,MAAM,GAAKd,GAAaY,EAAM,MAEnCd,EAAU,IACfY,EAAKZ,EAAU,GAEnBL,EAAGe,IAAQJ,EAAUK,GAAML,EAAUM,IAAO,EAC5ClB,EAAGgB,GAAOJ,EAAUM,GACpB,IAAIK,EAAQZ,EAAmBS,EAK/BhB,EAAKY,IAAQO,EAAQb,EAAMV,EAAGgB,MACvBN,EAAMV,EAAGgB,GAAO,GAAKN,EAAMV,EAAGgB,KACjCZ,EAAKY,GAAO,EACZZ,EAAKY,GAAO,EAERZ,EAAKY,GAAO,IACZZ,EAAKY,GAAO,GAKpBK,EAAM1B,EAAUU,EAAQE,EAASS,GAAOR,GACxCa,EAAQjhB,KAAKoX,IAAI6J,EAAK,MAAQ,KAE9BvF,EAAIkF,GAAO5gB,KAAKwX,IAAI,GAChB,MAAQ,EAAIxX,KAAKmS,IAAInS,KAAKoS,GAAK6O,IAAQ,KAI/ClZ,EAAI,EACJ,IAAK,IAAItB,EAAI,EAAGA,EAAIga,EAAIha,IAAK,CACzB,IACIka,EAAOS,EADP5d,EAAImc,EAASlZ,GAGjBka,EAAQpB,EAAUU,EAASlY,GAC3BqZ,EAAQ7B,EAAUU,GAASlY,EAAIvE,EAAI,IACnCsc,EAAKrZ,GAAK,IAAMka,EAAQS,GAExBT,EAAQpB,EAAUU,GAASlY,EAAI,KAC/BqZ,EAAQ7B,EAAUU,GAASlY,EAAIvE,EAAI,KACnCuc,EAAWtZ,GAAK2a,EAAQT,EACxB5Y,GAAKvE,EAGT,OAAOid,EAGX,SAASY,EAAenG,EAAOoG,EAAOxB,EAAMC,EAAYwB,EAAMC,GAC1D,IAMIzZ,EANA0Z,EAAK5O,EAAc,CAACnQ,EAAUuM,OAAQvM,EAAUuM,SAOhDyS,EAAmB,EAWvB,GAAIF,EACA,IAAK,IAAInlB,EAAI,EAAGA,EAAIilB,EAAOjlB,IACvB,IAAK0L,EAAI,EAAGA,EAAIuZ,EAAOvZ,IAAK,CACxB,IAAI3E,EAAI+b,EAAQW,EAAKzjB,GAAKyjB,EAAK/X,IAAMgY,EAAWhY,GAChD0Z,EAAGplB,GAAG0L,GAAK3E,EAAIme,EAAKllB,QAI5B,IAAK0L,EAAI,EAAGA,EAAIuZ,EAAOvZ,IACnB,KAAI4W,EAAW,GAAK3e,KAAKoX,IAAI,GAAK0I,EAAK/X,GAAI,IACvC4Z,EAAY7C,EAAeH,GAC/B,IAAStiB,EAAI,EAAGA,EAAIilB,EAAOjlB,IACnB+G,EAAIue,EACFlD,EAAUqB,EAAKzjB,GAAKyjB,EAAK/X,GAAI4W,GAC7BoB,EAAWhY,GACjB0Z,EAAGplB,GAAG0L,GAAK3E,EAAIme,EAAKllB,GAIhC,IAASA,EAAI,EAAGA,EAAIilB,EAAOjlB,IAAK,CAC5B,IAAK0L,EAAI,EAAGA,EAAIuZ,KACRG,EAAGplB,GAAG0L,GAAK,GADIA,KAMvB,IAFAmT,EAAM7e,GAAG,GAAK0L,EAETA,EAAIuZ,EAAQ,EAAGvZ,EAAI,KAChB0Z,EAAGplB,GAAG0L,GAAK,GADQA,KAI3BmT,EAAM7e,GAAG,GAAK0L,EACd2Z,GAAqBxG,EAAM7e,GAAG,GAAK6e,EAAM7e,GAAG,GAAK,EAGrD,IAAIse,EAAI/H,EAAY8O,GAChBjb,EAAI,EACR,IAASpK,EAAI,EAAGA,EAAIilB,EAAOjlB,IACvB,IAAK0L,EAAImT,EAAM7e,GAAG,GAAI0L,GAAKmT,EAAM7e,GAAG,GAAI0L,IACpC4S,EAAElU,KAAOgb,EAAGplB,GAAG0L,GAEvB,OAAO4S,EAGX,SAASiH,EAAchU,GAGnB,IAAIqT,EAAM1B,EAAU3R,GAGpB,OAFAqT,EAAOjhB,KAAKoX,IAAI6J,EAAK,MAAQ,KAEtBjhB,KAAKwX,IAAI,GACZ,MAAQ,EAAIxX,KAAKmS,IAAInS,KAAKoS,GAAK6O,IAAQ,KA0S/C,SAASY,EAAcjU,EAAG3S,GAuCtB,OAVI2S,GAAK,KACLA,EAAI,MAGRA,GAAK,IACLA,EAAI5N,KAAK0M,IAAI,GAAKkB,GACR,KAAQ5N,KAAKwX,IAAI5J,GAAI,IAAO,IAChC5N,KAAK6e,KAAK,GAAM7e,KAAKwX,IAAI5J,EAAI,IAAK,IAAQ,EAC1C5N,KAAK6e,KAAK,IAAO7e,KAAKwX,IAAI5J,EAAI,IAAK,IACZ,MAAtB,GAAM,IAAO3S,GAAiB+E,KAAKwX,IAAI5J,EAAG,GAvyBrDhO,KAAKkM,kBAAoB,SAAUhC,EAAKgI,EAAQC,EAAQ+B,EAAQ6E,EAAeC,EAAkBC,EAAgBC,EAAmBnL,EAAQoL,GACxI,IAAIxT,EAAMuE,EAAIY,eAKV8I,EAAYZ,EAAYlQ,EAAU4M,UAClCmE,EAAcZ,EAAc,CAAC,EAAGnQ,EAAU8M,aAC1C2J,EAAUtG,EAAc,CAAC,EAAGnQ,EAAUyI,UACtCiO,EAAUvG,EAAc,CAAC,EAAG,EAAGnQ,EAAU6M,YACzCiG,EAAK3C,EAAc,CAAC,EAAGnQ,EAAUuM,SAAUwG,EAAM5C,EAAc,CAAC,EAAGnQ,EAAUuM,SAC7E6S,EAAmBjP,EAAc,CAAC,EAAG,IAIrCyH,EAAa,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GACpD,CAAC,EAAG,EAAG,EAAG,IACVf,EAAezG,EAAU,GAKzBiP,EAAajY,EAAIkC,MAAQC,SAASC,aAAgB,EAChD3G,EAAIM,cA1lBd,SAAiCiE,EAAKgI,EAAQC,EAAQ+B,EAAQ6E,EAAeC,EAAkBjL,EAAQmU,EAAkBxH,EAAYf,GAQjI,IAPA,IAAIC,EAAa3G,EAAc,CAAC,EAAG,MAC/BtN,EAAMuE,EAAIY,eACVsX,EAAYzc,EAAIM,aAEhBkc,EAAajY,EAAIkC,MAAQC,SAASC,aAAgB,EAAI8V,EAGjDnQ,EAAM,EAAGA,EAAMmQ,EAAWnQ,IAAO,CAEtCgI,OAAS/H,EAAOD,GAChB,IAAIiI,EAAY/H,EAAS,IAAM,IArxCxB,GAqxCyC,IAChDgB,EAA6B,IAApBgK,EAASvf,QAClB,IAAK,IAAInB,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC1B,IAAI0d,EAAMC,EACVD,EAAOF,OAAOC,EAAYzd,EAAI,IAC9B2d,EAAO,EACP,IAAK,IAAIjS,EAAI,EAAGA,EAAK,EAAyBA,GAAK,EAC/CgS,GAAQgD,EAAShV,IACV8R,OAAOC,EAAYzd,EAAI0L,GAAK8R,OAAOC,EAAYzd,EA7xCvD,GA8xCkB0L,IACjBiS,GAAQ+C,EAAShV,EAAI,IACd8R,OAAOC,EAAYzd,EAAI0L,EAAI,GAAK8R,OAAOC,EACxCzd,EAjyCP,GAiyCsB0L,EAAI,IAE7ByR,EAAW3H,GAAKxV,GAAK0d,EAAOC,EAEhCrB,EAAc7E,GAAQjC,GAAK3J,GAAGlM,OAAOuJ,EAAI2C,GAAG2J,IAC5C8G,EAAc7E,GAAQjC,GAAK5J,IAAIjM,OAAOuJ,EAAI0C,IAAI4J,IAC1CkQ,EAAY,IAGZnJ,EAAiB9E,GAAQjC,GAAK3J,GAAGlM,OAAOuJ,EAAI2C,GAAG2J,EAAM,IACrD+G,EAAiB9E,GAAQjC,GAAK5J,IAAIjM,OAAOuJ,EAAI0C,IAAI4J,EAAM,KAG/D,IAASA,EAAM,EAAGA,EAAMkQ,EAAWlQ,IAAO,CACtC,IAAIuI,EAAmBxH,EAAY,IAC/BsH,EAActH,EAAY,IAC1BuH,EAAW,CAAC,EAAG,EAAG,EAAG,GACrBK,EAAKhB,EAAiB,EAAN3H,GAChB4I,EAAQ,EACRR,EAA0B,GAAPpI,EAAYtM,EAAIsI,MAAMiN,aACvCvV,EAAIsI,MAAMkN,WACZV,EAAkB,EAEtB,GAAW,GAAPxI,EACA,IAASxV,EAAI,EAAG0L,EAAI,IAAKA,EAAI,IAAK1L,IAAK0L,EAAG,CACtC,IAAIlE,EAAI2V,EAAW,GAAGnd,GAClB0X,EAAIyF,EAAW,GAAGnd,GACtBmd,EAAW,GAAGnd,GAAKwH,EAAIkQ,EACvByF,EAAW,GAAGnd,GAAKwH,EAAIkQ,EAO/B,IAAS1X,EAAI,EAAGA,EAAI,EAAGA,IACnB6d,EAAY7d,GAAKkJ,EAAIsI,MAAM0M,iBAAiB1I,GAAKxV,EAAI,GACrD0W,EAASxN,EAAIsI,MAAM0M,iBAAiB1I,GAAKxV,EAAI,GAAK,GAClD+d,EAAiB/d,GAAK6d,EAAY7d,GAC5BkJ,EAAIsI,MAAM0M,iBAAiB1I,GAAKxV,EAAI,GAC1C8d,EAAS,IAAMD,EAAY7d,GAG/B,IAASA,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAGxB,IAFA,IAAIqe,EAAMD,EAAQ,GACdE,EAAI,EACDF,EAAQC,EAAKD,IACZE,EAAI3a,KAAK4a,IAAIJ,EAAGC,MAChBE,EAAI3a,KAAK4a,IAAIJ,EAAGC,KAExBlV,EAAIsI,MAAM0M,iBAAiB1I,GAAKxV,GAAK6d,EAAY7d,EAAI,GAAKse,EAC1DR,EAAS,EAAI9d,EAAI,IAAMse,EACnBA,EAAIT,EAAY7d,EAAI,EAAI,IACxB0W,EAASmH,EAAY7d,EAAI,EAAI,GAAK,GAClCse,GAAQT,EAAY7d,EAAI,EAAI,IACrB6d,EAAY7d,EAAI,EAAI,GAAS,GAAJse,GAChC5H,EAAS4H,EAAI,GACbA,EAAIT,EAAY7d,EAAI,EAAI,IAAU,GAAJse,IAE9BA,EAAI,EAERP,EAAiB/d,EAAI,GAAKse,EAG9B,IAASte,EAAI,EAAGA,EAAI,IAAKA,EAAG,CACxB,IAAIuZ,EAAMsE,EAAgB,EAAJ7d,EAAQ,GACxB6d,EAAgB,EAAJ7d,EAAQ,GAAK6d,EAAgB,EAAJ7d,EAAQ,GAC/C4lB,EAAS,EACgB,EAAzB/H,EAAgB,EAAJ7d,EAAQ,GAASuZ,IAC7BqM,GAAU,GACmB,EAAzB/H,EAAgB,EAAJ7d,EAAQ,GAASuZ,IAC7BqM,GAAU,KAGlBH,EAAiBjQ,GAAKxV,GAAK4lB,EAG/B,GAAInY,EAAIyD,SAAU,CACd,IAAIxN,EAAIqa,EAAiB,GACzB,IAAS/d,EAAI,EAAGA,EAAI,GAAIA,IAChB0D,EAAIqa,EAAiB/d,KACrB0D,EAAIqa,EAAiB/d,IAG7BkJ,EAAIiI,MAAME,IAAIoG,GAAQjC,GAAOtM,EAAIiI,MAAMqN,SAAShJ,GAChDtM,EAAIiI,MAAMqN,SAAShJ,GAAO9R,EAI9B,IAAS1D,EAAI,EAAGA,EAAI,GAAIA,IAChB,GAAKie,EAAWzI,GAAKxV,EAAI,IACtB+d,EAAiB/d,GAAK4d,IACzBK,EAAWzI,GAAKxV,EAAI,GAAMA,EAAI,EAAK,GAiB3C,IAASA,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAI8G,EAAIgX,EAAS9d,EAAI,GACjB+G,EAAI+W,EAAS9d,GACT2D,KAAK0M,IAAIvJ,EAAGC,GACZ,KACAD,EAAI,IAAMC,GAAKA,EAAI,IAAMD,IAChB,GAAL9G,GAAUie,EAAWzI,GAAK,IAAMyI,EAAWzI,GAAKxV,KAChDie,EAAWzI,GAAK,GAAK,GAEzByI,EAAWzI,GAAKxV,GAAK,GAK7Bie,EAAWzI,GAAK,IAAMtM,EAAIsI,MAAMmN,YAAYnJ,KAC5CyI,EAAWzI,GAAK,GAAK,GAGS,GAA9BtM,EAAIsI,MAAMmN,YAAYnJ,IAClByI,EAAWzI,GAAK,GAAKyI,EAAWzI,GAAK,GACvCyI,EAAWzI,GAAK,GAAKyI,EAAWzI,GAAK,IAAO,IAC9CwI,EAAkB,EAEQ,GAAtBC,EAAWzI,GAAK,IAAiC,GAAtByI,EAAWzI,GAAK,KAC3CyI,EAAWzI,GAAK,GAAK,GAEC,GAAtByI,EAAWzI,GAAK,IAAiC,GAAtByI,EAAWzI,GAAK,KAC3CyI,EAAWzI,GAAK,GAAK,GAEC,GAAtByI,EAAWzI,GAAK,IAAiC,GAAtByI,EAAWzI,GAAK,KAC3CyI,EAAWzI,GAAK,GAAK,IAGzBA,EAAM,EACN0H,EAAa1H,GAAOwI,EAEG,GAAnBA,IACAd,EAAa,GAAKA,EAAa,GAAK,GAQ5C5L,EAAOkE,GAAOtM,EAAIoF,SAASkH,IA2a/BqQ,CAAwBpY,EAAKgI,EAAQC,EAAQ+B,EAAQ6E,EACjDC,EAAkBjL,EAAQmU,EAAkBxH,EAC5Cf,GAzIR,SAAmCzP,EAAKyP,GACpC,IAAIhU,EAAMuE,EAAIY,eAEVZ,EAAI6S,cAAgBnK,EAAanS,qBAIT,GAAnBkZ,EAAa,IAA8B,GAAnBA,EAAa,KAC1CA,EAAa,GAAKA,EAAa,GAAK,GAExC,IAAK,IAAI1H,EAAM,EAAGA,EAAMtM,EAAIM,aAAcgM,IAElC/H,EAAI6S,cAAgBnK,EAAalS,wBACjCiZ,EAAa1H,GAAO,GAEpB/H,EAAI6S,cAAgBnK,EAAajS,qBACjCgZ,EAAa1H,GAAO,GA2H5BsQ,CAA0BrY,EAAKyP,GAI3B,IAAK,IAAI1H,EAAM,EAAGA,EAAMkQ,EAAWlQ,IAG/B2G,EAAqB1O,EAAKgI,EAAQC,EAAQF,EAAKiC,EAC3CN,EAFM2F,EADNiJ,EAAa,EAANvQ,GAKX6G,EAAwC5O,EAAKgK,EAAQjC,EACjD2B,GAEsB,GAAtB+F,EAAa6I,GACbzE,EAAyBpY,EAAKiO,EAAWgC,EAAG3D,GAAM4D,EAAI5D,GAClDA,GAEJoL,EAAsB1X,EAAKsM,GAYnC,IATK0H,EAAa,GAAKA,EAAa,IAAO,GAEnCzP,EAAIkC,MAAQC,SAASC,cACrB8R,EAA6BxI,EAAIC,EAAKlQ,EAAI8c,SACtC9c,EAAIgH,IAAI6I,KAAMtL,EAAI4S,SAAWnX,EAAIgH,IAAIK,OACrC9C,EAAIoP,MAAO3T,EAAIkR,SAIlB5E,EAAM,EAAGA,EAAMkQ,EAAWlQ,IAEL,GAAtB0H,EADA6I,EAAa,EAANvQ,IAEPyE,EAA6B/Q,EAAKiQ,EAAG3D,GAAM4D,EAAI5D,GAAMA,GAO7D,IAAK,IAAI6D,EAAS,EAAGA,EAAS,EAAGA,IAAU,CACvC,IAAS7D,EAAM,EAAGA,EAAMkQ,IAAalQ,EAGP,GAAtB0H,EAFA6I,EAAa,EAANvQ,GAGPmL,EAAsBzX,EAAKsM,EAAK6D,IAIhC+C,EAAqB3O,EAAKgI,EAAQC,EAAQF,EAAK6D,EAC3CjC,EAFM2F,EAEgBgJ,GAC1BlF,EAAyBpT,EAAK2J,EAAa+B,EAAG3D,GAC1C4D,EAAI5D,GAAMA,EAAK6D,IAa3B,IAVK6D,EAAa,GAAKA,EAAa,IAAO,GAEnCzP,EAAIkC,MAAQC,SAASC,cACrB8R,EAA6BxI,EAAIC,EAAKlQ,EAAI+c,SACtC/c,EAAIgH,IAAI4I,KAAMrL,EAAI4S,SAAWnX,EAAIgH,IAAIK,OACrC9C,EAAIoP,MAAO3T,EAAIyQ,SAKlBnE,EAAM,EAAGA,EAAMkQ,IAAalQ,EAE7B,GAAK0H,EADL6I,EAAa,EAANvQ,IAEP0D,EAA6BhQ,EAAKiQ,EAAG3D,GAAM4D,EAAI5D,GAC3CA,EAAK6D,GAMrB,IAAS7D,EAAM,EAAGA,EAAMkQ,EAAWlQ,IAAO,CACtC,IAAIuQ,EAEJ,GAA0B,GAAtB7I,EAFA6I,EAAa,EAANvQ,GAKX,IAAK,IAAI8D,EAAK,EAAGA,EAAKjT,EAAUkF,QAAS+N,IAAM,CAC3C,IAAI4M,EAAW3P,EAAY,GAC3B,IAAS8C,EAAS,EAAGA,EAAS,EAAGA,IAAU,CACvC,IAAIG,EAAOtQ,EAAI0C,IAAI4J,GAAKvU,EAAEqY,GAAID,GAG9B,GAFAG,GAv8DE,GAy8DEyE,EAAWzI,GAAK6D,IAAW,GACO,GAA/B4E,EAAWzI,GAAK6D,EAAS,GAAS,CACrC,IAAIuF,EAAiB,GAAVvF,EAAeA,EAAS,EAAI,EACnCiF,EAAIpD,EAAUhS,EAAI0C,IAAI4J,GAAKvU,EAAEqY,GAAIsF,GAAMpF,EACvC2M,KACJ3M,EAAO7V,KAAKoX,IAAIvB,EAAM8E,QACY,GAA3BL,EAAWzI,GAAK6D,IACnBuF,EAAiB,GAAVvF,EAAeA,EAAS,EAAI,EACnCiF,EAAIpD,EAAUhS,EAAI0C,IAAI4J,GAAKvU,EAAEqY,GAAIsF,GAAMpF,EACvC4M,KACJ5M,EAAO7V,KAAKoX,IAAIvB,EAAM8E,KACJ,GAAVjF,GAA8C,GAA/B4E,EAAWzI,GAAK6D,EAAS,IAClC,GAAVA,GAA6C,GAA9BnQ,EAAIsI,MAAMmN,YAAYnJ,MACrCoJ,EAAiB,GAAVvF,EAAeA,EAAS,EAAI,EACnCiF,EAAIpD,EAAUhS,EAAI0C,IAAI4J,GAAKvU,EAAEqY,GAAIsF,GAAMpF,EACvC4M,KACJ5M,EAAO7V,KAAKoX,IAAIvB,EAAM8E,IAI1B9E,GAAQiM,EAAiBjQ,GAAK6D,GAE9B6M,EAAS7M,GAAUG,EAEvB,IAASH,EAAS,EAAGA,EAAS,EAAGA,IAC7BnQ,EAAI0C,IAAI4J,GAAKvU,EAAEqY,GAAID,GAAU6M,EAAS7M,IAKtD,IAAS7D,EAAM,EAAGA,EAAMkQ,EAAWlQ,IAC/BtM,EAAIsI,MAAMmN,YAAYnJ,GAAOyI,EAAWzI,GAAK,GAWjD,IAtPJ,SAAiC/H,EAAKyP,EAAcR,GAOhD,IANA,IAAIxT,EAAMuE,EAAIY,eAMLmH,EAAM,EAAGA,EAAMtM,EAAIM,aAAcgM,IAAO,CAC7C,IAAIjG,EAAYlJ,EAAU0J,UAGD,GAArBmN,EAAa1H,IAEbkB,EAASxN,EAAI8R,cAAcxF,IAAQnP,EAAU+M,YACzClK,EAAI8R,cAAcxF,IAAQnP,EAAUC,aACpCiJ,EAAYlJ,EAAUgN,aAG1B9D,EAAYlJ,EAAUC,WAClB4C,EAAI8R,cAAcxF,IAAQnP,EAAU0J,YACpC7G,EAAI8R,cAAcxF,GAAOnP,EAAU+M,YAEnClK,EAAI8R,cAAcxF,IAAQnP,EAAUgN,YACpCnK,EAAI8R,cAAcxF,GAAOnP,EAAUC,aAG3CoW,EAAYlH,GAAOtM,EAAI8R,cAAcxF,GAErCtM,EAAI8R,cAAcxF,GAAOjG,GAqN7B8W,CAAwB5Y,EAAKyP,EAAcR,GAKlClH,EAAM,EAAGA,EAAMkQ,EAAWlQ,IAAO,CACtC,IAAIgL,EACAC,EACApW,EACAiR,EAEA9F,EAAM,GACNgL,EAAM/D,EACNgE,GAAU,EACVpW,EAAOhE,EAAU0J,UACb2M,EAAY,IAAMrW,EAAUC,YACzBoW,EAAY,IAAMrW,EAAUC,aAC/B+D,EAAOhE,EAAUC,YACrBgV,EAAKiB,EAAiB9E,GAAQjC,EAAM,KAEpCgL,EAAMhE,EACNiE,EAAS,EACTpW,EAAOqS,EAAYlH,GACnB8F,EAAKgB,EAAc7E,GAAQjC,IAG3BnL,GAAQhE,EAAUC,WAClBka,EAAIC,EAASjL,GAAO6F,EAASC,EAAIpS,EAAIqS,eAErCiF,EAAIC,EAASjL,GAAOkG,EAASJ,EAAIpS,EAAIqS,eAGrC9N,EAAIyD,WACJhI,EAAIiI,MAAM3C,GAAGiJ,GAAQjC,GAAOgL,EAAIC,EAASjL,IAGjD,OAAO,GAmSXjS,KAAK+iB,cAAgB,SAAU7Y,GAC3B,IACIzN,EAwMI6c,EAzMJ3T,EAAMuE,EAAIY,eAEVkY,GAAW,EACXC,EAAQ,GACRC,EAAU,EAAGC,EAAU,EACvBC,GAAW,KAAMC,GAAW,IAC5BnD,EAAOlN,EAAYlQ,EAAUuM,QAC7B8Q,EAAanN,EAAYlQ,EAAUuM,QACnCsS,EAAO3O,EAAYlQ,EAAUuM,QAC7BgR,EAAQnW,EAAI0B,eAEhB,OAAQ1B,EAAIoZ,eACR,QACA,KAAK,EACDN,GAAW,EACX,MACJ,KAAK,EACDA,EAAY9Y,EAAI+B,KAAOwG,EAAUtR,UAAY+I,EAAI+B,KAAOwG,EAAUzR,OAElE,MACJ,KAAK,EACDgiB,GAAW,EACX,MACJ,KAAK,EACDC,EAAQ,EACRC,GAAW,KACXC,GAAW,MACXC,GAAW,KACXC,GAAW,KAOnB,IAJA1d,EAAI4d,kBAAoB,IACxB5d,EAAI8R,cAAc,GAAK9R,EAAI8R,cAAc,GAAK3U,EAAU0J,UAGnD/P,EAAI,EAAGA,EAAI,IAAKA,EAAG,CACpB,IAAK,IAAI0L,EAAI,EAAGA,EAAIrF,EAAUuM,SAAUlH,EACpCxC,EAAI8V,KAAKhf,GAAG0L,GAAK,KACjBxC,EAAI+V,KAAKjf,GAAG0L,GAAK,KACjBxC,EAAI4R,MAAM9a,GAAG0L,GAAKxC,EAAI+R,MAAMjb,GAAG0L,GAAK,EAExC,IAAK,IAAI4N,EAAK,EAAGA,EAAKjT,EAAUiF,QAASgO,IACrCpQ,EAAI2C,GAAG7L,GAAGwH,EAAE8R,GAAM,KAClBpQ,EAAI0C,IAAI5L,GAAGwH,EAAE8R,GAAM,KAEvB,IAAS5N,EAAI,EAAGA,EAAI,IAAKA,EAAG,CACxB,IAAS4N,EAAK,EAAGA,EAAKjT,EAAUkF,QAAS+N,IACrCpQ,EAAI2C,GAAG7L,GAAGiB,EAAEqY,GAAI5N,GAAK,KACrBxC,EAAI0C,IAAI5L,GAAGiB,EAAEqY,GAAI5N,GAAK,KAE1BxC,EAAIsI,MAAMmN,YAAY3e,GAAK,EAE/B,IAAS0L,EAAI,EAAGA,EAAI,EAAGA,IACnBxC,EAAIsI,MAAM0M,iBAAiBle,GAAG0L,GAAK,GAiB3C,IAbAxC,EAAI8O,iBAAiB,GAAK9O,EAAI8O,iBAAiB,GAAK,EAOpD9O,EAAIkR,QAAUiJ,EAAana,EAAI4S,WAAY5S,EAAIiR,KAAMjR,EAAI6W,KAAM0D,EAC3DC,EAAYxa,EAAIoW,MAAOpW,EAAI4Q,IAAIO,YAAauJ,EAC5Cvd,EAAUyI,QAAS5F,EAAI6d,cAAcvf,EAAGnB,EAAUyI,QAAV,KACzBzI,EAAUiF,SAC7BoL,EAASxN,EAAIkR,QAAU/T,EAAUuM,QAE5B5S,EAAI,EAAGA,EAAIkJ,EAAIkR,QAASpa,IAAK,CAC9B,IAAIgnB,EAAMP,EACNhD,EAAKzjB,IAAMwmB,IACXQ,EAAMN,GAAWjD,EAAKzjB,GAAKwmB,IAtEX,GAsE6BA,GAASC,GAtEtC,GAuEDhD,EAAKzjB,KAvEJ,GAuEmBwmB,IAEvCtB,EAAKllB,GAAK2D,KAAKwX,IAAI,GAAM6L,EAAM,IAC3B9d,EAAI4S,WAAW9b,GAAK,EACpBkJ,EAAI6S,YAAY/b,GAAK,EAAMkJ,EAAI4S,WAAW9b,GAE1CkJ,EAAI6S,YAAY/b,GAAK,EAQ7B,IALAkJ,EAAI6V,MAAQiG,EAAe9b,EAAI2V,MAAO3V,EAAIkR,QAASqJ,EAAMC,EACrDwB,EAAMqB,GAGN7a,EAAI,EACH1L,EAAI,EAAGA,EAAIkJ,EAAIkR,QAASpa,IAAK,CAI9B0D,EAAIuS,EAAQ5R,UACZ,IAAK,IAAI+F,EAAI,EAAGA,EAAIlB,EAAI4S,WAAW9b,GAAIoK,IAAKsB,IAAK,CAC7C,IAAIyX,EAAOS,EAAQlY,GAAK,IAASrF,EAAUyI,SAK3CmY,EAAQ1jB,KAAK2jB,WAAkB,IAAP/D,EAAa1V,GAAO,GAE5CwZ,EAAQtjB,KAAKwX,IAAI,GAAK,GAAM8L,GAGxBvjB,GADJujB,GAAS/d,EAAI4S,WAAW9b,MAEpB0D,EAAIujB,GAEZ/d,EAAIgH,IAAI6I,KAAK/Y,GAAK0D,GAYlBA,EAAoB,GAAV+f,EAAKzjB,GAAU,GAApB,IACG,IACJ0D,EAAI,KAEJA,GAAK,KACLA,GAAK,IAETA,GAAK,EACLwF,EAAIwY,SAAS1hB,GAAM2D,KAAKwX,IAAI,GAAMzX,EAAI,IAAOwF,EAAI4S,WAAW9b,GAchE,IARAkJ,EAAIyQ,QAAU0J,EAAana,EAAIuR,WAAYvR,EAAIwQ,KAAMxQ,EAAIiX,KAAMsD,EAC3DC,EAAYxa,EAAIuW,MAAOvW,EAAI4Q,IAAIC,YAAa6J,EAC5Cvd,EAAU6M,UAAWhK,EAAI6d,cAAc9lB,EAAGoF,EAAU6M,UAAV,IAC3B7M,EAAUkF,SAC7BmL,EAASxN,EAAIyQ,QAAUtT,EAAUuM,QAGjClH,EAAI,EACC1L,EAAI,EAAGA,EAAIkJ,EAAIyQ,QAAS3Z,IAAK,CAC9B,IAAI0D,EAUJ,IATIsjB,EAAML,EACNlD,EAAKzjB,IAAMwmB,IACXQ,EAAMJ,GAAWnD,EAAKzjB,GAAKwmB,IA9IX,GA8I6BA,GAASG,GA9ItC,GA+IDlD,EAAKzjB,KA/IJ,GA+ImBwmB,IAEvCtB,EAAKllB,GAAK2D,KAAKwX,IAAI,GAAM6L,EAAM,IAG/BtjB,EAAIuS,EAAQ5R,UACH+F,EAAI,EAAGA,EAAIlB,EAAIuR,WAAWza,GAAIoK,IAAKsB,IAAK,CAC7C,IACIub,EADA9D,EAAOS,EAAQlY,GAAK,IAASrF,EAAU6M,WAO3C+T,EAAQ1jB,KAAK2jB,WAAkB,IAAP/D,EAAa1V,GAAO,GAE5CwZ,EAAQtjB,KAAKwX,IAAI,GAAK,GAAM8L,GAGxBvjB,GADJujB,GAAS/d,EAAIuR,WAAWza,MAEpB0D,EAAIujB,GAEZ/d,EAAIgH,IAAI4I,KAAK9Y,GAAK0D,EAOlBA,EAAsB,EAAV+f,EAAKzjB,GAAW,GAAtB,EACFyjB,EAAKzjB,GAAK,KACV0D,GAAK,EAAsB,IAAlBC,KAAKwjB,IAAI,EAAIzjB,IAEtB+f,EAAKzjB,GAAK,KACV0D,GAAK,EAAsB,IAAlBC,KAAKwjB,IAAI,EAAIzjB,IAEtBA,GAAK,KACLA,GAAK,IAETA,GAAK,EACLwF,EAAImY,SAASrhB,GAAK2D,KAAKwX,IAAI,GAAMzX,EAAI,IAC/BwF,EAAIuR,WAAWza,GAGzBkJ,EAAI2R,MAAQmK,EAAe9b,EAAIyR,QAASzR,EAAIyQ,QAAS8J,EAAMC,EACvDwB,EAAMqB,GApzEVtO,EAAYtU,KAAKwX,IAAI,GAAI,EAAgB,IACzCjD,EAAYvU,KAAKwX,IAAI,GAAI,KACzBhD,EAAWxU,KAAKwX,IAAI,GAAKiM,KAqzEzBxQ,EAAIf,SAAS3M,GAGbA,EAAIme,MAAQ1jB,KAAK6e,KAAK,EAAM3L,GA7/ED,IA8/EO+M,EAAQ,MAItC/G,EA5/EO,IA6/EwB,IAAN,EAApBpP,EAAI6Z,iBACLzK,EAAQ,GACRlZ,KAAK4a,IAAI9Q,EAAIoP,OAAS,IACtBA,EAAQpP,EAAIoP,OAChBpP,EAAIoP,MAAQA,EAMZ,IAAK,IAAIhS,EAAI,EAAGA,EAAI3B,EAAIkR,QAASvP,IACzB3B,EAAI2V,MAAMhU,GAAG,GAAK3B,EAAIkR,QAAU,IAChClR,EAAI2V,MAAMhU,GAAG,GAAK3B,EAAIkR,QAAU,GAO5C,IAAImN,EAAkB,IAAOre,EAAIQ,QAAUka,EAU3C,GATA1a,EAAIgH,IAAImX,MAAQ1jB,KAAKwX,IAAI,IAAK,IAAaoM,GAC3Cre,EAAIgH,IAAIK,OAAS,IAEjBrH,EAAIgH,IAAIM,YAAc,EAGtBkG,EAASxN,EAAIiR,KAAK9T,EAAUiF,QAAU,IAAMpC,EAAIkR,SAChD1D,EAASxN,EAAIwQ,KAAKrT,EAAUkF,QAAU,IAAMrC,EAAIyQ,UAE5B,GAAhBlM,EAAI+Z,QAAe,CAEnB,IACIC,EAAWha,EAAI0B,eACZ9I,EAAUyI,QACb4Y,EAAc,EAElB,IADAvE,EAAO,EACFnjB,EAAI,EAAGA,EAAIqG,EAAUyI,QAAU,IAAK9O,EAGrCmjB,GAAQsE,EACRve,EAAIgH,IAAI+G,MAAMjX,GAAK,EAAK2D,KAAKwX,IAAI,GAAI5X,KAAK2jB,WAAW/D,EAAM1V,GAAO,IAClEia,GAAexe,EAAIgH,IAAI+G,MAAMjX,GAGjC,IADA0nB,EAAc,EAAMA,EACf1nB,EAAIqG,EAAUyI,QAAU,IAAK9O,GAAK,GACnCkJ,EAAIgH,IAAI+G,MAAMjX,IAAM0nB,EAIxB,IAAS7c,EAAIa,EAAI,EAAGb,EAAI3B,EAAIyQ,UAAW9O,EACnC,IAAK7K,EAAI,EAAGA,EAAIkJ,EAAIuR,WAAW5P,KAAM7K,IAC/B0L,EAIV,IADAgL,EAAc,KAALhL,GACAb,EAAIa,EAAI,EAAGb,EAAI3B,EAAIkR,UAAWvP,EACnC,IAAK7K,EAAI,EAAGA,EAAIkJ,EAAI4S,WAAWjR,KAAM7K,IAC/B0L,EAMd,IAHIgL,EAAc,KAALhL,GAEbA,EAAI,EACC1L,EAAI,EAAGA,EAAIkJ,EAAIkR,QAASpa,IACrBmjB,EAAOS,GAASlY,EAAIxC,EAAI4S,WAAW9b,GAAK,IAAM,EAAMqG,EAAUyI,SAClE5F,EAAI8c,SAAShmB,GAAKulB,EAAcpC,GAChCzX,GAAKxC,EAAI4S,WAAW9b,GAExB,KAAOA,EAAIqG,EAAUuM,SAAU5S,EAC3BkJ,EAAI8c,SAAShmB,GAAK,EAGtB,IADA0L,EAAI,EACC1L,EAAI,EAAGA,EAAIkJ,EAAIyQ,QAAS3Z,IACrBmjB,EAAOS,GAASlY,EAAIxC,EAAIuR,WAAWza,GAAK,IAAM,EAAMqG,EAAU6M,WAClEhK,EAAI+c,SAASjmB,GAAKulB,EAAcpC,GAChCzX,GAAKxC,EAAIuR,WAAWza,GAExB,KAAOA,EAAIqG,EAAUuM,SAAU5S,EAC3BkJ,EAAI+c,SAASjmB,GAAK,EAEtB,OAAO,GAgDXuD,KAAK2jB,WAAa,SAAU3V,EAAG9D,GAC3B,IAAIqS,EACJ,OAAQrS,EAAI+Z,SACR,KAAK,EACD1H,EAAM0F,EAAcjU,EAAG,GACvB,MACJ,KAAK,EAEDuO,EAAM0F,EAAcjU,GAAI,GACxB,MACJ,KAAK,EACDuO,EAAM0F,EAAcjU,EAAG,GACvB,MACJ,KAAK,EAEDuO,EAAM0F,EAAcjU,EAAG,GAAK,EAC5B,MACJ,KAAK,EACDuO,EAAM0F,EAAcjU,EAAG9D,EAAIka,UAC3B,MACJ,QACI7H,EAAM0F,EAAcjU,EAAG,GAG/B,OAAOuO,IAUf,SAAS8H,EAAWtkB,GAChB,IAAIukB,EAAWvkB,EACfC,KAAKD,QAAU,WACX,OAAOukB,GAIfD,EAAW1I,OAAS,IAAI0I,EAAW,GACnCA,EAAW/X,aAAe,IAAI+X,EAAW,GACzCA,EAAWE,aAAe,IAAIF,EAAW,GACzCA,EAAWG,KAAO,IAAIH,EAAW,GACjCA,EAAWI,QAAU,IAAIJ,EAAW,GAEpC,IAAIK,EAAaL,EA4QbM,EA1QJ,WAEI3kB,KAAK4kB,SAAW,EAOhB5kB,KAAK6kB,YAAc,EAInB7kB,KAAK8kB,aAAe,EAIpB9kB,KAAK+kB,cAAgB,EAKrB/kB,KAAK4L,eAAiB,EAKtB5L,KAAKglB,MAAQ,EAIbhlB,KAAKilB,WAAa,EAIlBjlB,KAAKklB,YAAc,EAMnBllB,KAAK2N,UAAW,EAIhB3N,KAAKuO,cAAe,EAKpBvO,KAAKmlB,aAAc,EAInBnlB,KAAKolB,QAAU,EAIfplB,KAAKoM,KAAOsY,EAAW/I,OAIvB3b,KAAKsN,UAAW,EAIhBtN,KAAKqlB,aAAc,EAInBrlB,KAAKslB,gBAAiB,EAItBtlB,KAAKulB,mBAAoB,EAIzBvlB,KAAKwlB,wBAAyB,EAS9BxlB,KAAKylB,MAAQ,EAIbzlB,KAAK0lB,kBAAoB,EAMzB1lB,KAAK2lB,UAAY,EAIjB3lB,KAAK4lB,SAAW,EAIhB5lB,KAAK6lB,UAAY,EAOjB7lB,KAAK8lB,SAAW,EAIhB9lB,KAAK+lB,iBAAmB,EAIxB/lB,KAAKgmB,YAAa,EAKlBhmB,KAAKimB,mBAAoB,EAGzBjmB,KAAKkmB,WAAa,EAClBlmB,KAAKmmB,iBAAmB,EACxBnmB,KAAKomB,eAAgB,EACrBpmB,KAAKsjB,cAAgB,EACrBtjB,KAAK+jB,cAAgB,EAErB/jB,KAAKqmB,OAAS,EAGdrmB,KAAKiM,IAAM,KAIXjM,KAAKsmB,WAAa,EAIlBtmB,KAAKumB,MAAQ,EACbvmB,KAAKwmB,sBAAwB,EAC7BxmB,KAAKymB,qBAAuB,EAC5BzmB,KAAK0mB,qBAAuB,EAK5B1mB,KAAK2mB,aAAe,EAOpB3mB,KAAK4mB,YAAc,EAInB5mB,KAAK6mB,aAAe,EAIpB7mB,KAAK8mB,aAAe,EAIpB9mB,KAAK+mB,cAAgB,EAOrB/mB,KAAKgnB,cAAgB,EACrBhnB,KAAKinB,oBAAsB,EAI3BjnB,KAAKknB,SAAU,EAIflnB,KAAKmnB,UAAW,EAIhBnnB,KAAKonB,OAAQ,EAIbpnB,KAAKikB,QAAU,EAIfjkB,KAAKokB,SAAW,EAIhBpkB,KAAK8c,SAAW,EAIhB9c,KAAKqnB,WAAa,EAIlBrnB,KAAKwU,iBAAmB,EAIxBxU,KAAKsnB,kBAAoB,EACzBtnB,KAAK+c,aAAe,KAIpB/c,KAAKunB,aAAc,EACnBvnB,KAAK4b,aAAe,EAIpB5b,KAAKsZ,MAAQ,EAKbtZ,KAAKwnB,MAAO,EAIZxnB,KAAKynB,aAAe,EAUpBznB,KAAK0nB,QAAU,EACf1nB,KAAK2nB,cAAgB,EAIrB3nB,KAAK4nB,gBAAkB,EACvB5nB,KAAKwL,UAAY,EAIjBxL,KAAK6nB,SAAW,EAIhB7nB,KAAK8nB,mBAAqB,EAI1B9nB,KAAK8K,eAAiB,MAKtBid,EAAW,GAMfA,EAASC,OAA8B,EAApBllB,EAAUkF,QAE7B,IAAIigB,EAAWF,EAEXG,EAAe7mB,EAAOoB,UACtB0lB,EAAa9mB,EAAO0H,QAwFpBqf,EAvFJ,WAEIpoB,KAAKyD,GAAKykB,EAAa,KAEvBloB,KAAKqoB,OAASF,EAAW,KAEzBnoB,KAAKsoB,SAAWH,EAAWF,EAASD,QACpChoB,KAAKuoB,UAAY,EAEjBvoB,KAAKwoB,eAAiB,EACtBxoB,KAAKyoB,WAAa,EAClBzoB,KAAK0oB,OAAS,EACd1oB,KAAK2oB,YAAc,EACnB3oB,KAAK4oB,kBAAoB,EACzB5oB,KAAK+G,WAAa,EAClB/G,KAAKkH,iBAAmB,EACxBlH,KAAK6oB,aAAeV,EAAW,GAC/BnoB,KAAK8oB,cAAgBX,EAAW,GAChCnoB,KAAK+oB,cAAgB,EACrB/oB,KAAKgpB,cAAgB,EACrBhpB,KAAKipB,QAAU,EACfjpB,KAAKkpB,eAAiB,EACtBlpB,KAAKmpB,mBAAqB,EAE1BnpB,KAAKopB,aAAe,EACpBppB,KAAKqpB,SAAW,EAChBrpB,KAAKspB,SAAW,EAChBtpB,KAAKupB,SAAW,EAChBvpB,KAAKwpB,OAAS,EACdxpB,KAAKypB,OAAS,EACdzpB,KAAK0pB,UAAY,EACjB1pB,KAAK2pB,MAAQxB,EAAWF,EAASD,QACjChoB,KAAKoQ,OAAS+X,EAAWF,EAASD,QAClChoB,KAAK4pB,WAAa,EAIlB5pB,KAAK6pB,oBAAsB,KAC3B7pB,KAAK8pB,KAAO3B,EAAW,GAEvBnoB,KAAK+pB,kBAAoB,EAEzB,IAAI9hB,EAAOjI,KACX,SAASgqB,EAAUC,GACf,OAAO,IAAIjrB,WAAWirB,GAK1BjqB,KAAK5D,OAAS,SAAU8tB,GAHxB,IAAqBD,EAIjBhiB,EAAKxE,IAJYwmB,EAIKC,EAAMzmB,GAHrB,IAAIvE,aAAa+qB,IAIxBhiB,EAAKogB,OAAS2B,EAAUE,EAAM7B,QAC9BpgB,EAAKqgB,SAAW0B,EAAUE,EAAM5B,UAChCrgB,EAAKsgB,UAAY2B,EAAM3B,UAEvBtgB,EAAKugB,eAAiB0B,EAAM1B,eAC5BvgB,EAAKwgB,WAAayB,EAAMzB,WACxBxgB,EAAKygB,OAASwB,EAAMxB,OACpBzgB,EAAK0gB,YAAcuB,EAAMvB,YACzB1gB,EAAK2gB,kBAAoBsB,EAAMtB,kBAC/B3gB,EAAKlB,WAAamjB,EAAMnjB,WACxBkB,EAAKf,iBAAmBgjB,EAAMhjB,iBAC9Be,EAAK4gB,aAAemB,EAAUE,EAAMrB,cACpC5gB,EAAK6gB,cAAgBkB,EAAUE,EAAMpB,eACrC7gB,EAAK8gB,cAAgBmB,EAAMnB,cAC3B9gB,EAAK+gB,cAAgBkB,EAAMlB,cAC3B/gB,EAAKghB,QAAUiB,EAAMjB,QACrBhhB,EAAKihB,eAAiBgB,EAAMhB,eAC5BjhB,EAAKkhB,mBAAqBe,EAAMf,mBAEhClhB,EAAKmhB,aAAec,EAAMd,aAC1BnhB,EAAKohB,SAAWa,EAAMb,SACtBphB,EAAKqhB,SAAWY,EAAMZ,SACtBrhB,EAAKshB,SAAWW,EAAMX,SACtBthB,EAAKuhB,OAASU,EAAMV,OACpBvhB,EAAKwhB,OAASS,EAAMT,OACpBxhB,EAAKyhB,UAAYQ,EAAMR,UACvBzhB,EAAK0hB,MAAQK,EAAUE,EAAMP,OAC7B1hB,EAAKmI,OAAS4Z,EAAUE,EAAM9Z,QAC9BnI,EAAK2hB,WAAaM,EAAMN,WAExB3hB,EAAK4hB,oBAAsBK,EAAML,oBAAoBnoB,MAAM,GAC3DuG,EAAK6hB,KAAOE,EAAUE,EAAMJ,MAC5B7hB,EAAK8hB,kBAAoBG,EAAMH,oBAMnCI,EAAY9oB,EAAO0H,QAgBnBqhB,EAfJ,WACIpqB,KAAKuG,GAAK,CAAC,CAAC,KAAM,MAAO,CAAC,KAAM,OAChCvG,KAAKqqB,gBAAkB,EACvBrqB,KAAKsqB,aAAe,EACpBtqB,KAAKuqB,cAAgB,EACrBvqB,KAAKwqB,eAAiB,EACtBxqB,KAAKyqB,MAAQ,CAACN,EAAU,GAAIA,EAAU,IAEtC,IAAK,IAAIjkB,EAAK,EAAGA,EAAK,EAAGA,IACrB,IAAK,IAAIF,EAAK,EAAGA,EAAK,EAAGA,IACrBhG,KAAKuG,GAAGL,GAAIF,GAAM,IAAIoiB,GAiB9BsC,EAAYrpB,EAAOc,OACnBwoB,EAAatpB,EAAO0H,QAyBpB6hB,GAxBJ,SAAkBC,EAAMC,EAAMC,EAAOC,GAEjChrB,KAAKiE,EAAI0mB,EAAW,EAAI7nB,EAAUiF,SAClC/H,KAAKtC,EAAIitB,EAAW,EAAI7nB,EAAUkF,SAClChI,KAAKirB,OAASN,EAAW,EAAI7nB,EAAU0M,QACvCxP,KAAKkrB,OAASP,EAAW,EAAI7nB,EAAU2M,QACvC,IAAIxL,EAAIjE,KAAKiE,EACTvG,EAAIsC,KAAKtC,EAEW,GAApBC,UAAUC,SAGVoC,KAAK6qB,KAAOltB,UAAU,GACtBqC,KAAK8qB,KAAOntB,UAAU,GACtBqC,KAAK+qB,MAAQptB,UAAU,GACvBqC,KAAKgrB,MAAQrtB,UAAU,GAEvB+sB,EAAUjjB,UAAUzH,KAAK6qB,KAAM,EAAG5mB,EAAG,EAAG7D,KAAKoX,IAAIxX,KAAK6qB,KAAKjtB,OAAQoC,KAAKiE,EAAErG,SAC1E8sB,EAAUjjB,UAAUzH,KAAK8qB,KAAM,EAAGptB,EAAG,EAAG0C,KAAKoX,IAAIxX,KAAK8qB,KAAKltB,OAAQoC,KAAKtC,EAAEE,SAC1E8sB,EAAUjjB,UAAUzH,KAAK+qB,MAAO,EAAG/qB,KAAKirB,OAAQ,EAAG7qB,KAAKoX,IAAIxX,KAAK+qB,MAAMntB,OAAQoC,KAAKirB,OAAOrtB,SAC3F8sB,EAAUjjB,UAAUzH,KAAKgrB,MAAO,EAAGhrB,KAAKkrB,OAAQ,EAAG9qB,KAAKoX,IAAIxX,KAAKgrB,MAAMptB,OAAQoC,KAAKkrB,OAAOttB,WAM/FutB,GAAe9pB,EAAOoB,UACtB2oB,GAAiB/pB,EAAOwG,YACxBwjB,GAAahqB,EAAO0H,QAuBpBuiB,GAdJ,WACItrB,KAAK2a,iBAAmByQ,GAAe,CAAC,EAAG,IAC3CprB,KAAKob,YAAciQ,GAAW,GAC9BrrB,KAAKkO,SAAWid,GAAa,IAC7BnrB,KAAKurB,SAAWJ,GAAaroB,EAAUiF,SACvC/H,KAAKwrB,UAAYL,GAAaroB,EAAUkF,SAKxChI,KAAKmb,WAAa,EAClBnb,KAAKkb,aAAe,GAsCpBuQ,GA/BJ,WAIIzrB,KAAKsf,IAAM,EAIXtf,KAAK0rB,KAAO,EAIZ1rB,KAAK2rB,KAAO,EAIZ3rB,KAAK4rB,IAAM,EAIX5rB,KAAK6rB,KAAO,EAIZ7rB,KAAK8rB,IAAM,KACX9rB,KAAK+rB,cAAgB,EACrB/rB,KAAKgsB,cAAgB,EAErBhsB,KAAKisB,eAAiB,GAKtBC,GAAa7qB,EAAO8qB,SACpBC,GAAe/qB,EAAOgrB,WACtBC,GAAcjrB,EAAOoB,UACrB8pB,GAAgBlrB,EAAOwG,YACvB2kB,GAAYnrB,EAAO0H,QACnB0jB,GAAcprB,EAAOqrB,UAOzB,SAASC,KA8LL,SAASC,IACL5sB,KAAK6sB,aAAe,EACpB7sB,KAAK8sB,IAAM,EAEX9sB,KAAK+sB,IAAMb,GAjMM,IAoBrBlsB,KAAKgtB,SAAW,EAEhBhtB,KAAKmL,uBAAyB,EAC9BnL,KAAKitB,oBAAsB,EAC3BjtB,KAAKktB,0BAA4B,EAGjCltB,KAAKmtB,MAAQZ,GAAc,CAAC,EAAGI,GAAoBS,SAKnDptB,KAAKmG,QAAU,EAIfnG,KAAKqtB,YAAc,EAInBrtB,KAAKiG,aAAe,EAKpBjG,KAAKstB,eAAiB,EAEtBttB,KAAKutB,qBAAuB,EAC5BvtB,KAAKsL,QAAU,EAIftL,KAAKwtB,gBAAkB,EAIvBxtB,KAAKytB,gBAAkB,EACvBztB,KAAK2O,cAAgB,EACrB3O,KAAK0tB,iBAAmB,EACxB1tB,KAAKoN,SAAW,EAMhBpN,KAAK2tB,SAAW,EAChB3tB,KAAK4tB,SAAW,EAIhB5tB,KAAK6tB,UAAY,EACjB7tB,KAAK8tB,UAAY,EAKjB9tB,KAAK+tB,cAAgB,EAQrB/tB,KAAKguB,kBAAoB,EAQzBhuB,KAAKiuB,gBAAkB,EAKvBjuB,KAAK6L,SAAW,EAOhB7L,KAAKkuB,mBAAqB,EAK1BluB,KAAK8oB,cAAgB,EAIrB9oB,KAAKmuB,iBAAmB,EAKxBnuB,KAAKouB,gBAAkB,EAGvBpuB,KAAKsG,QAAU,IAAI8jB,EACnBpqB,KAAK6N,SAAWye,GAAY,GAM5BtsB,KAAKyL,QAAU,EACfzL,KAAK2L,SAAW,EAChB3L,KAAK0L,SAAW,EAMhB1L,KAAKquB,SAAW,KAChBruB,KAAKsuB,UAAY,EAIjBtuB,KAAKuuB,SAAW/B,GAAU,GAE1BxsB,KAAKwuB,YAAchC,GAAU,GAE7BxsB,KAAKgY,cAAgB,EAErBhY,KAAKyuB,OAASjC,GAAU,KAExBxsB,KAAK0uB,WAAalC,GAAUvE,EAASD,QAKrChoB,KAAK2uB,aAAc,EAInB3uB,KAAK4uB,UAAY,IAAIptB,MAAM,GAE3BxB,KAAK6uB,UAAY,IAAIrtB,MAAM,EAAImrB,GAAoBmC,IAAM,GAEzD9uB,KAAK+uB,MAAQ3C,GAAa,GAC1BpsB,KAAKgvB,aAAe,EAIpBhvB,KAAK2G,UAAY4lB,GAAc,CAAC,EAAG,EAAG,GAAIzpB,EAAUsM,UACpDpP,KAAKmH,WAAamlB,GAAY,IA4B9BtsB,KAAKivB,OAAS,IAAIztB,MAAMmrB,GAAoBuC,gBAE5ClvB,KAAKmvB,MAAQ,EACbnvB,KAAKovB,MAAQ,EACbpvB,KAAKqvB,eAAiB,EAMtBrvB,KAAKga,SAAW,EAIhBha,KAAK+Z,QAAU,EAGf/Z,KAAKwjB,cAAgB,IAAIoH,GAOzB5qB,KAAKme,SAAWmO,GAAYxpB,EAAUuM,QACtCrP,KAAK8d,SAAWwO,GAAYxpB,EAAUuM,QACtCrP,KAAKyb,KAAO8Q,GAAc,CAAC,EAAGzpB,EAAUuM,SACxCrP,KAAK0b,KAAO6Q,GAAc,CAAC,EAAGzpB,EAAUuM,SACxCrP,KAAKuX,MAAQgV,GAAc,CAAC,EAAGzpB,EAAUuM,SACzCrP,KAAK0X,MAAQ6U,GAAc,CAAC,EAAGzpB,EAAUuM,SACzCrP,KAAKsX,MAAQ,KACbtX,KAAKwb,MAAQ,KACbxb,KAAK8jB,MAAQ,EAIb9jB,KAAKqI,IAAM,IAAI7G,MAAM,GACrBxB,KAAKsI,GAAK,IAAI9G,MAAM,GAKpBxB,KAAK+K,SAAWuhB,GAAY,GAM5BtsB,KAAK6M,YAAc0f,GAAc,CAAC,EAAG,IAIrCvsB,KAAKyU,iBAAmB6X,GAAY,GAKpCtsB,KAAK+b,MAAQuQ,GAAYxpB,EAAUiF,SACnC/H,KAAKkc,MAAQoQ,GAAYxpB,EAAUkF,SACnChI,KAAKwc,KAAOgQ,GAAU1pB,EAAUiF,SAChC/H,KAAK4W,KAAO4V,GAAU1pB,EAAUiF,SAChC/H,KAAK4c,KAAO4P,GAAU1pB,EAAUkF,SAChChI,KAAKmW,KAAOqW,GAAU1pB,EAAUkF,SAChChI,KAAK6W,QAAU,EACf7W,KAAKoW,QAAU,EAEfpW,KAAKsb,MAAQmR,GAAY,CAAC3pB,EAAUuM,OAAQ,IAC5CrP,KAAKoX,QAAUqV,GAAY,CAAC3pB,EAAUuM,OAAQ,IAE9CrP,KAAKkX,WAAasV,GAAU1pB,EAAUuM,QACtCrP,KAAKuY,WAAaiU,GAAU1pB,EAAUuM,QACtCrP,KAAKwY,YAAc8T,GAAYxpB,EAAUuM,QACzCrP,KAAKyiB,SAAW6J,GAAYxpB,EAAUuM,QACtCrP,KAAK0iB,SAAW4J,GAAYxpB,EAAUuM,QACtCrP,KAAKsvB,gBAAkB,EACvBtvB,KAAKuvB,gBAAkB,EAGvBvvB,KAAKiL,GAAKqhB,GAAY,GACtBtsB,KAAKwvB,eAAiB,EACtBxvB,KAAKyvB,eAAiB,EACtBzvB,KAAKujB,kBAAoB,EAKzBvjB,KAAKyX,cAAgB+U,GAAU,GAK/BxsB,KAAKiO,MAAQ,IAAIqd,GAKjBtrB,KAAK0vB,eAAiB,IAAIjE,GAM1BzrB,KAAK2M,IAAM,KAEX3M,KAAKuW,IAAM,KAEXvW,KAAK2vB,YAAc,EACnB3vB,KAAK4vB,cAAgB,EAGrB5vB,KAAKulB,mBAAoB,EACzBvlB,KAAKslB,gBAAiB,EACtBtlB,KAAK6vB,gBAAiB,EACtB7vB,KAAK8vB,WAAa,EAClB9vB,KAAK+vB,UAAY,EACjB/vB,KAAKgwB,eAAiB,EAEtBhwB,KAAKiwB,OAAS,KAKdjwB,KAAKkwB,iBAAmB,EAIxBlwB,KAAKmwB,YAAc,EAGnBnwB,KAAK4O,wBAA0B6d,GAAY,CAAC,GAAI,IAIhDzsB,KAAK8O,uBAAyB2d,GAAY,CAAC,GAAI,IAI/CzsB,KAAK4N,MAAQ,KACb5N,KAAKowB,IAAM,KAEXpwB,KAAKqwB,mBAAqB,EAG1BrwB,KAAKswB,YAAc,KACnBtwB,KAAKuwB,YAAc,KAGnBvwB,KAAKoO,eAAiB,KAEtB,IAAK,IAAI3R,EAAI,EAAGA,EAAIuD,KAAKsI,GAAG1K,OAAQnB,IAChCuD,KAAKsI,GAAG7L,GAAK,IAAIqL,EAErB,IAASrL,EAAI,EAAGA,EAAIuD,KAAKqI,IAAIzK,OAAQnB,IACjCuD,KAAKqI,IAAI5L,GAAK,IAAIqL,EAEtB,IAASrL,EAAI,EAAGA,EAAIuD,KAAKivB,OAAOrxB,OAAQnB,IACpCuD,KAAKivB,OAAOxyB,GAAK,IAAImwB,EAvW7BD,GAAoBS,OAAU,KAAWtqB,EAAUkM,SAAWlM,EAAUoM,UACxEyd,GAAoBuC,eAAiB,IACrCvC,GAAoB6D,qBAAuB,KAC3C7D,GAAoB8D,qBAAuB,KAC3C9D,GAAoBmC,IAAM,IAwW1B,IAAI4B,GAAsB/D,GAEtBgE,GAAetvB,EAAOoB,UA6DtBmuB,GAxDJ,WAII5wB,KAAK4M,UAAY,EAKjB5M,KAAK+M,eAAiB,EAItB/M,KAAKgN,OAAS,EAIdhN,KAAKiN,YAAc,EAInBjN,KAAK8jB,MAAQ,EAIb9jB,KAAKshB,MAAQ,EAIbthB,KAAKiE,EAAI0sB,GAAa7tB,EAAUiF,SAIhC/H,KAAKtC,EAAIizB,GAAa7tB,EAAUkF,SAIhChI,KAAKirB,OAAS0F,GAAa7tB,EAAU0M,QAIrCxP,KAAKkrB,OAASyF,GAAa7tB,EAAU2M,QAIrCzP,KAAKwV,KAAOmb,GAAa7tB,EAAUuM,QAInCrP,KAAKuV,KAAOob,GAAa7tB,EAAUuM,QAInCrP,KAAK0T,MAAQid,GAAa7tB,EAAUyI,QAAU,IA+F9CslB,GAAYxvB,EAAOc,OACnB2uB,GAAYzvB,EAAOkB,OAuBvB,SAASwuB,KAMYA,GAAeC,WAQZD,GAAeE,cAVnC,IAWIC,EAA4BH,GAAeG,0BAI3CC,EAA8BJ,GAAeI,4BAO7CC,GAHyBL,GAAeM,uBAG/B,CACT,CAAC,eAAmB,kBAAmB,gBACnC,kBAAmB,iBAAmB,mBACrC,eAAkB,mBAAoB,iBACtC,kBAAmB,gBAAkB,iBACrC,iBAAmB,iBAAkB,gBACtC,iBAAkB,iBAAmB,gBACrC,gBAAkB,gBAAkB,iBACxC,CAAC,gBAAmB,kBAAmB,gBACnC,kBAAmB,iBAAmB,kBACrC,gBAAkB,iBAAmB,iBACrC,iBAAkB,gBAAkB,kBACpC,iBAAmB,iBAAkB,gBACtC,kBAAmB,iBAAmB,gBACtC,gBAAkB,iBAAmB,iBACzC,CAAC,iBAAmB,kBAAmB,gBACnC,kBAAmB,iBAAmB,iBACtC,gBAAkB,kBAAmB,iBACpC,iBAAkB,gBAAkB,iBACrC,iBAAmB,gBAAkB,gBACrC,iBAAmB,iBAAmB,gBACtC,gBAAkB,gBAAmB,iBACzC,CAAC,iBAAmB,kBAAmB,gBACnC,iBAAmB,iBAAmB,eACtC,iBAAmB,gBAAmB,iBACrC,iBAAmB,gBAAkB,iBACrC,iBAAmB,gBAAkB,gBACtC,iBAAmB,cAAkB,gBACrC,gBAAkB,iBAAmB,iBACzC,CAAC,iBAAmB,kBAAmB,eACnC,iBAAmB,gBAAkB,gBACrC,iBAAmB,iBAAmB,gBACtC,iBAAmB,gBAAmB,iBACrC,gBAAmB,gBAAkB,gBACtC,gBAAkB,iBAAmB,iBACpC,eAAkB,iBAAmB,gBAC1C,CAAC,gBAAmB,iBAAmB,gBACnC,iBAAmB,iBAAmB,eACrC,gBAAkB,gBAAkB,iBACpC,iBAAmB,gBAAkB,gBACtC,gBAAkB,gBAAkB,gBACpC,iBAAmB,gBAAkB,iBACpC,gBAAkB,gBAAkB,iBACzC,CAAC,iBAAmB,kBAAmB,gBACnC,gBAAkB,gBAAmB,gBACrC,gBAAkB,iBAAmB,gBACrC,gBAAkB,gBAAmB,iBACpC,gBAAkB,eAAkB,iBACpC,gBAAkB,gBAAkB,iBACpC,eAAkB,iBAAmB,iBAC1C,CAAC,iBAAmB,iBAAmB,iBAClC,iBAAmB,iBAAmB,gBACvC,gBAAkB,eAAkB,gBACpC,gBAAkB,iBAAmB,iBACpC,iBAAmB,gBAAkB,iBACrC,gBAAkB,gBAAkB,iBACpC,gBAAkB,iBAAmB,iBAC1C,CAAC,iBAAmB,gBAAmB,iBAClC,iBAAmB,iBAAmB,gBACvC,iBAAmB,iBAAmB,gBACtC,gBAAkB,gBAAkB,iBACnC,iBAAmB,iBAAmB,iBACtC,iBAAmB,aAAkB,gBACtC,eAAkB,gBAAmB,mBAEzCC,EAAW,CACX,CAAC,iBAAmB,kBAAmB,iBACnC,gBAAkB,iBACtB,CAAC,iBAAmB,kBAAmB,iBACnC,eAAkB,iBACtB,CAAC,iBAAmB,kBAAmB,iBACnC,gBAAkB,iBACtB,CAAC,iBAAmB,kBAAmB,iBACnC,gBAAkB,iBACtB,CAAC,iBAAmB,kBAAmB,iBACnC,gBAAkB,iBACtB,CAAC,iBAAmB,kBAAmB,iBACnC,gBAAkB,iBACtB,CAAC,iBAAmB,kBAAmB,iBACnC,gBAAkB,iBACtB,CAAC,iBAAmB,iBAAmB,iBACnC,gBAAkB,iBACtB,CAAC,iBAAmB,kBAAmB,iBACnC,gBAAkB,kBAS1B,SAASC,EAAWC,EAAOC,EAAUC,EAAQC,EAAWC,EAAUC,GAE9D,KAAuB,GAAfD,KAEJF,EAAOC,GAAa,MAAQH,EAAMC,EAAW,GAAKI,EAAO,GACnDH,EAAOC,EAAY,GAAKE,EAAO,GAAKL,EAAMC,EAAW,GACrDI,EAAO,GAAKH,EAAOC,EAAY,GAAKE,EAAO,GAC3CL,EAAMC,EAAW,GAAKI,EAAO,GAAKH,EAAOC,EAAY,GACrDE,EAAO,GAAKL,EAAMC,EAAW,GAAKI,EAAO,GACzCH,EAAOC,EAAY,GAAKE,EAAO,GAAKL,EAAMC,EAAW,GACrDI,EAAO,GAAKH,EAAOC,EAAY,GAAKE,EAAO,GAC3CL,EAAMC,EAAW,GAAKI,EAAO,IAAMH,EAAOC,EAAY,GACtDE,EAAO,IAAML,EAAMC,EAAW,GAAKI,EAAO,IAC1CH,EAAOC,EAAY,GAAKE,EAAO,IAAML,EAAMC,EAAW,GACtDI,EAAO,IAAMH,EAAOC,EAAY,GAAKE,EAAO,IAC5CL,EAAMC,EAAW,GAAKI,EAAO,IAAMH,EAAOC,EAAY,GACtDE,EAAO,IAAML,EAAMC,EAAW,GAAKI,EAAO,IAC1CH,EAAOC,EAAY,IAAME,EAAO,IAChCL,EAAMC,EAAW,IAAMI,EAAO,MAClCF,IACAF,EAMV,SAASK,EAAaN,EAAOC,EAAUC,EAAQC,EAAWC,EAAUC,GAEhE,KAAuB,GAAfD,KACJF,EAAOC,GAAaH,EAAMC,EAAW,GAAKI,EAAO,GAC3CH,EAAOC,EAAY,GAAKE,EAAO,GAAKL,EAAMC,EAAW,GACrDI,EAAO,GAAKH,EAAOC,EAAY,GAAKE,EAAO,GAC3CL,EAAMC,EAAW,GAAKI,EAAO,KACjCF,IACAF,EA6EV,SAASM,EAAKC,GACV,OAAOA,EAAIA,EArBfhyB,KAAKiyB,iBAAmB,SAAUC,EAAQC,GACtC,OAlDJ,SAA8BD,EAAQC,GAElC,IAAK,IAAI11B,EAAI,EAAGA,EAAI21B,UAAW31B,IAC3By1B,EAAOG,UAAU51B,GAAKy1B,EAAOI,SAAS71B,GAAKy1B,EAAOK,QAAQ91B,GAAKy1B,EAAOM,UAAU/1B,GAAKy1B,EAAOO,SAASh2B,GAAKy1B,EAAOQ,QAAQj2B,GAAK,EAElI,OAAQ,EAAK01B,GACT,KAAK,KACDD,EAAOS,SAAW,EAClB,MACJ,KAAK,MACDT,EAAOS,SAAW,EAClB,MACJ,KAAK,KACDT,EAAOS,SAAW,EAClB,MACJ,KAAK,KACDT,EAAOS,SAAW,EAClB,MACJ,KAAK,MACDT,EAAOS,SAAW,EAClB,MACJ,KAAK,KACDT,EAAOS,SAAW,EAClB,MACJ,KAAK,KACDT,EAAOS,SAAW,EAClB,MACJ,KAAK,MACDT,EAAOS,SAAW,EAClB,MACJ,KAAK,IACDT,EAAOS,SAAW,EAClB,MACJ,QACI,OAAOC,yBAYf,OATAV,EAAOW,aAAe,GAAMV,EAAajB,EACnCC,EAA8B,GAAKA,EAEzCe,EAAOY,KAAO,EACdZ,EAAOa,KAAO,EACdb,EAAOc,QAAU,EAEjBlC,GAAUmC,IAAIf,EAAOvwB,EAAG,GAEjBuxB,sBAIHC,CAAqBjB,EAAQC,IAAee,sBACrCN,0BAGXV,EAAOkB,OAAShB,UAChBF,EAAOmB,OAASjB,UAChBF,EAAOoB,MAAQlB,UACfF,EAAOqB,MAAQnB,UACfF,EAAOsB,KAAOpB,UACdF,EAAOuB,KAAOrB,UAEdtB,GAAU1pB,KAAK8qB,EAAOwB,EAAG,GAElBR,wBAUXlzB,KAAK2zB,eAAiB,SAAUzB,EAAQ0B,EAAcC,EAAiBC,EAAeC,EAAkBlP,EACxEC,GAC5B,IAAIkP,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEJ,GAAmB,GAAfzP,EACA,OAAO0P,iBAKX,OAHAD,EAAe,EACfF,EAAevP,EAEPC,GACJ,KAAK,EACDgP,EAAgBF,EAChBG,EAAmBF,EACnB,MACJ,KAAK,EACD,MACJ,QACI,OAAOW,oBAef,IAZI3P,EAAcuN,WACdvB,GAAUppB,UAAUmsB,EAAcC,EAAiB3B,EAAOG,UACtDD,UAAWvN,GACfgM,GAAUppB,UAAUqsB,EAAeC,EAAkB7B,EAAOM,UACxDJ,UAAWvN,KAEfgM,GAAUppB,UAAUmsB,EAAcC,EAAiB3B,EAAOG,UACtDD,UAAWA,WACfvB,GAAUppB,UAAUqsB,EAAeC,EAAkB7B,EAAOM,UACxDJ,UAAWA,YAGZgC,EAAe,GAAG,CACrBC,EAAaD,EAAelC,EAAOW,aAAeX,EAAOc,QAAUd,EAAOW,aACxEX,EAAOc,QACHoB,EACFE,EAAelC,WACf4B,EAAU9B,EAAOkB,OAASkB,EAC1BL,EAAc/B,EAAOG,UACrB6B,EAAWhC,EAAOmB,OAASiB,EAC3BH,EAAejC,EAAOM,UAClB6B,EAAajC,UAAYkC,IACzBD,EAAajC,UAAYkC,KAE7BN,EAAUH,EAAkBS,EAC5BL,EAAcL,EACdM,EAAWH,EAAmBO,EAC9BH,EAAeL,GAGnBvC,EAAW0C,EAAaD,EAAS9B,EAAOI,SAAUJ,EAAOoB,MACnDpB,EAAOc,QAASqB,EAAYjD,EAAOc,EAAOS,WAChDpB,EAAW4C,EAAcD,EAAUhC,EAAOO,SAAUP,EAAOqB,MACrDrB,EAAOc,QAASqB,EAAYjD,EAAOc,EAAOS,WAEhDb,EAAaI,EAAOI,SAAUJ,EAAOoB,MAAQpB,EAAOc,QAChDd,EAAOK,QAASL,EAAOsB,KAAOtB,EAAOc,QAASqB,EAC9C/C,EAASY,EAAOS,WACpBb,EAAaI,EAAOO,SAAUP,EAAOqB,MAAQrB,EAAOc,QAChDd,EAAOQ,QAASR,EAAOuB,KAAOvB,EAAOc,QAASqB,EAC9C/C,EAASY,EAAOS,WAEpBqB,EAAU9B,EAAOsB,KAAOtB,EAAOc,QAE/BiB,EAAc/B,EAAOK,QACrB2B,EAAWhC,EAAOuB,KAAOvB,EAAOc,QAChCmB,EAAejC,EAAOQ,QAGtB,IADA,IAAIj2B,EAAI43B,EAAa,EACL,GAAR53B,KACJy1B,EAAOY,MAAQf,EAAKkC,EAAYD,MAChC9B,EAAOa,MAAQhB,EAAKoC,EAAaD,MAGrC,IADAz3B,EAAI43B,EAAa,EACD,GAAR53B,KACJy1B,EAAOY,MAAQf,EAAKkC,EAAYD,EAAU,IACpCjC,EAAKkC,EAAYD,EAAU,IAC3BjC,EAAKkC,EAAYD,EAAU,IAC3BjC,EAAKkC,EAAYD,EAAU,IAC3BjC,EAAKkC,EAAYD,EAAU,IAC3BjC,EAAKkC,EAAYD,EAAU,IAC3BjC,EAAKkC,EAAYD,EAAU,IAC3BjC,EAAKkC,EAAYD,EAAU,IACjCA,GAAW,EACX9B,EAAOa,MAAQhB,EAAKoC,EAAaD,EAAW,IACtCnC,EAAKoC,EAAaD,EAAW,IAC7BnC,EAAKoC,EAAaD,EAAW,IAC7BnC,EAAKoC,EAAaD,EAAW,IAC7BnC,EAAKoC,EAAaD,EAAW,IAC7BnC,EAAKoC,EAAaD,EAAW,IAC7BnC,EAAKoC,EAAaD,EAAW,IAC7BnC,EAAKoC,EAAaD,EAAW,IACnCA,GAAY,EAMhB,GAHAE,GAAgBC,EAChBC,GAAgBD,EAChBnC,EAAOc,SAAWqB,EACdnC,EAAOc,SAAWd,EAAOW,aAAc,CAEvC,IAAI52B,EACE,GADI80B,GAAe0D,aAEnBr0B,KAAKC,OAAO6xB,EAAOY,KAAOZ,EAAOa,MAC7Bb,EAAOc,QAAU,GAAM,OAC7B0B,EAAQz4B,GAAO,EAAK,EAAI,EAAIA,EAC5By4B,GAAQxC,EAAOvwB,EAAE/D,SACjB82B,EAAOxC,EAAOvwB,EAAE/D,OAAS,GAC7Bs0B,EAAOvwB,EAAE+yB,KACTxC,EAAOY,KAAOZ,EAAOa,KAAO,EAE5BlC,GAAUppB,UAAUyqB,EAAOK,QAASL,EAAOc,QACvCd,EAAOK,QAAS,EAAGH,WACvBvB,GAAUppB,UAAUyqB,EAAOQ,QAASR,EAAOc,QACvCd,EAAOQ,QAAS,EAAGN,WACvBvB,GAAUppB,UAAUyqB,EAAOI,SAAUJ,EAAOc,QACxCd,EAAOI,SAAU,EAAGF,WACxBvB,GAAUppB,UAAUyqB,EAAOO,SAAUP,EAAOc,QACxCd,EAAOO,SAAU,EAAGL,WACxBF,EAAOc,QAAU,EAErB,GAAId,EAAOc,QAAUd,EAAOW,aAKxB,OAAO2B,oBAmBf,OAhBI3P,EAAcuN,WACdvB,GAAUppB,UAAUyqB,EAAOG,UAAWxN,EAAaqN,EAAOG,UACtD,EAAGD,UAAYvN,GACnBgM,GAAUppB,UAAUyqB,EAAOM,UAAW3N,EAAaqN,EAAOM,UACtD,EAAGJ,UAAYvN,GACnBgM,GAAUppB,UAAUmsB,EAAcC,EAAiB3B,EAAOG,UACtDD,UAAYvN,EAAaA,GAC7BgM,GAAUppB,UAAUqsB,EAAeC,EAAkB7B,EAAOM,UACxDJ,UAAYvN,EAAaA,KAE7BgM,GAAUppB,UAAUmsB,EAAcC,EAAkBhP,EAC9CuN,UAAWF,EAAOG,UAAW,EAAGD,WACtCvB,GAAUppB,UAAUqsB,EAAeC,EAAmBlP,EAChDuN,UAAWF,EAAOM,UAAW,EAAGJ,YAGnCmC,kBAsBXv0B,KAAK20B,aAAe,SAAUzC,GAG1B,IAFA,IAAI0C,EApBR,SAAuBpzB,EAAOqzB,GAC1B,IAAIp4B,EAEAq4B,EAAQ,EACZ,IAAKr4B,EAAI,EAAGA,EAAIo4B,EAAKp4B,IACjBq4B,GAAStzB,EAAM/E,GACnB,GAAa,GAATq4B,EACA,OAAOC,wBAEX,IAAIC,EAAQ,EAAI50B,KAAK60B,KAAKH,GAAS,EAlYlB,MAmYjB,IAAKr4B,EAAIo4B,EAAKp4B,KAAM,MACXu4B,GAASxzB,EAAM/E,KAAO,KAK/B,OA/YW,MA+YQA,EAAIs0B,GAAe0D,aAIzBS,CAAchD,EAAOvwB,EAAGuwB,EAAOvwB,EAAE/D,QAErCnB,EAAI,EAAGA,EAAIy1B,EAAOvwB,EAAE/D,OAAQnB,IACjCy1B,EAAOwB,EAAEj3B,IAAMy1B,EAAOvwB,EAAElF,GACxBy1B,EAAOvwB,EAAElF,GAAK,EAGlB,IAASA,EAAI,EAAGA,EAAI21B,UAAW31B,IAC3By1B,EAAOG,UAAU51B,GAAKy1B,EAAOI,SAAS71B,GAAKy1B,EAAOK,QAAQ91B,GAAKy1B,EAAOM,UAAU/1B,GAAKy1B,EAAOO,SAASh2B,GAAKy1B,EAAOQ,QAAQj2B,GAAK,EAIlI,OAFAy1B,EAAOc,QAAU,EACjBd,EAAOY,KAAOZ,EAAOa,KAAO,EACrB6B,GAtbf7D,GAAe0D,aAAe,IAI9B1D,GAAeoE,OAAS,IACxBpE,GAAegE,yBAA2B,MAC1ChE,GAAeyD,oBAAsB,EACrCzD,GAAewD,iBAAmB,EAClCxD,GAAe6B,yBAA2B,EAC1C7B,GAAemC,sBAAwB,EAEvCnC,GAAeC,WAAa,GAC5BD,GAAeqB,UAAYrB,GAAeC,WAE1CD,GAAeE,cAAgB,KAC/BF,GAAeG,0BAA4B,EAC3CH,GAAeI,4BAA8B,GAC7CJ,GAAeM,uBAA2BN,GAAeE,cAAgBF,GAAeG,0BAA6BH,GAAeI,4BAA8B,EA0alK,IAAIiE,GAAiBrE,GAEjBsE,GAAeh0B,EAAOoB,UACtB6yB,GAAaj0B,EAAO0H,QAyCpBwsB,GAxCJ,WACIv1B,KAAKqyB,UAAYgD,GAAwC,EAA3BD,GAAehD,WAI7CpyB,KAAKozB,OAAS,EACdpzB,KAAKsyB,SAAW+C,GAAaD,GAAe/D,uBAAyB+D,GAAehD,WAIpFpyB,KAAKszB,MAAQ,EACbtzB,KAAKuyB,QAAU8C,GAAaD,GAAe/D,uBAAyB+D,GAAehD,WAInFpyB,KAAKwzB,KAAO,EACZxzB,KAAKwyB,UAAY6C,GAAwC,EAA3BD,GAAehD,WAI7CpyB,KAAKqzB,OAAS,EACdrzB,KAAKyyB,SAAW4C,GAAaD,GAAe/D,uBAAyB+D,GAAehD,WACpFpyB,KAAKuzB,MAAQ,EACbvzB,KAAK0yB,QAAU2C,GAAaD,GAAe/D,uBAAyB+D,GAAehD,WACnFpyB,KAAKyzB,KAAO,EAKZzzB,KAAK6yB,aAAe,EACpB7yB,KAAKgzB,QAAU,EACfhzB,KAAK8yB,KAAO,EACZ9yB,KAAK+yB,KAAO,EACZ/yB,KAAKw1B,UAAY,EACjBx1B,KAAKy1B,MAAQ,EACbz1B,KAAK2B,EAAI2zB,GAAW,EAAKF,GAAeX,aAAeW,GAAeD,QACtEn1B,KAAK0zB,EAAI4B,GAAW,EAAKF,GAAeX,aAAeW,GAAeD,SAUtEO,GAJJ,SAAoBC,GAChB31B,KAAK41B,KAAOD,GAKZE,GAAex0B,EAAOoB,UACtBqzB,GAAaz0B,EAAO0H,QACpBgtB,GAAY10B,EAAO4H,OA6EnB+sB,GAtEJ,SAA6BC,GACzB,IAAIC,EAAWD,EACfj2B,KAAKk2B,SAAWA,EACnBl2B,KAAKoO,eAAiB,SAASlE,EAAKe,EAAID,EAAesK,GACtD,IAImB6gB,EAJfxwB,EAAMuE,EAAIY,eACJsrB,EAAUP,GAAa5N,EAASD,QACtCqO,EAAQR,GAAa,KACrBS,EAAYR,GAAW,GACvBS,EAAY,EACZjwB,EAAUX,EAAIW,QAEdkwB,EAAK,IAAId,GAAWa,GACxBv2B,KAAKk2B,SAASO,GAAGC,eAAexsB,EAAKssB,GACrCD,EAAYC,EAAGZ,KAGf,IAAK,IAAI1vB,EAAK,EAAGA,EAAKP,EAAIQ,QAASD,IAAM,CAKxCiwB,EAAWn2B,KAAKk2B,SAASxsB,MAAMitB,MAAMzsB,EAAKe,EAAIqrB,EAAWC,EACvDrwB,EAAIA,GAEFP,EAAIyH,UAAYtK,EAAUwG,eAC7BtJ,KAAKk2B,SAASU,WAAWjxB,EAAIW,QAASJ,GACtClG,KAAKk2B,SAASxsB,MAAMmtB,YAAYP,EAAWtrB,EAAc9E,GACvDqwB,EAAWJ,IAGd,IAAK,IAAInwB,EAAK,EAAGA,EAAKL,EAAIM,aAAcD,IAAM,CAC7C,IAAIgH,EAAQ8pB,EACRvqB,EAAWjG,EAAQC,GAAGL,GAAIF,GAE1BuG,EAASxF,YAAcjE,EAAUC,YAEpCiK,EAAS,EACT8pB,EAAmBnxB,EAAI4Q,IAAIwgB,YAAc/pB,IAEzCA,EAAS,EACT8pB,EAAmBnxB,EAAI4Q,IAAIygB,kBAAoBhqB,GAEhDrH,EAAIqS,cAAiB5X,KAAKwX,IAAI,GACT,GAAnBkf,GAKF92B,KAAKk2B,SAASe,gBAAgBtxB,EAAK4G,GAC/BvM,KAAKk2B,SAASgB,WAAWvxB,EAAK4G,EAAU8pB,KAM3Cr2B,KAAKk2B,SAASxsB,MAAMytB,UAAUjtB,EAAKoL,EAAMpP,GAAIF,GAAKuG,EAChD6pB,GACFp2B,KAAKk2B,SAASkB,WAAWltB,EAAKqC,EAAU6pB,EAASC,EAAOrwB,EACtDswB,EAAUtwB,KAGbhG,KAAKk2B,SAASmB,qBAAqB1xB,EAAKO,EAAIF,GAC5C+vB,GAAWxpB,EAASic,gBAAkBkI,GAAoBF,sBAC1DuF,GAAWxpB,EAASic,gBAAkB8N,EAAUtwB,KAIlDhG,KAAKk2B,SAASO,GAAGa,aAAa3xB,EAAK4wB,KAKrC,SAASgB,GAAY1C,EAAK/nB,EAAK+H,EAAK2iB,GAChCx3B,KAAKy3B,KAAO5C,EACZ70B,KAAK03B,OAAS5qB,EACd9M,KAAK23B,MAAQ9iB,EACb7U,KAAK43B,KAAOJ,EAGhB,IAAIK,GAAW,CAGfA,KAAgB,CACZ,EAAG,EACH,EAAG,GAGPA,KAAgB,CACZ,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,GAGVA,KAAgB,CACZ,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,GAGVA,KAAgB,CACZ,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,GAGbA,KAAgB,CACZ,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,GAGbA,KAAgB,CACZ,EAAG,EAAG,GAAI,GAAI,GAAI,GAClB,EAAG,EAAG,EAAG,GAAI,EAAG,EAChB,GAAI,EAAG,GAAI,GAAI,EAAG,EAClB,GAAI,GAAI,GAAI,GAAI,GAAI,EACpB,EAAG,EAAG,EAAG,GAAI,EAAG,EAChB,EAAG,EAAG,EAAG,EAAG,EAAG,GAGnBA,KAAgB,CACZ,EAAG,EAAG,EAAG,GAAI,GAAI,EACjB,EAAG,EAAG,EAAG,GAAI,EAAG,EAChB,EAAG,EAAG,EAAG,GAAI,EAAG,EAChB,GAAI,GAAI,GAAI,GAAI,GAAI,EACpB,GAAI,EAAG,EAAG,GAAI,EAAG,EACjB,GAAI,EAAG,EAAG,EAAG,EAAG,GAGpBA,KAAgB,CACZ,EAAG,EAAG,EAAG,GAAI,GAAI,EACjB,EAAG,EAAG,EAAG,EAAG,EAAG,EACf,EAAG,EAAG,EAAG,EAAG,EAAG,EACf,GAAI,EAAG,EAAG,GAAI,EAAG,EACjB,GAAI,EAAG,EAAG,EAAG,EAAG,EAChB,GAAI,EAAG,EAAG,EAAG,EAAG,GAGpBA,MAAiB,CACb,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1B,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EACzB,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAC3B,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC5B,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAC3B,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAC3B,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAC1B,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGzBA,MAAiB,CACb,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1B,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GACzB,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAC3B,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC5B,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAC3B,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAC3B,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EACzB,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAG1BA,MAAiB,CACb,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1B,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GACxB,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAC3B,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC5B,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAC3B,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAC3B,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAC1B,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAG5BA,MAAiB,CACb,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1D,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC7D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC7D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAC3D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAC3D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAC1D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EACzD,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAG5DA,MAAiB,CACb,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAClE,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC7D,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC9D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAC7D,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC7D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC7D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAC1D,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAG5DA,MAAiB,CACb,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAClE,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,EAC9D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GACnE,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GACpE,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EACvE,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GACvE,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GACzE,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EACvE,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EACxE,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GACzE,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAC1E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,EAC5E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,KAAM,IAAK,EAC7E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,EAC7E,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAG1DA,MAAiB,CACb,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,GACxE,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GACtE,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GACtE,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GACvE,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GACzE,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAC1E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAC3E,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAC5E,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGxDA,MAAiB,CACb,EAAQ,GAAQ,EAAQ,GAAQ,GAAQ,GAAQ,GAAQ,GACxD,GAAQ,GAAQ,GAAQ,EAAQ,GAAQ,GAAQ,GAAQ,IAG5DA,MAAiB,CACb,GAAS,GAAS,GAAS,GAAS,GAAS,GAAS,GAAQ,GAC9D,GAAQ,GAAQ,GAAQ,GAAQ,GAAQ,GAAQ,EAAQ,GAG5DA,IAAe,CACX,EAAG,EACH,EAAG,GAGPA,IAAe,CACX,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,GAGVA,IAAe,CACX,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,GAGVA,IAAe,CACX,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,GACT,EAAG,EAAG,EAAG,IAGbA,IAAe,CACX,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,GAGbA,IAAe,CACX,EAAG,EAAG,EAAG,EAAG,EAAG,GACf,EAAG,EAAG,EAAG,EAAG,EAAG,GACf,EAAG,EAAG,EAAG,GAAI,GAAI,GACjB,EAAG,EAAG,GAAI,GAAI,GAAI,GAClB,EAAG,EAAG,GAAI,GAAI,GAAI,GAClB,EAAG,GAAI,GAAI,GAAI,GAAI,IAGvBA,IAAe,CACX,EAAG,EAAG,EAAG,EAAG,EAAG,GACf,EAAG,EAAG,EAAG,GAAI,GAAI,GACjB,EAAG,EAAG,EAAG,GAAI,GAAI,GACjB,EAAG,GAAI,GAAI,GAAI,GAAI,GACnB,EAAG,EAAG,GAAI,GAAI,GAAI,GAClB,GAAI,GAAI,GAAI,GAAI,GAAI,IAGxBA,IAAe,CACX,EAAG,EAAG,EAAG,EAAG,EAAG,GACf,EAAG,EAAG,EAAG,EAAG,EAAG,GACf,EAAG,EAAG,EAAG,EAAG,EAAG,GACf,EAAG,EAAG,EAAG,EAAG,EAAG,GACf,EAAG,EAAG,EAAG,EAAG,GAAI,GAChB,EAAG,EAAG,GAAI,GAAI,GAAI,IAGtBA,KAAgB,CACZ,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GACxB,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GACxB,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GACzB,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1B,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3B,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5B,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3B,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAGhCA,KAAgB,CACZ,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GACtB,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GACvB,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GACxB,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GACzB,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3B,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3B,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GACzB,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAG9BA,KAAgB,CACZ,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GACvB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACtB,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GACtB,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GACvB,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GACxB,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1B,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GACzB,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAGhCA,KAAgB,CACZ,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACvD,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACzD,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1D,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAGhEA,KAAgB,CACZ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACtD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACvD,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACzD,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAGhEA,OAAkB,CACd,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACzD,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAGhEA,KAAgB,CACZ,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACzD,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI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","file":"static/js/2.e0071dde.chunk.js","sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.MicRecorder = factory());\n}(this, (function () {\n\nfunction new_byte$1(count) {\n    return new Int8Array(count);\n}\n\nfunction new_short(count) {\n    return new Int16Array(count);\n}\n\nfunction new_int$1(count) {\n    return new Int32Array(count);\n}\n\nfunction new_float$1(count) {\n    return new Float32Array(count);\n}\n\nfunction new_double$1(count) {\n    return new Float64Array(count);\n}\n\nfunction new_float_n$1(args) {\n    if (args.length == 1) {\n        return new_float$1(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_float_n$1(args));\n    }\n    return A;\n}\nfunction new_int_n$1(args) {\n    if (args.length == 1) {\n        return new_int$1(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_int_n$1(args));\n    }\n    return A;\n}\n\nfunction new_short_n(args) {\n    if (args.length == 1) {\n        return new_short(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_short_n(args));\n    }\n    return A;\n}\n\nfunction new_array_n$1(args) {\n    if (args.length == 1) {\n        return new Array(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_array_n$1(args));\n    }\n    return A;\n}\n\n\nvar Arrays$1 = {};\n\nArrays$1.fill = function (a, fromIndex, toIndex, val) {\n    if (arguments.length == 2) {\n        for (var i = 0; i < a.length; i++) {\n            a[i] = arguments[1];\n        }\n    } else {\n        for (var i = fromIndex; i < toIndex; i++) {\n            a[i] = val;\n        }\n    }\n};\n\nvar System$1 = {};\n\nSystem$1.arraycopy = function (src, srcPos, dest, destPos, length) {\n    var srcEnd = srcPos + length;\n    while (srcPos < srcEnd)\n        dest[destPos++] = src[srcPos++];\n};\n\n\nvar Util$1 = {};\nUtil$1.SQRT2 = 1.41421356237309504880;\nUtil$1.FAST_LOG10 = function (x) {\n    return Math.log10(x);\n};\n\nUtil$1.FAST_LOG10_X = function (x, y) {\n    return Math.log10(x) * y;\n};\n\nfunction ShortBlock$1(ordinal) {\n    this.ordinal = ordinal;\n}\n/**\n * LAME may use them, even different block types for L/R.\n */\nShortBlock$1.short_block_allowed = new ShortBlock$1(0);\n/**\n * LAME may use them, but always same block types in L/R.\n */\nShortBlock$1.short_block_coupled = new ShortBlock$1(1);\n/**\n * LAME will not use short blocks, long blocks only.\n */\nShortBlock$1.short_block_dispensed = new ShortBlock$1(2);\n/**\n * LAME will not use long blocks, short blocks only.\n */\nShortBlock$1.short_block_forced = new ShortBlock$1(3);\n\nvar Float$1 = {};\nFloat$1.MAX_VALUE = 3.4028235e+38;\n\nfunction VbrMode$1(ordinal) {\n    this.ordinal = ordinal;\n}\nVbrMode$1.vbr_off = new VbrMode$1(0);\nVbrMode$1.vbr_mt = new VbrMode$1(1);\nVbrMode$1.vbr_rh = new VbrMode$1(2);\nVbrMode$1.vbr_abr = new VbrMode$1(3);\nVbrMode$1.vbr_mtrh = new VbrMode$1(4);\nVbrMode$1.vbr_default = VbrMode$1.vbr_mtrh;\n\nvar assert$1 = function (x) {\n    //console.assert(x);\n};\n\nvar common = {\n    \"System\": System$1,\n    \"VbrMode\": VbrMode$1,\n    \"Float\": Float$1,\n    \"ShortBlock\": ShortBlock$1,\n    \"Util\": Util$1,\n    \"Arrays\": Arrays$1,\n    \"new_array_n\": new_array_n$1,\n    \"new_byte\": new_byte$1,\n    \"new_double\": new_double$1,\n    \"new_float\": new_float$1,\n    \"new_float_n\": new_float_n$1,\n    \"new_int\": new_int$1,\n    \"new_int_n\": new_int_n$1,\n    \"new_short\": new_short,\n    \"new_short_n\": new_short_n,\n    \"assert\": assert$1\n};\n\n/*\n *      MP3 window subband -> subband filtering -> mdct routine\n *\n *      Copyright (c) 1999-2000 Takehiro Tominaga\n *\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Library General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n/*\n *         Special Thanks to Patrick De Smet for your advices.\n */\n\n/* $Id: NewMDCT.java,v 1.11 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n//import java.util.Arrays;\n\nvar System$6 = common.System;\nvar Util$6 = common.Util;\nvar Arrays$6 = common.Arrays;\nvar new_float$6 = common.new_float;\nfunction NewMDCT() {\n\n\tvar enwindow = [\n\t\t\t-4.77e-07 * 0.740951125354959 / 2.384e-06,\n\t\t\t1.03951e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.53674e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t2.841473e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t3.5758972e-02 * 0.740951125354959 / 2.384e-06,\n\t\t\t3.401756e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.83715e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.9182e-05 * 0.740951125354959 / 2.384e-06, /* 15 */\n\t\t\t1.2398e-05 * 0.740951125354959 / 2.384e-06,\n\t\t\t1.91212e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t2.283096e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t1.6994476e-02 * 0.740951125354959 / 2.384e-06,\n\t\t\t-1.8756866e-02 * 0.740951125354959 / 2.384e-06,\n\t\t\t-2.630711e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t-2.47478e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t-1.4782e-05 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.063471690191471e-01, 1.960342806591213e-01,\n\n\t\t\t-4.77e-07 * 0.773010453362737 / 2.384e-06,\n\t\t\t1.05858e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t9.30786e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t2.521515e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t3.5694122e-02 * 0.773010453362737 / 2.384e-06,\n\t\t\t3.643036e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t9.91821e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t9.6321e-05 * 0.773010453362737 / 2.384e-06, /* 14 */\n\t\t\t1.1444e-05 * 0.773010453362737 / 2.384e-06,\n\t\t\t1.65462e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t2.110004e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t1.6112804e-02 * 0.773010453362737 / 2.384e-06,\n\t\t\t-1.9634247e-02 * 0.773010453362737 / 2.384e-06,\n\t\t\t-2.803326e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t-2.77042e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t-1.6689e-05 * 0.773010453362737 / 2.384e-06,\n\t\t\t8.206787908286602e-01, 3.901806440322567e-01,\n\n\t\t\t-4.77e-07 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.07288e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t9.02653e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t2.174854e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t3.5586357e-02 * 0.803207531480645 / 2.384e-06,\n\t\t\t3.858566e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t9.95159e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t9.3460e-05 * 0.803207531480645 / 2.384e-06, /* 13 */\n\t\t\t1.0014e-05 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.40190e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.937389e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.5233517e-02 * 0.803207531480645 / 2.384e-06,\n\t\t\t-2.0506859e-02 * 0.803207531480645 / 2.384e-06,\n\t\t\t-2.974033e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t-3.07560e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t-1.8120e-05 * 0.803207531480645 / 2.384e-06,\n\t\t\t7.416505462720353e-01, 5.805693545089249e-01,\n\n\t\t\t-4.77e-07 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.08242e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t8.68797e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.800537e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t3.5435200e-02 * 0.831469612302545 / 2.384e-06,\n\t\t\t4.049301e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t9.94205e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t9.0599e-05 * 0.831469612302545 / 2.384e-06, /* 12 */\n\t\t\t9.060e-06 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.16348e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.766682e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.4358521e-02 * 0.831469612302545 / 2.384e-06,\n\t\t\t-2.1372318e-02 * 0.831469612302545 / 2.384e-06,\n\t\t\t-3.14188e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t-3.39031e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t-1.9550e-05 * 0.831469612302545 / 2.384e-06,\n\t\t\t6.681786379192989e-01, 7.653668647301797e-01,\n\n\t\t\t-4.77e-07 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.08719e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t8.29220e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.399517e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t3.5242081e-02 * 0.857728610000272 / 2.384e-06,\n\t\t\t4.215240e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t9.89437e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t8.7261e-05 * 0.857728610000272 / 2.384e-06, /* 11 */\n\t\t\t8.106e-06 * 0.857728610000272 / 2.384e-06,\n\t\t\t9.3937e-05 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.597881e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.3489246e-02 * 0.857728610000272 / 2.384e-06,\n\t\t\t-2.2228718e-02 * 0.857728610000272 / 2.384e-06,\n\t\t\t-3.306866e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t-3.71456e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t-2.1458e-05 * 0.857728610000272 / 2.384e-06,\n\t\t\t5.993769336819237e-01, 9.427934736519954e-01,\n\n\t\t\t-4.77e-07 * 0.881921264348355 / 2.384e-06,\n\t\t\t1.08719e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t7.8392e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t9.71317e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t3.5007000e-02 * 0.881921264348355 / 2.384e-06,\n\t\t\t4.357815e-03 * 0.881921264348355 / 2.384e-06,\n\t\t\t9.80854e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t8.3923e-05 * 0.881921264348355 / 2.384e-06, /* 10 */\n\t\t\t7.629e-06 * 0.881921264348355 / 2.384e-06,\n\t\t\t7.2956e-05 * 0.881921264348355 / 2.384e-06,\n\t\t\t1.432419e-03 * 0.881921264348355 / 2.384e-06,\n\t\t\t1.2627602e-02 * 0.881921264348355 / 2.384e-06,\n\t\t\t-2.3074150e-02 * 0.881921264348355 / 2.384e-06,\n\t\t\t-3.467083e-03 * 0.881921264348355 / 2.384e-06,\n\t\t\t-4.04358e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t-2.3365e-05 * 0.881921264348355 / 2.384e-06,\n\t\t\t5.345111359507916e-01, 1.111140466039205e+00,\n\n\t\t\t-9.54e-07 * 0.903989293123443 / 2.384e-06,\n\t\t\t1.08242e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t7.31945e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t5.15938e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t3.4730434e-02 * 0.903989293123443 / 2.384e-06,\n\t\t\t4.477024e-03 * 0.903989293123443 / 2.384e-06,\n\t\t\t9.68933e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t8.0585e-05 * 0.903989293123443 / 2.384e-06, /* 9 */\n\t\t\t6.676e-06 * 0.903989293123443 / 2.384e-06,\n\t\t\t5.2929e-05 * 0.903989293123443 / 2.384e-06,\n\t\t\t1.269817e-03 * 0.903989293123443 / 2.384e-06,\n\t\t\t1.1775017e-02 * 0.903989293123443 / 2.384e-06,\n\t\t\t-2.3907185e-02 * 0.903989293123443 / 2.384e-06,\n\t\t\t-3.622532e-03 * 0.903989293123443 / 2.384e-06,\n\t\t\t-4.38213e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t-2.5272e-05 * 0.903989293123443 / 2.384e-06,\n\t\t\t4.729647758913199e-01, 1.268786568327291e+00,\n\n\t\t\t-9.54e-07 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t1.06812e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t6.74248e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t3.3379e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t3.4412861e-02 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t4.573822e-03 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t9.54151e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t7.6771e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t6.199e-06 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t3.4332e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t1.111031e-03 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t1.0933399e-02 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-2.4725437e-02 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-3.771782e-03 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-4.72546e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-2.7657e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t4.1421356237309504879e-01, /* tan(PI/8) */\n\t\t\t1.414213562373095e+00,\n\n\t\t\t-9.54e-07 * 0.941544065183021 / 2.384e-06,\n\t\t\t1.05381e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t6.10352e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t-4.75883e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t3.4055710e-02 * 0.941544065183021 / 2.384e-06,\n\t\t\t4.649162e-03 * 0.941544065183021 / 2.384e-06,\n\t\t\t9.35555e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t7.3433e-05 * 0.941544065183021 / 2.384e-06, /* 7 */\n\t\t\t5.245e-06 * 0.941544065183021 / 2.384e-06,\n\t\t\t1.7166e-05 * 0.941544065183021 / 2.384e-06,\n\t\t\t9.56535e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t1.0103703e-02 * 0.941544065183021 / 2.384e-06,\n\t\t\t-2.5527000e-02 * 0.941544065183021 / 2.384e-06,\n\t\t\t-3.914356e-03 * 0.941544065183021 / 2.384e-06,\n\t\t\t-5.07355e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t-3.0041e-05 * 0.941544065183021 / 2.384e-06,\n\t\t\t3.578057213145241e-01, 1.546020906725474e+00,\n\n\t\t\t-9.54e-07 * 0.956940335732209 / 2.384e-06,\n\t\t\t1.02520e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t5.39303e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t-1.011848e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t3.3659935e-02 * 0.956940335732209 / 2.384e-06,\n\t\t\t4.703045e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t9.15051e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t7.0095e-05 * 0.956940335732209 / 2.384e-06, /* 6 */\n\t\t\t4.768e-06 * 0.956940335732209 / 2.384e-06,\n\t\t\t9.54e-07 * 0.956940335732209 / 2.384e-06,\n\t\t\t8.06808e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t9.287834e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t-2.6310921e-02 * 0.956940335732209 / 2.384e-06,\n\t\t\t-4.048824e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t-5.42164e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t-3.2425e-05 * 0.956940335732209 / 2.384e-06,\n\t\t\t3.033466836073424e-01, 1.662939224605090e+00,\n\n\t\t\t-1.431e-06 * 0.970031253194544 / 2.384e-06,\n\t\t\t9.9182e-05 * 0.970031253194544 / 2.384e-06,\n\t\t\t4.62532e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t-1.573563e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t3.3225536e-02 * 0.970031253194544 / 2.384e-06,\n\t\t\t4.737377e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t8.91685e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t6.6280e-05 * 0.970031253194544 / 2.384e-06, /* 5 */\n\t\t\t4.292e-06 * 0.970031253194544 / 2.384e-06,\n\t\t\t-1.3828e-05 * 0.970031253194544 / 2.384e-06,\n\t\t\t6.61850e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t8.487225e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t-2.7073860e-02 * 0.970031253194544 / 2.384e-06,\n\t\t\t-4.174709e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t-5.76973e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t-3.4809e-05 * 0.970031253194544 / 2.384e-06,\n\t\t\t2.504869601913055e-01, 1.763842528696710e+00,\n\n\t\t\t-1.431e-06 * 0.98078528040323 / 2.384e-06,\n\t\t\t9.5367e-05 * 0.98078528040323 / 2.384e-06,\n\t\t\t3.78609e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t-2.161503e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t3.2754898e-02 * 0.98078528040323 / 2.384e-06,\n\t\t\t4.752159e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t8.66413e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t6.2943e-05 * 0.98078528040323 / 2.384e-06, /* 4 */\n\t\t\t3.815e-06 * 0.98078528040323 / 2.384e-06,\n\t\t\t-2.718e-05 * 0.98078528040323 / 2.384e-06,\n\t\t\t5.22137e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t7.703304e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t-2.7815342e-02 * 0.98078528040323 / 2.384e-06,\n\t\t\t-4.290581e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t-6.11782e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t-3.7670e-05 * 0.98078528040323 / 2.384e-06,\n\t\t\t1.989123673796580e-01, 1.847759065022573e+00,\n\n\t\t\t-1.907e-06 * 0.989176509964781 / 2.384e-06,\n\t\t\t9.0122e-05 * 0.989176509964781 / 2.384e-06,\n\t\t\t2.88486e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t-2.774239e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t3.2248020e-02 * 0.989176509964781 / 2.384e-06,\n\t\t\t4.748821e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t8.38757e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t5.9605e-05 * 0.989176509964781 / 2.384e-06, /* 3 */\n\t\t\t3.338e-06 * 0.989176509964781 / 2.384e-06,\n\t\t\t-3.9577e-05 * 0.989176509964781 / 2.384e-06,\n\t\t\t3.88145e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t6.937027e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t-2.8532982e-02 * 0.989176509964781 / 2.384e-06,\n\t\t\t-4.395962e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t-6.46591e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t-4.0531e-05 * 0.989176509964781 / 2.384e-06,\n\t\t\t1.483359875383474e-01, 1.913880671464418e+00,\n\n\t\t\t-1.907e-06 * 0.995184726672197 / 2.384e-06,\n\t\t\t8.4400e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t1.91689e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t-3.411293e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t3.1706810e-02 * 0.995184726672197 / 2.384e-06,\n\t\t\t4.728317e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t8.09669e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t5.579e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t3.338e-06 * 0.995184726672197 / 2.384e-06,\n\t\t\t-5.0545e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t2.59876e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t6.189346e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t-2.9224873e-02 * 0.995184726672197 / 2.384e-06,\n\t\t\t-4.489899e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t-6.80923e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t-4.3392e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t9.849140335716425e-02, 1.961570560806461e+00,\n\n\t\t\t-2.384e-06 * 0.998795456205172 / 2.384e-06,\n\t\t\t7.7724e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t8.8215e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t-4.072189e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t3.1132698e-02 * 0.998795456205172 / 2.384e-06,\n\t\t\t4.691124e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t7.79152e-04 * 0.998795456205172 / 2.384e-06,\n\t\t\t5.2929e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t2.861e-06 * 0.998795456205172 / 2.384e-06,\n\t\t\t-6.0558e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t1.37329e-04 * 0.998795456205172 / 2.384e-06,\n\t\t\t5.462170e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t-2.9890060e-02 * 0.998795456205172 / 2.384e-06,\n\t\t\t-4.570484e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t-7.14302e-04 * 0.998795456205172 / 2.384e-06,\n\t\t\t-4.6253e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t4.912684976946725e-02, 1.990369453344394e+00,\n\n\t\t\t3.5780907e-02 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t1.7876148e-02 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t3.134727e-03 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t2.457142e-03 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t9.71317e-04 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t2.18868e-04 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t1.01566e-04 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t1.3828e-05 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\n\t\t\t3.0526638e-02 / 2.384e-06, 4.638195e-03 / 2.384e-06,\n\t\t\t7.47204e-04 / 2.384e-06, 4.9591e-05 / 2.384e-06,\n\t\t\t4.756451e-03 / 2.384e-06, 2.1458e-05 / 2.384e-06,\n\t\t\t-6.9618e-05 / 2.384e-06, /* 2.384e-06/2.384e-06 */\n\t];\n\n\tvar NS = 12;\n\tvar NL = 36;\n\n\tvar win = [\n\t    [\n\t     2.382191739347913e-13,\n\t     6.423305872147834e-13,\n\t     9.400849094049688e-13,\n\t     1.122435026096556e-12,\n\t     1.183840321267481e-12,\n\t     1.122435026096556e-12,\n\t     9.400849094049690e-13,\n\t     6.423305872147839e-13,\n\t     2.382191739347918e-13,\n\n\t     5.456116108943412e-12,\n\t     4.878985199565852e-12,\n\t     4.240448995017367e-12,\n\t     3.559909094758252e-12,\n\t     2.858043359288075e-12,\n\t     2.156177623817898e-12,\n\t     1.475637723558783e-12,\n\t     8.371015190102974e-13,\n\t     2.599706096327376e-13,\n\n\t     -5.456116108943412e-12,\n\t     -4.878985199565852e-12,\n\t     -4.240448995017367e-12,\n\t     -3.559909094758252e-12,\n\t     -2.858043359288076e-12,\n\t     -2.156177623817898e-12,\n\t     -1.475637723558783e-12,\n\t     -8.371015190102975e-13,\n\t     -2.599706096327376e-13,\n\n\t     -2.382191739347923e-13,\n\t     -6.423305872147843e-13,\n\t     -9.400849094049696e-13,\n\t     -1.122435026096556e-12,\n\t     -1.183840321267481e-12,\n\t     -1.122435026096556e-12,\n\t     -9.400849094049694e-13,\n\t     -6.423305872147840e-13,\n\t     -2.382191739347918e-13,\n\t     ],\n\t    [\n\t     2.382191739347913e-13,\n\t     6.423305872147834e-13,\n\t     9.400849094049688e-13,\n\t     1.122435026096556e-12,\n\t     1.183840321267481e-12,\n\t     1.122435026096556e-12,\n\t     9.400849094049688e-13,\n\t     6.423305872147841e-13,\n\t     2.382191739347918e-13,\n\n\t     5.456116108943413e-12,\n\t     4.878985199565852e-12,\n\t     4.240448995017367e-12,\n\t     3.559909094758253e-12,\n\t     2.858043359288075e-12,\n\t     2.156177623817898e-12,\n\t     1.475637723558782e-12,\n\t     8.371015190102975e-13,\n\t     2.599706096327376e-13,\n\n\t     -5.461314069809755e-12,\n\t     -4.921085770524055e-12,\n\t     -4.343405037091838e-12,\n\t     -3.732668368707687e-12,\n\t     -3.093523840190885e-12,\n\t     -2.430835727329465e-12,\n\t     -1.734679010007751e-12,\n\t     -9.748253656609281e-13,\n\t     -2.797435120168326e-13,\n\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     -2.283748241799531e-13,\n\t     -4.037858874020686e-13,\n\t     -2.146547464825323e-13,\n\t     ],\n\t    [\n\t     1.316524975873958e-01, /* win[SHORT_TYPE] */\n\t     4.142135623730950e-01,\n\t     7.673269879789602e-01,\n\n\t     1.091308501069271e+00, /* tantab_l */\n\t     1.303225372841206e+00,\n\t     1.569685577117490e+00,\n\t     1.920982126971166e+00,\n\t     2.414213562373094e+00,\n\t     3.171594802363212e+00,\n\t     4.510708503662055e+00,\n\t     7.595754112725146e+00,\n\t     2.290376554843115e+01,\n\n\t     0.98480775301220802032, /* cx */\n\t     0.64278760968653936292,\n\t     0.34202014332566882393,\n\t     0.93969262078590842791,\n\t     -0.17364817766693030343,\n\t     -0.76604444311897790243,\n\t     0.86602540378443870761,\n\t     0.500000000000000e+00,\n\n\t     -5.144957554275265e-01, /* ca */\n\t     -4.717319685649723e-01,\n\t     -3.133774542039019e-01,\n\t     -1.819131996109812e-01,\n\t     -9.457419252642064e-02,\n\t     -4.096558288530405e-02,\n\t     -1.419856857247115e-02,\n\t     -3.699974673760037e-03,\n\n\t     8.574929257125442e-01, /* cs */\n\t     8.817419973177052e-01,\n\t     9.496286491027329e-01,\n\t     9.833145924917901e-01,\n\t     9.955178160675857e-01,\n\t     9.991605581781475e-01,\n\t     9.998991952444470e-01,\n\t     9.999931550702802e-01,\n\t     ],\n\t    [\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     2.283748241799531e-13,\n\t     4.037858874020686e-13,\n\t     2.146547464825323e-13,\n\n\t     5.461314069809755e-12,\n\t     4.921085770524055e-12,\n\t     4.343405037091838e-12,\n\t     3.732668368707687e-12,\n\t     3.093523840190885e-12,\n\t     2.430835727329466e-12,\n\t     1.734679010007751e-12,\n\t     9.748253656609281e-13,\n\t     2.797435120168326e-13,\n\n\t     -5.456116108943413e-12,\n\t     -4.878985199565852e-12,\n\t     -4.240448995017367e-12,\n\t     -3.559909094758253e-12,\n\t     -2.858043359288075e-12,\n\t     -2.156177623817898e-12,\n\t     -1.475637723558782e-12,\n\t     -8.371015190102975e-13,\n\t     -2.599706096327376e-13,\n\n\t     -2.382191739347913e-13,\n\t     -6.423305872147834e-13,\n\t     -9.400849094049688e-13,\n\t     -1.122435026096556e-12,\n\t     -1.183840321267481e-12,\n\t     -1.122435026096556e-12,\n\t     -9.400849094049688e-13,\n\t     -6.423305872147841e-13,\n\t     -2.382191739347918e-13,\n\t     ]\n\t];\n\n\tvar tantab_l = win[Encoder_1.SHORT_TYPE];\n\tvar cx = win[Encoder_1.SHORT_TYPE];\n\tvar ca = win[Encoder_1.SHORT_TYPE];\n\tvar cs = win[Encoder_1.SHORT_TYPE];\n\n\t/**\n\t * new IDCT routine written by Takehiro TOMINAGA\n\t *\n\t * PURPOSE: Overlapping window on PCM samples<BR>\n\t *\n\t * SEMANTICS:<BR>\n\t * 32 16-bit pcm samples are scaled to fractional 2's complement and\n\t * concatenated to the end of the window buffer #x#. The updated window\n\t * buffer #x# is then windowed by the analysis window #c# to produce the\n\t * windowed sample #z#\n\t */\n\tvar order = [\n\t    0, 1, 16, 17, 8, 9, 24, 25, 4, 5, 20, 21, 12, 13, 28, 29,\n\t    2, 3, 18, 19, 10, 11, 26, 27, 6, 7, 22, 23, 14, 15, 30, 31\n\t];\n\n\t/**\n\t * returns sum_j=0^31 a[j]*cos(PI*j*(k+1/2)/32), 0<=k<32\n\t */\n\tfunction window_subband(x1, x1Pos, a) {\n\t\tvar wp = 10;\n\n\t\tvar x2 = x1Pos + 238 - 14 - 286;\n\n\t\tfor (var i = -15; i < 0; i++) {\n\t\t\tvar w, s, t;\n\n\t\t\tw = enwindow[wp + -10];\n\t\t\ts = x1[x2 + -224] * w;\n\t\t\tt = x1[x1Pos + 224] * w;\n\t\t\tw = enwindow[wp + -9];\n\t\t\ts += x1[x2 + -160] * w;\n\t\t\tt += x1[x1Pos + 160] * w;\n\t\t\tw = enwindow[wp + -8];\n\t\t\ts += x1[x2 + -96] * w;\n\t\t\tt += x1[x1Pos + 96] * w;\n\t\t\tw = enwindow[wp + -7];\n\t\t\ts += x1[x2 + -32] * w;\n\t\t\tt += x1[x1Pos + 32] * w;\n\t\t\tw = enwindow[wp + -6];\n\t\t\ts += x1[x2 + 32] * w;\n\t\t\tt += x1[x1Pos + -32] * w;\n\t\t\tw = enwindow[wp + -5];\n\t\t\ts += x1[x2 + 96] * w;\n\t\t\tt += x1[x1Pos + -96] * w;\n\t\t\tw = enwindow[wp + -4];\n\t\t\ts += x1[x2 + 160] * w;\n\t\t\tt += x1[x1Pos + -160] * w;\n\t\t\tw = enwindow[wp + -3];\n\t\t\ts += x1[x2 + 224] * w;\n\t\t\tt += x1[x1Pos + -224] * w;\n\n\t\t\tw = enwindow[wp + -2];\n\t\t\ts += x1[x1Pos + -256] * w;\n\t\t\tt -= x1[x2 + 256] * w;\n\t\t\tw = enwindow[wp + -1];\n\t\t\ts += x1[x1Pos + -192] * w;\n\t\t\tt -= x1[x2 + 192] * w;\n\t\t\tw = enwindow[wp + 0];\n\t\t\ts += x1[x1Pos + -128] * w;\n\t\t\tt -= x1[x2 + 128] * w;\n\t\t\tw = enwindow[wp + 1];\n\t\t\ts += x1[x1Pos + -64] * w;\n\t\t\tt -= x1[x2 + 64] * w;\n\t\t\tw = enwindow[wp + 2];\n\t\t\ts += x1[x1Pos + 0] * w;\n\t\t\tt -= x1[x2 + 0] * w;\n\t\t\tw = enwindow[wp + 3];\n\t\t\ts += x1[x1Pos + 64] * w;\n\t\t\tt -= x1[x2 + -64] * w;\n\t\t\tw = enwindow[wp + 4];\n\t\t\ts += x1[x1Pos + 128] * w;\n\t\t\tt -= x1[x2 + -128] * w;\n\t\t\tw = enwindow[wp + 5];\n\t\t\ts += x1[x1Pos + 192] * w;\n\t\t\tt -= x1[x2 + -192] * w;\n\n\t\t\t/*\n\t\t\t * this multiplyer could be removed, but it needs more 256 FLOAT\n\t\t\t * data. thinking about the data cache performance, I think we\n\t\t\t * should not use such a huge table. tt 2000/Oct/25\n\t\t\t */\n\t\t\ts *= enwindow[wp + 6];\n\t\t\tw = t - s;\n\t\t\ta[30 + i * 2] = t + s;\n\t\t\ta[31 + i * 2] = enwindow[wp + 7] * w;\n\t\t\twp += 18;\n\t\t\tx1Pos--;\n\t\t\tx2++;\n\t\t}\n\t\t{\n\t\t\tvar s, t, u, v;\n\t\t\tt = x1[x1Pos + -16] * enwindow[wp + -10];\n\t\t\ts = x1[x1Pos + -32] * enwindow[wp + -2];\n\t\t\tt += (x1[x1Pos + -48] - x1[x1Pos + 16]) * enwindow[wp + -9];\n\t\t\ts += x1[x1Pos + -96] * enwindow[wp + -1];\n\t\t\tt += (x1[x1Pos + -80] + x1[x1Pos + 48]) * enwindow[wp + -8];\n\t\t\ts += x1[x1Pos + -160] * enwindow[wp + 0];\n\t\t\tt += (x1[x1Pos + -112] - x1[x1Pos + 80]) * enwindow[wp + -7];\n\t\t\ts += x1[x1Pos + -224] * enwindow[wp + 1];\n\t\t\tt += (x1[x1Pos + -144] + x1[x1Pos + 112]) * enwindow[wp + -6];\n\t\t\ts -= x1[x1Pos + 32] * enwindow[wp + 2];\n\t\t\tt += (x1[x1Pos + -176] - x1[x1Pos + 144]) * enwindow[wp + -5];\n\t\t\ts -= x1[x1Pos + 96] * enwindow[wp + 3];\n\t\t\tt += (x1[x1Pos + -208] + x1[x1Pos + 176]) * enwindow[wp + -4];\n\t\t\ts -= x1[x1Pos + 160] * enwindow[wp + 4];\n\t\t\tt += (x1[x1Pos + -240] - x1[x1Pos + 208]) * enwindow[wp + -3];\n\t\t\ts -= x1[x1Pos + 224];\n\n\t\t\tu = s - t;\n\t\t\tv = s + t;\n\n\t\t\tt = a[14];\n\t\t\ts = a[15] - t;\n\n\t\t\ta[31] = v + t; /* A0 */\n\t\t\ta[30] = u + s; /* A1 */\n\t\t\ta[15] = u - s; /* A2 */\n\t\t\ta[14] = v - t; /* A3 */\n\t\t}\n\t\t{\n\t\t\tvar xr;\n\t\t\txr = a[28] - a[0];\n\t\t\ta[0] += a[28];\n\t\t\ta[28] = xr * enwindow[wp + -2 * 18 + 7];\n\t\t\txr = a[29] - a[1];\n\t\t\ta[1] += a[29];\n\t\t\ta[29] = xr * enwindow[wp + -2 * 18 + 7];\n\n\t\t\txr = a[26] - a[2];\n\t\t\ta[2] += a[26];\n\t\t\ta[26] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = a[27] - a[3];\n\t\t\ta[3] += a[27];\n\t\t\ta[27] = xr * enwindow[wp + -4 * 18 + 7];\n\n\t\t\txr = a[24] - a[4];\n\t\t\ta[4] += a[24];\n\t\t\ta[24] = xr * enwindow[wp + -6 * 18 + 7];\n\t\t\txr = a[25] - a[5];\n\t\t\ta[5] += a[25];\n\t\t\ta[25] = xr * enwindow[wp + -6 * 18 + 7];\n\n\t\t\txr = a[22] - a[6];\n\t\t\ta[6] += a[22];\n\t\t\ta[22] = xr * Util$6.SQRT2;\n\t\t\txr = a[23] - a[7];\n\t\t\ta[7] += a[23];\n\t\t\ta[23] = xr * Util$6.SQRT2 - a[7];\n\t\t\ta[7] -= a[6];\n\t\t\ta[22] -= a[7];\n\t\t\ta[23] -= a[22];\n\n\t\t\txr = a[6];\n\t\t\ta[6] = a[31] - xr;\n\t\t\ta[31] = a[31] + xr;\n\t\t\txr = a[7];\n\t\t\ta[7] = a[30] - xr;\n\t\t\ta[30] = a[30] + xr;\n\t\t\txr = a[22];\n\t\t\ta[22] = a[15] - xr;\n\t\t\ta[15] = a[15] + xr;\n\t\t\txr = a[23];\n\t\t\ta[23] = a[14] - xr;\n\t\t\ta[14] = a[14] + xr;\n\n\t\t\txr = a[20] - a[8];\n\t\t\ta[8] += a[20];\n\t\t\ta[20] = xr * enwindow[wp + -10 * 18 + 7];\n\t\t\txr = a[21] - a[9];\n\t\t\ta[9] += a[21];\n\t\t\ta[21] = xr * enwindow[wp + -10 * 18 + 7];\n\n\t\t\txr = a[18] - a[10];\n\t\t\ta[10] += a[18];\n\t\t\ta[18] = xr * enwindow[wp + -12 * 18 + 7];\n\t\t\txr = a[19] - a[11];\n\t\t\ta[11] += a[19];\n\t\t\ta[19] = xr * enwindow[wp + -12 * 18 + 7];\n\n\t\t\txr = a[16] - a[12];\n\t\t\ta[12] += a[16];\n\t\t\ta[16] = xr * enwindow[wp + -14 * 18 + 7];\n\t\t\txr = a[17] - a[13];\n\t\t\ta[13] += a[17];\n\t\t\ta[17] = xr * enwindow[wp + -14 * 18 + 7];\n\n\t\t\txr = -a[20] + a[24];\n\t\t\ta[20] += a[24];\n\t\t\ta[24] = xr * enwindow[wp + -12 * 18 + 7];\n\t\t\txr = -a[21] + a[25];\n\t\t\ta[21] += a[25];\n\t\t\ta[25] = xr * enwindow[wp + -12 * 18 + 7];\n\n\t\t\txr = a[4] - a[8];\n\t\t\ta[4] += a[8];\n\t\t\ta[8] = xr * enwindow[wp + -12 * 18 + 7];\n\t\t\txr = a[5] - a[9];\n\t\t\ta[5] += a[9];\n\t\t\ta[9] = xr * enwindow[wp + -12 * 18 + 7];\n\n\t\t\txr = a[0] - a[12];\n\t\t\ta[0] += a[12];\n\t\t\ta[12] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = a[1] - a[13];\n\t\t\ta[1] += a[13];\n\t\t\ta[13] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = a[16] - a[28];\n\t\t\ta[16] += a[28];\n\t\t\ta[28] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = -a[17] + a[29];\n\t\t\ta[17] += a[29];\n\t\t\ta[29] = xr * enwindow[wp + -4 * 18 + 7];\n\n\t\t\txr = Util$6.SQRT2 * (a[2] - a[10]);\n\t\t\ta[2] += a[10];\n\t\t\ta[10] = xr;\n\t\t\txr = Util$6.SQRT2 * (a[3] - a[11]);\n\t\t\ta[3] += a[11];\n\t\t\ta[11] = xr;\n\t\t\txr = Util$6.SQRT2 * (-a[18] + a[26]);\n\t\t\ta[18] += a[26];\n\t\t\ta[26] = xr - a[18];\n\t\t\txr = Util$6.SQRT2 * (-a[19] + a[27]);\n\t\t\ta[19] += a[27];\n\t\t\ta[27] = xr - a[19];\n\n\t\t\txr = a[2];\n\t\t\ta[19] -= a[3];\n\t\t\ta[3] -= xr;\n\t\t\ta[2] = a[31] - xr;\n\t\t\ta[31] += xr;\n\t\t\txr = a[3];\n\t\t\ta[11] -= a[19];\n\t\t\ta[18] -= xr;\n\t\t\ta[3] = a[30] - xr;\n\t\t\ta[30] += xr;\n\t\t\txr = a[18];\n\t\t\ta[27] -= a[11];\n\t\t\ta[19] -= xr;\n\t\t\ta[18] = a[15] - xr;\n\t\t\ta[15] += xr;\n\n\t\t\txr = a[19];\n\t\t\ta[10] -= xr;\n\t\t\ta[19] = a[14] - xr;\n\t\t\ta[14] += xr;\n\t\t\txr = a[10];\n\t\t\ta[11] -= xr;\n\t\t\ta[10] = a[23] - xr;\n\t\t\ta[23] += xr;\n\t\t\txr = a[11];\n\t\t\ta[26] -= xr;\n\t\t\ta[11] = a[22] - xr;\n\t\t\ta[22] += xr;\n\t\t\txr = a[26];\n\t\t\ta[27] -= xr;\n\t\t\ta[26] = a[7] - xr;\n\t\t\ta[7] += xr;\n\n\t\t\txr = a[27];\n\t\t\ta[27] = a[6] - xr;\n\t\t\ta[6] += xr;\n\n\t\t\txr = Util$6.SQRT2 * (a[0] - a[4]);\n\t\t\ta[0] += a[4];\n\t\t\ta[4] = xr;\n\t\t\txr = Util$6.SQRT2 * (a[1] - a[5]);\n\t\t\ta[1] += a[5];\n\t\t\ta[5] = xr;\n\t\t\txr = Util$6.SQRT2 * (a[16] - a[20]);\n\t\t\ta[16] += a[20];\n\t\t\ta[20] = xr;\n\t\t\txr = Util$6.SQRT2 * (a[17] - a[21]);\n\t\t\ta[17] += a[21];\n\t\t\ta[21] = xr;\n\n\t\t\txr = -Util$6.SQRT2 * (a[8] - a[12]);\n\t\t\ta[8] += a[12];\n\t\t\ta[12] = xr - a[8];\n\t\t\txr = -Util$6.SQRT2 * (a[9] - a[13]);\n\t\t\ta[9] += a[13];\n\t\t\ta[13] = xr - a[9];\n\t\t\txr = -Util$6.SQRT2 * (a[25] - a[29]);\n\t\t\ta[25] += a[29];\n\t\t\ta[29] = xr - a[25];\n\t\t\txr = -Util$6.SQRT2 * (a[24] + a[28]);\n\t\t\ta[24] -= a[28];\n\t\t\ta[28] = xr - a[24];\n\n\t\t\txr = a[24] - a[16];\n\t\t\ta[24] = xr;\n\t\t\txr = a[20] - xr;\n\t\t\ta[20] = xr;\n\t\t\txr = a[28] - xr;\n\t\t\ta[28] = xr;\n\n\t\t\txr = a[25] - a[17];\n\t\t\ta[25] = xr;\n\t\t\txr = a[21] - xr;\n\t\t\ta[21] = xr;\n\t\t\txr = a[29] - xr;\n\t\t\ta[29] = xr;\n\n\t\t\txr = a[17] - a[1];\n\t\t\ta[17] = xr;\n\t\t\txr = a[9] - xr;\n\t\t\ta[9] = xr;\n\t\t\txr = a[25] - xr;\n\t\t\ta[25] = xr;\n\t\t\txr = a[5] - xr;\n\t\t\ta[5] = xr;\n\t\t\txr = a[21] - xr;\n\t\t\ta[21] = xr;\n\t\t\txr = a[13] - xr;\n\t\t\ta[13] = xr;\n\t\t\txr = a[29] - xr;\n\t\t\ta[29] = xr;\n\n\t\t\txr = a[1] - a[0];\n\t\t\ta[1] = xr;\n\t\t\txr = a[16] - xr;\n\t\t\ta[16] = xr;\n\t\t\txr = a[17] - xr;\n\t\t\ta[17] = xr;\n\t\t\txr = a[8] - xr;\n\t\t\ta[8] = xr;\n\t\t\txr = a[9] - xr;\n\t\t\ta[9] = xr;\n\t\t\txr = a[24] - xr;\n\t\t\ta[24] = xr;\n\t\t\txr = a[25] - xr;\n\t\t\ta[25] = xr;\n\t\t\txr = a[4] - xr;\n\t\t\ta[4] = xr;\n\t\t\txr = a[5] - xr;\n\t\t\ta[5] = xr;\n\t\t\txr = a[20] - xr;\n\t\t\ta[20] = xr;\n\t\t\txr = a[21] - xr;\n\t\t\ta[21] = xr;\n\t\t\txr = a[12] - xr;\n\t\t\ta[12] = xr;\n\t\t\txr = a[13] - xr;\n\t\t\ta[13] = xr;\n\t\t\txr = a[28] - xr;\n\t\t\ta[28] = xr;\n\t\t\txr = a[29] - xr;\n\t\t\ta[29] = xr;\n\n\t\t\txr = a[0];\n\t\t\ta[0] += a[31];\n\t\t\ta[31] -= xr;\n\t\t\txr = a[1];\n\t\t\ta[1] += a[30];\n\t\t\ta[30] -= xr;\n\t\t\txr = a[16];\n\t\t\ta[16] += a[15];\n\t\t\ta[15] -= xr;\n\t\t\txr = a[17];\n\t\t\ta[17] += a[14];\n\t\t\ta[14] -= xr;\n\t\t\txr = a[8];\n\t\t\ta[8] += a[23];\n\t\t\ta[23] -= xr;\n\t\t\txr = a[9];\n\t\t\ta[9] += a[22];\n\t\t\ta[22] -= xr;\n\t\t\txr = a[24];\n\t\t\ta[24] += a[7];\n\t\t\ta[7] -= xr;\n\t\t\txr = a[25];\n\t\t\ta[25] += a[6];\n\t\t\ta[6] -= xr;\n\t\t\txr = a[4];\n\t\t\ta[4] += a[27];\n\t\t\ta[27] -= xr;\n\t\t\txr = a[5];\n\t\t\ta[5] += a[26];\n\t\t\ta[26] -= xr;\n\t\t\txr = a[20];\n\t\t\ta[20] += a[11];\n\t\t\ta[11] -= xr;\n\t\t\txr = a[21];\n\t\t\ta[21] += a[10];\n\t\t\ta[10] -= xr;\n\t\t\txr = a[12];\n\t\t\ta[12] += a[19];\n\t\t\ta[19] -= xr;\n\t\t\txr = a[13];\n\t\t\ta[13] += a[18];\n\t\t\ta[18] -= xr;\n\t\t\txr = a[28];\n\t\t\ta[28] += a[3];\n\t\t\ta[3] -= xr;\n\t\t\txr = a[29];\n\t\t\ta[29] += a[2];\n\t\t\ta[2] -= xr;\n\t\t}\n\t}\n\n\t/**\n\t * Function: Calculation of the MDCT In the case of long blocks (type 0,1,3)\n\t * there are 36 coefficents in the time domain and 18 in the frequency\n\t * domain.<BR>\n\t * In the case of short blocks (type 2) there are 3 transformations with\n\t * short length. This leads to 12 coefficents in the time and 6 in the\n\t * frequency domain. In this case the results are stored side by side in the\n\t * vector out[].\n\t *\n\t * New layer3\n\t */\n\tfunction mdct_short(inout, inoutPos) {\n\t\tfor (var l = 0; l < 3; l++) {\n\t\t\tvar tc0, tc1, tc2, ts0, ts1, ts2;\n\n\t\t\tts0 = inout[inoutPos + 2 * 3] * win[Encoder_1.SHORT_TYPE][0]\n\t\t\t\t\t- inout[inoutPos + 5 * 3];\n\t\t\ttc0 = inout[inoutPos + 0 * 3] * win[Encoder_1.SHORT_TYPE][2]\n\t\t\t\t\t- inout[inoutPos + 3 * 3];\n\t\t\ttc1 = ts0 + tc0;\n\t\t\ttc2 = ts0 - tc0;\n\n\t\t\tts0 = inout[inoutPos + 5 * 3] * win[Encoder_1.SHORT_TYPE][0]\n\t\t\t\t\t+ inout[inoutPos + 2 * 3];\n\t\t\ttc0 = inout[inoutPos + 3 * 3] * win[Encoder_1.SHORT_TYPE][2]\n\t\t\t\t\t+ inout[inoutPos + 0 * 3];\n\t\t\tts1 = ts0 + tc0;\n\t\t\tts2 = -ts0 + tc0;\n\n\t\t\ttc0 = (inout[inoutPos + 1 * 3] * win[Encoder_1.SHORT_TYPE][1] - inout[inoutPos + 4 * 3]) * 2.069978111953089e-11;\n\t\t\t/*\n\t\t\t * tritab_s [ 1 ]\n\t\t\t */\n\t\t\tts0 = (inout[inoutPos + 4 * 3] * win[Encoder_1.SHORT_TYPE][1] + inout[inoutPos + 1 * 3]) * 2.069978111953089e-11;\n\t\t\t/*\n\t\t\t * tritab_s [ 1 ]\n\t\t\t */\n\t\t\tinout[inoutPos + 3 * 0] = tc1 * 1.907525191737280e-11 + tc0;\n\t\t\t/*\n\t\t\t * tritab_s[ 2 ]\n\t\t\t */\n\t\t\tinout[inoutPos + 3 * 5] = -ts1 * 1.907525191737280e-11 + ts0;\n\t\t\t/*\n\t\t\t * tritab_s[0 ]\n\t\t\t */\n\t\t\ttc2 = tc2 * 0.86602540378443870761 * 1.907525191737281e-11;\n\t\t\t/*\n\t\t\t * tritab_s[ 2]\n\t\t\t */\n\t\t\tts1 = ts1 * 0.5 * 1.907525191737281e-11 + ts0;\n\t\t\tinout[inoutPos + 3 * 1] = tc2 - ts1;\n\t\t\tinout[inoutPos + 3 * 2] = tc2 + ts1;\n\n\t\t\ttc1 = tc1 * 0.5 * 1.907525191737281e-11 - tc0;\n\t\t\tts2 = ts2 * 0.86602540378443870761 * 1.907525191737281e-11;\n\t\t\t/*\n\t\t\t * tritab_s[ 0]\n\t\t\t */\n\t\t\tinout[inoutPos + 3 * 3] = tc1 + ts2;\n\t\t\tinout[inoutPos + 3 * 4] = tc1 - ts2;\n\n\t\t\tinoutPos++;\n\t\t}\n\t}\n\n\tfunction mdct_long(out, outPos, _in) {\n\t\tvar ct, st;\n\t\t{\n\t\t\tvar tc1, tc2, tc3, tc4, ts5, ts6, ts7, ts8;\n\t\t\t/* 1,2, 5,6, 9,10, 13,14, 17 */\n\t\t\ttc1 = _in[17] - _in[9];\n\t\t\ttc3 = _in[15] - _in[11];\n\t\t\ttc4 = _in[14] - _in[12];\n\t\t\tts5 = _in[0] + _in[8];\n\t\t\tts6 = _in[1] + _in[7];\n\t\t\tts7 = _in[2] + _in[6];\n\t\t\tts8 = _in[3] + _in[5];\n\n\t\t\tout[outPos + 17] = (ts5 + ts7 - ts8) - (ts6 - _in[4]);\n\t\t\tst = (ts5 + ts7 - ts8) * cx[12 + 7] + (ts6 - _in[4]);\n\t\t\tct = (tc1 - tc3 - tc4) * cx[12 + 6];\n\t\t\tout[outPos + 5] = ct + st;\n\t\t\tout[outPos + 6] = ct - st;\n\n\t\t\ttc2 = (_in[16] - _in[10]) * cx[12 + 6];\n\t\t\tts6 = ts6 * cx[12 + 7] + _in[4];\n\t\t\tct = tc1 * cx[12 + 0] + tc2 + tc3 * cx[12 + 1] + tc4 * cx[12 + 2];\n\t\t\tst = -ts5 * cx[12 + 4] + ts6 - ts7 * cx[12 + 5] + ts8 * cx[12 + 3];\n\t\t\tout[outPos + 1] = ct + st;\n\t\t\tout[outPos + 2] = ct - st;\n\n\t\t\tct = tc1 * cx[12 + 1] - tc2 - tc3 * cx[12 + 2] + tc4 * cx[12 + 0];\n\t\t\tst = -ts5 * cx[12 + 5] + ts6 - ts7 * cx[12 + 3] + ts8 * cx[12 + 4];\n\t\t\tout[outPos + 9] = ct + st;\n\t\t\tout[outPos + 10] = ct - st;\n\n\t\t\tct = tc1 * cx[12 + 2] - tc2 + tc3 * cx[12 + 0] - tc4 * cx[12 + 1];\n\t\t\tst = ts5 * cx[12 + 3] - ts6 + ts7 * cx[12 + 4] - ts8 * cx[12 + 5];\n\t\t\tout[outPos + 13] = ct + st;\n\t\t\tout[outPos + 14] = ct - st;\n\t\t}\n\t\t{\n\t\t\tvar ts1, ts2, ts3, ts4, tc5, tc6, tc7, tc8;\n\n\t\t\tts1 = _in[8] - _in[0];\n\t\t\tts3 = _in[6] - _in[2];\n\t\t\tts4 = _in[5] - _in[3];\n\t\t\ttc5 = _in[17] + _in[9];\n\t\t\ttc6 = _in[16] + _in[10];\n\t\t\ttc7 = _in[15] + _in[11];\n\t\t\ttc8 = _in[14] + _in[12];\n\n\t\t\tout[outPos + 0] = (tc5 + tc7 + tc8) + (tc6 + _in[13]);\n\t\t\tct = (tc5 + tc7 + tc8) * cx[12 + 7] - (tc6 + _in[13]);\n\t\t\tst = (ts1 - ts3 + ts4) * cx[12 + 6];\n\t\t\tout[outPos + 11] = ct + st;\n\t\t\tout[outPos + 12] = ct - st;\n\n\t\t\tts2 = (_in[7] - _in[1]) * cx[12 + 6];\n\t\t\ttc6 = _in[13] - tc6 * cx[12 + 7];\n\t\t\tct = tc5 * cx[12 + 3] - tc6 + tc7 * cx[12 + 4] + tc8 * cx[12 + 5];\n\t\t\tst = ts1 * cx[12 + 2] + ts2 + ts3 * cx[12 + 0] + ts4 * cx[12 + 1];\n\t\t\tout[outPos + 3] = ct + st;\n\t\t\tout[outPos + 4] = ct - st;\n\n\t\t\tct = -tc5 * cx[12 + 5] + tc6 - tc7 * cx[12 + 3] - tc8 * cx[12 + 4];\n\t\t\tst = ts1 * cx[12 + 1] + ts2 - ts3 * cx[12 + 2] - ts4 * cx[12 + 0];\n\t\t\tout[outPos + 7] = ct + st;\n\t\t\tout[outPos + 8] = ct - st;\n\n\t\t\tct = -tc5 * cx[12 + 4] + tc6 - tc7 * cx[12 + 5] - tc8 * cx[12 + 3];\n\t\t\tst = ts1 * cx[12 + 0] - ts2 + ts3 * cx[12 + 1] - ts4 * cx[12 + 2];\n\t\t\tout[outPos + 15] = ct + st;\n\t\t\tout[outPos + 16] = ct - st;\n\t\t}\n\t}\n\n\tthis.mdct_sub48 = function(gfc, w0, w1) {\n\t\tvar wk = w0;\n\t\tvar wkPos = 286;\n\t\t/* thinking cache performance, ch->gr loop is better than gr->ch loop */\n\t\tfor (var ch = 0; ch < gfc.channels_out; ch++) {\n\t\t\tfor (var gr = 0; gr < gfc.mode_gr; gr++) {\n\t\t\t\tvar band;\n\t\t\t\tvar gi = (gfc.l3_side.tt[gr][ch]);\n\t\t\t\tvar mdct_enc = gi.xr;\n\t\t\t\tvar mdct_encPos = 0;\n\t\t\t\tvar samp = gfc.sb_sample[ch][1 - gr];\n\t\t\t\tvar sampPos = 0;\n\n\t\t\t\tfor (var k = 0; k < 18 / 2; k++) {\n\t\t\t\t\twindow_subband(wk, wkPos, samp[sampPos]);\n\t\t\t\t\twindow_subband(wk, wkPos + 32, samp[sampPos + 1]);\n\t\t\t\t\tsampPos += 2;\n\t\t\t\t\twkPos += 64;\n\t\t\t\t\t/*\n\t\t\t\t\t * Compensate for inversion in the analysis filter\n\t\t\t\t\t */\n\t\t\t\t\tfor (band = 1; band < 32; band += 2) {\n\t\t\t\t\t\tsamp[sampPos - 1][band] *= -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t * Perform imdct of 18 previous subband samples + 18 current\n\t\t\t\t * subband samples\n\t\t\t\t */\n\t\t\t\tfor (band = 0; band < 32; band++, mdct_encPos += 18) {\n\t\t\t\t\tvar type = gi.block_type;\n\t\t\t\t\tvar band0 = gfc.sb_sample[ch][gr];\n\t\t\t\t\tvar band1 = gfc.sb_sample[ch][1 - gr];\n\t\t\t\t\tif (gi.mixed_block_flag != 0 && band < 2)\n\t\t\t\t\t\ttype = 0;\n\t\t\t\t\tif (gfc.amp_filter[band] < 1e-12) {\n\t\t\t\t\t\tArrays$6.fill(mdct_enc, mdct_encPos + 0,\n\t\t\t\t\t\t\t\tmdct_encPos + 18, 0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (gfc.amp_filter[band] < 1.0) {\n\t\t\t\t\t\t\tfor (var k = 0; k < 18; k++)\n\t\t\t\t\t\t\t\tband1[k][order[band]] *= gfc.amp_filter[band];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (type == Encoder_1.SHORT_TYPE) {\n\t\t\t\t\t\t\tfor (var k = -NS / 4; k < 0; k++) {\n\t\t\t\t\t\t\t\tvar w = win[Encoder_1.SHORT_TYPE][k + 3];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 9] = band0[9 + k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w - band0[8 - k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 18] = band0[14 - k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w + band0[15 + k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 10] = band0[15 + k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w - band0[14 - k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 19] = band1[2 - k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w + band1[3 + k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 11] = band1[3 + k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w - band1[2 - k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 20] = band1[8 - k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w + band1[9 + k][order[band]];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmdct_short(mdct_enc, mdct_encPos);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar work = new_float$6(18);\n\t\t\t\t\t\t\tfor (var k = -NL / 4; k < 0; k++) {\n\t\t\t\t\t\t\t\tvar a, b;\n\t\t\t\t\t\t\t\ta = win[type][k + 27]\n\t\t\t\t\t\t\t\t\t\t* band1[k + 9][order[band]]\n\t\t\t\t\t\t\t\t\t\t+ win[type][k + 36]\n\t\t\t\t\t\t\t\t\t\t* band1[8 - k][order[band]];\n\t\t\t\t\t\t\t\tb = win[type][k + 9]\n\t\t\t\t\t\t\t\t\t\t* band0[k + 9][order[band]]\n\t\t\t\t\t\t\t\t\t\t- win[type][k + 18]\n\t\t\t\t\t\t\t\t\t\t* band0[8 - k][order[band]];\n\t\t\t\t\t\t\t\twork[k + 9] = a - b * tantab_l[3 + k + 9];\n\t\t\t\t\t\t\t\twork[k + 18] = a * tantab_l[3 + k + 9] + b;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmdct_long(mdct_enc, mdct_encPos, work);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t/*\n\t\t\t\t\t * Perform aliasing reduction butterfly\n\t\t\t\t\t */\n\t\t\t\t\tif (type != Encoder_1.SHORT_TYPE && band != 0) {\n\t\t\t\t\t\tfor (var k = 7; k >= 0; --k) {\n\t\t\t\t\t\t\tvar bu, bd;\n\t\t\t\t\t\t\tbu = mdct_enc[mdct_encPos + k] * ca[20 + k]\n\t\t\t\t\t\t\t\t\t+ mdct_enc[mdct_encPos + -1 - k]\n\t\t\t\t\t\t\t\t\t* cs[28 + k];\n\t\t\t\t\t\t\tbd = mdct_enc[mdct_encPos + k] * cs[28 + k]\n\t\t\t\t\t\t\t\t\t- mdct_enc[mdct_encPos + -1 - k]\n\t\t\t\t\t\t\t\t\t* ca[20 + k];\n\n\t\t\t\t\t\t\tmdct_enc[mdct_encPos + -1 - k] = bu;\n\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k] = bd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\twk = w1;\n\t\t\twkPos = 286;\n\t\t\tif (gfc.mode_gr == 1) {\n\t\t\t\tfor (var i = 0; i < 18; i++) {\n\t\t\t\t\tSystem$6.arraycopy(gfc.sb_sample[ch][1][i], 0,\n\t\t\t\t\t\t\tgfc.sb_sample[ch][0][i], 0, 32);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\nvar NewMDCT_1 = NewMDCT;\n\nvar System$7 = common.System;\nvar new_float$7 = common.new_float;\nvar new_float_n$7 = common.new_float_n;\nfunction III_psy_xmin() {\n    this.l = new_float$7(Encoder_1.SBMAX_l);\n    this.s = new_float_n$7([Encoder_1.SBMAX_s, 3]);\n\n    var self = this;\n    this.assign = function (iii_psy_xmin) {\n        System$7.arraycopy(iii_psy_xmin.l, 0, self.l, 0, Encoder_1.SBMAX_l);\n        for (var i = 0; i < Encoder_1.SBMAX_s; i++) {\n            for (var j = 0; j < 3; j++) {\n                self.s[i][j] = iii_psy_xmin.s[i][j];\n            }\n        }\n    };\n}\n\nvar III_psy_xmin_1 = III_psy_xmin;\n\n//package mp3;\n\n\n\nfunction III_psy_ratio() {\n\tthis.thm = new III_psy_xmin_1();\n\tthis.en = new III_psy_xmin_1();\n}\n\nvar III_psy_ratio_1 = III_psy_ratio;\n\nvar System$5 = common.System;\nvar VbrMode$5 = common.VbrMode;\nvar new_array_n$5 = common.new_array_n;\nvar new_float$5 = common.new_float;\nvar new_float_n$5 = common.new_float_n;\nvar new_int$5 = common.new_int;\nvar assert$5 = common.assert;\n\n/**\n * ENCDELAY The encoder delay.\n *\n * Minimum allowed is MDCTDELAY (see below)\n *\n * The first 96 samples will be attenuated, so using a value less than 96\n * will result in corrupt data for the first 96-ENCDELAY samples.\n *\n * suggested: 576 set to 1160 to sync with FhG.\n */\nEncoder$2.ENCDELAY = 576;\n/**\n * make sure there is at least one complete frame after the last frame\n * containing real data\n *\n * Using a value of 288 would be sufficient for a a very sophisticated\n * decoder that can decode granule-by-granule instead of frame by frame. But\n * lets not assume this, and assume the decoder will not decode frame N\n * unless it also has data for frame N+1\n */\nEncoder$2.POSTDELAY = 1152;\n\n/**\n * delay of the MDCT used in mdct.c original ISO routines had a delay of\n * 528! Takehiro's routines:\n */\nEncoder$2.MDCTDELAY = 48;\nEncoder$2.FFTOFFSET = (224 + Encoder$2.MDCTDELAY);\n\n/**\n * Most decoders, including the one we use, have a delay of 528 samples.\n */\nEncoder$2.DECDELAY = 528;\n\n/**\n * number of subbands\n */\nEncoder$2.SBLIMIT = 32;\n\n/**\n * parition bands bands\n */\nEncoder$2.CBANDS = 64;\n\n/**\n * number of critical bands/scale factor bands where masking is computed\n */\nEncoder$2.SBPSY_l = 21;\nEncoder$2.SBPSY_s = 12;\n\n/**\n * total number of scalefactor bands encoded\n */\nEncoder$2.SBMAX_l = 22;\nEncoder$2.SBMAX_s = 13;\nEncoder$2.PSFB21 = 6;\nEncoder$2.PSFB12 = 6;\n\n/**\n * FFT sizes\n */\nEncoder$2.BLKSIZE = 1024;\nEncoder$2.HBLKSIZE = (Encoder$2.BLKSIZE / 2 + 1);\nEncoder$2.BLKSIZE_s = 256;\nEncoder$2.HBLKSIZE_s = (Encoder$2.BLKSIZE_s / 2 + 1);\n\nEncoder$2.NORM_TYPE = 0;\nEncoder$2.START_TYPE = 1;\nEncoder$2.SHORT_TYPE = 2;\nEncoder$2.STOP_TYPE = 3;\n\n/**\n * <PRE>\n * Mode Extention:\n * When we are in stereo mode, there are 4 possible methods to store these\n * two channels. The stereo modes -m? are using a subset of them.\n *\n *  -ms: MPG_MD_LR_LR\n *  -mj: MPG_MD_LR_LR and MPG_MD_MS_LR\n *  -mf: MPG_MD_MS_LR\n *  -mi: all\n * </PRE>\n */\nEncoder$2.MPG_MD_LR_LR = 0;\nEncoder$2.MPG_MD_LR_I = 1;\nEncoder$2.MPG_MD_MS_LR = 2;\nEncoder$2.MPG_MD_MS_I = 3;\n\nEncoder$2.fircoef = [-0.0207887 * 5, -0.0378413 * 5,\n    -0.0432472 * 5, -0.031183 * 5, 7.79609e-18 * 5, 0.0467745 * 5,\n    0.10091 * 5, 0.151365 * 5, 0.187098 * 5];\n\nfunction Encoder$2() {\n    var NewMDCT = NewMDCT_1;\n    var III_psy_ratio = III_psy_ratio_1;\n\n    var FFTOFFSET = Encoder$2.FFTOFFSET;\n    var MPG_MD_MS_LR = Encoder$2.MPG_MD_MS_LR;\n    //BitStream bs;\n    //PsyModel psy;\n    //VBRTag vbr;\n    //QuantizePVT qupvt;\n    var bs = null;\n    this.psy = null;\n    var psy = null;\n    var vbr = null;\n    var qupvt = null;\n\n    //public final void setModules(BitStream bs, PsyModel psy, QuantizePVT qupvt,\n    //    VBRTag vbr) {\n    this.setModules = function (_bs, _psy, _qupvt, _vbr) {\n        bs = _bs;\n        this.psy = _psy;\n        psy = _psy;\n        vbr = _vbr;\n        qupvt = _qupvt;\n    };\n\n    var newMDCT = new NewMDCT();\n\n    /***********************************************************************\n     *\n     * encoder and decoder delays\n     *\n     ***********************************************************************/\n\n    /**\n     * <PRE>\n     * layer III enc->dec delay:  1056 (1057?)   (observed)\n     * layer  II enc->dec delay:   480  (481?)   (observed)\n     *\n     * polyphase 256-16             (dec or enc)        = 240\n     * mdct      256+32  (9*32)     (dec or enc)        = 288\n     * total:    512+16\n     *\n     * My guess is that delay of polyphase filterbank is actualy 240.5\n     * (there are technical reasons for this, see postings in mp3encoder).\n     * So total Encode+Decode delay = ENCDELAY + 528 + 1\n     * </PRE>\n     */\n\n\n    /**\n     * auto-adjust of ATH, useful for low volume Gabriel Bouvigne 3 feb 2001\n     *\n     * modifies some values in gfp.internal_flags.ATH (gfc.ATH)\n     */\n//private void adjust_ATH(final LameInternalFlags gfc) {\n    function adjust_ATH(gfc) {\n        var gr2_max, max_pow;\n\n        if (gfc.ATH.useAdjust == 0) {\n            gfc.ATH.adjust = 1.0;\n            /* no adjustment */\n            return;\n        }\n\n        /* jd - 2001 mar 12, 27, jun 30 */\n        /* loudness based on equal loudness curve; */\n        /* use granule with maximum combined loudness */\n        max_pow = gfc.loudness_sq[0][0];\n        gr2_max = gfc.loudness_sq[1][0];\n        if (gfc.channels_out == 2) {\n            max_pow += gfc.loudness_sq[0][1];\n            gr2_max += gfc.loudness_sq[1][1];\n        } else {\n            max_pow += max_pow;\n            gr2_max += gr2_max;\n        }\n        if (gfc.mode_gr == 2) {\n            max_pow = Math.max(max_pow, gr2_max);\n        }\n        max_pow *= 0.5;\n        /* max_pow approaches 1.0 for full band noise */\n\n        /* jd - 2001 mar 31, jun 30 */\n        /* user tuning of ATH adjustment region */\n        max_pow *= gfc.ATH.aaSensitivityP;\n\n        /*\n         * adjust ATH depending on range of maximum value\n         */\n\n        /* jd - 2001 feb27, mar12,20, jun30, jul22 */\n        /* continuous curves based on approximation */\n        /* to GB's original values. */\n        /* For an increase in approximate loudness, */\n        /* set ATH adjust to adjust_limit immediately */\n        /* after a delay of one frame. */\n        /* For a loudness decrease, reduce ATH adjust */\n        /* towards adjust_limit gradually. */\n        /* max_pow is a loudness squared or a power. */\n        if (max_pow > 0.03125) { /* ((1 - 0.000625)/ 31.98) from curve below */\n            if (gfc.ATH.adjust >= 1.0) {\n                gfc.ATH.adjust = 1.0;\n            } else {\n                /* preceding frame has lower ATH adjust; */\n                /* ascend only to the preceding adjust_limit */\n                /* in case there is leading low volume */\n                if (gfc.ATH.adjust < gfc.ATH.adjustLimit) {\n                    gfc.ATH.adjust = gfc.ATH.adjustLimit;\n                }\n            }\n            gfc.ATH.adjustLimit = 1.0;\n        } else { /* adjustment curve */\n            /* about 32 dB maximum adjust (0.000625) */\n            var adj_lim_new = 31.98 * max_pow + 0.000625;\n            if (gfc.ATH.adjust >= adj_lim_new) { /* descend gradually */\n                gfc.ATH.adjust *= adj_lim_new * 0.075 + 0.925;\n                if (gfc.ATH.adjust < adj_lim_new) { /* stop descent */\n                    gfc.ATH.adjust = adj_lim_new;\n                }\n            } else { /* ascend */\n                if (gfc.ATH.adjustLimit >= adj_lim_new) {\n                    gfc.ATH.adjust = adj_lim_new;\n                } else {\n                    /* preceding frame has lower ATH adjust; */\n                    /* ascend only to the preceding adjust_limit */\n                    if (gfc.ATH.adjust < gfc.ATH.adjustLimit) {\n                        gfc.ATH.adjust = gfc.ATH.adjustLimit;\n                    }\n                }\n            }\n            gfc.ATH.adjustLimit = adj_lim_new;\n        }\n    }\n\n    /**\n     * <PRE>\n     *  some simple statistics\n     *\n     *  bitrate index 0: free bitrate . not allowed in VBR mode\n     *  : bitrates, kbps depending on MPEG version\n     *  bitrate index 15: forbidden\n     *\n     *  mode_ext:\n     *  0:  LR\n     *  1:  LR-i\n     *  2:  MS\n     *  3:  MS-i\n     * </PRE>\n     */\n    function updateStats(gfc) {\n        var gr, ch;\n        assert$5(0 <= gfc.bitrate_index && gfc.bitrate_index < 16);\n        assert$5(0 <= gfc.mode_ext && gfc.mode_ext < 4);\n\n        /* count bitrate indices */\n        gfc.bitrate_stereoMode_Hist[gfc.bitrate_index][4]++;\n        gfc.bitrate_stereoMode_Hist[15][4]++;\n\n        /* count 'em for every mode extension in case of 2 channel encoding */\n        if (gfc.channels_out == 2) {\n            gfc.bitrate_stereoMode_Hist[gfc.bitrate_index][gfc.mode_ext]++;\n            gfc.bitrate_stereoMode_Hist[15][gfc.mode_ext]++;\n        }\n        for (gr = 0; gr < gfc.mode_gr; ++gr) {\n            for (ch = 0; ch < gfc.channels_out; ++ch) {\n                var bt = gfc.l3_side.tt[gr][ch].block_type | 0;\n                if (gfc.l3_side.tt[gr][ch].mixed_block_flag != 0)\n                    bt = 4;\n                gfc.bitrate_blockType_Hist[gfc.bitrate_index][bt]++;\n                gfc.bitrate_blockType_Hist[gfc.bitrate_index][5]++;\n                gfc.bitrate_blockType_Hist[15][bt]++;\n                gfc.bitrate_blockType_Hist[15][5]++;\n            }\n        }\n    }\n\n    function lame_encode_frame_init(gfp, inbuf) {\n        var gfc = gfp.internal_flags;\n\n        var ch, gr;\n\n        if (gfc.lame_encode_frame_init == 0) {\n            /* prime the MDCT/polyphase filterbank with a short block */\n            var i, j;\n            var primebuff0 = new_float$5(286 + 1152 + 576);\n            var primebuff1 = new_float$5(286 + 1152 + 576);\n            gfc.lame_encode_frame_init = 1;\n            for (i = 0, j = 0; i < 286 + 576 * (1 + gfc.mode_gr); ++i) {\n                if (i < 576 * gfc.mode_gr) {\n                    primebuff0[i] = 0;\n                    if (gfc.channels_out == 2)\n                        primebuff1[i] = 0;\n                } else {\n                    primebuff0[i] = inbuf[0][j];\n                    if (gfc.channels_out == 2)\n                        primebuff1[i] = inbuf[1][j];\n                    ++j;\n                }\n            }\n            /* polyphase filtering / mdct */\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    gfc.l3_side.tt[gr][ch].block_type = Encoder$2.SHORT_TYPE;\n                }\n            }\n            newMDCT.mdct_sub48(gfc, primebuff0, primebuff1);\n\n            /* check FFT will not use a negative starting offset */\n            assert$5(576 >= Encoder$2.FFTOFFSET);\n            /* check if we have enough data for FFT */\n            assert$5(gfc.mf_size >= (Encoder$2.BLKSIZE + gfp.framesize - Encoder$2.FFTOFFSET));\n            /* check if we have enough data for polyphase filterbank */\n            assert$5(gfc.mf_size >= (512 + gfp.framesize - 32));\n        }\n\n    }\n\n    /**\n     * <PRE>\n     * encodeframe()           Layer 3\n     *\n     * encode a single frame\n     *\n     *\n     *    lame_encode_frame()\n     *\n     *\n     *                           gr 0            gr 1\n     *    inbuf:           |--------------|--------------|--------------|\n     *\n     *\n     *    Polyphase (18 windows, each shifted 32)\n     *    gr 0:\n     *    window1          <----512---.\n     *    window18                 <----512---.\n     *\n     *    gr 1:\n     *    window1                         <----512---.\n     *    window18                                <----512---.\n     *\n     *\n     *\n     *    MDCT output:  |--------------|--------------|--------------|\n     *\n     *    FFT's                    <---------1024---------.\n     *                                             <---------1024-------.\n     *\n     *\n     *\n     *        inbuf = buffer of PCM data size=MP3 framesize\n     *        encoder acts on inbuf[ch][0], but output is delayed by MDCTDELAY\n     *        so the MDCT coefficints are from inbuf[ch][-MDCTDELAY]\n     *\n     *        psy-model FFT has a 1 granule delay, so we feed it data for the\n     *        next granule.\n     *        FFT is centered over granule:  224+576+224\n     *        So FFT starts at:   576-224-MDCTDELAY\n     *\n     *        MPEG2:  FFT ends at:  BLKSIZE+576-224-MDCTDELAY      (1328)\n     *        MPEG1:  FFT ends at:  BLKSIZE+2*576-224-MDCTDELAY    (1904)\n     *\n     *        MPEG2:  polyphase first window:  [0..511]\n     *                          18th window:   [544..1055]          (1056)\n     *        MPEG1:            36th window:   [1120..1631]         (1632)\n     *                data needed:  512+framesize-32\n     *\n     *        A close look newmdct.c shows that the polyphase filterbank\n     *        only uses data from [0..510] for each window.  Perhaps because the window\n     *        used by the filterbank is zero for the last point, so Takehiro's\n     *        code doesn't bother to compute with it.\n     *\n     *        FFT starts at 576-224-MDCTDELAY (304)  = 576-FFTOFFSET\n     *\n     * </PRE>\n     */\n\n\n    this.lame_encode_mp3_frame = function (gfp, inbuf_l, inbuf_r, mp3buf, mp3bufPos, mp3buf_size) {\n        var mp3count;\n        var masking_LR = new_array_n$5([2, 2]);\n        /*\n         * LR masking &\n         * energy\n         */\n        masking_LR[0][0] = new III_psy_ratio();\n        masking_LR[0][1] = new III_psy_ratio();\n        masking_LR[1][0] = new III_psy_ratio();\n        masking_LR[1][1] = new III_psy_ratio();\n        var masking_MS = new_array_n$5([2, 2]);\n        /* MS masking & energy */\n        masking_MS[0][0] = new III_psy_ratio();\n        masking_MS[0][1] = new III_psy_ratio();\n        masking_MS[1][0] = new III_psy_ratio();\n        masking_MS[1][1] = new III_psy_ratio();\n        //III_psy_ratio masking[][];\n        var masking;\n        /* pointer to selected maskings */\n        var inbuf = [null, null];\n        var gfc = gfp.internal_flags;\n\n        var tot_ener = new_float_n$5([2, 4]);\n        var ms_ener_ratio = [.5, .5];\n        var pe = [[0., 0.], [0., 0.]];\n        var pe_MS = [[0., 0.], [0., 0.]];\n\n//float[][] pe_use;\n        var pe_use;\n\n        var ch, gr;\n\n        inbuf[0] = inbuf_l;\n        inbuf[1] = inbuf_r;\n\n        if (gfc.lame_encode_frame_init == 0) {\n            /* first run? */\n            lame_encode_frame_init(gfp, inbuf);\n\n        }\n\n        /********************** padding *****************************/\n        /**\n         * <PRE>\n         * padding method as described in\n         * \"MPEG-Layer3 / Bitstream Syntax and Decoding\"\n         * by Martin Sieler, Ralph Sperschneider\n         *\n         * note: there is no padding for the very first frame\n         *\n         * Robert Hegemann 2000-06-22\n         * </PRE>\n         */\n        gfc.padding = 0;\n        if ((gfc.slot_lag -= gfc.frac_SpF) < 0) {\n            gfc.slot_lag += gfp.out_samplerate;\n            gfc.padding = 1;\n        }\n\n        /****************************************\n         * Stage 1: psychoacoustic model *\n         ****************************************/\n\n        if (gfc.psymodel != 0) {\n            /*\n             * psychoacoustic model psy model has a 1 granule (576) delay that\n             * we must compensate for (mt 6/99).\n             */\n            var ret;\n            var bufp = [null, null];\n            /* address of beginning of left & right granule */\n            var bufpPos = 0;\n            /* address of beginning of left & right granule */\n            var blocktype = new_int$5(2);\n\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    bufp[ch] = inbuf[ch];\n                    bufpPos = 576 + gr * 576 - Encoder$2.FFTOFFSET;\n                }\n                if (gfp.VBR == VbrMode$5.vbr_mtrh || gfp.VBR == VbrMode$5.vbr_mt) {\n                    ret = psy.L3psycho_anal_vbr(gfp, bufp, bufpPos, gr,\n                        masking_LR, masking_MS, pe[gr], pe_MS[gr],\n                        tot_ener[gr], blocktype);\n                } else {\n                    ret = psy.L3psycho_anal_ns(gfp, bufp, bufpPos, gr,\n                        masking_LR, masking_MS, pe[gr], pe_MS[gr],\n                        tot_ener[gr], blocktype);\n                }\n                if (ret != 0)\n                    return -4;\n\n                if (gfp.mode == MPEGMode.JOINT_STEREO) {\n                    ms_ener_ratio[gr] = tot_ener[gr][2] + tot_ener[gr][3];\n                    if (ms_ener_ratio[gr] > 0)\n                        ms_ener_ratio[gr] = tot_ener[gr][3] / ms_ener_ratio[gr];\n                }\n\n                /* block type flags */\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    var cod_info = gfc.l3_side.tt[gr][ch];\n                    cod_info.block_type = blocktype[ch];\n                    cod_info.mixed_block_flag = 0;\n                }\n            }\n        } else {\n            /* no psy model */\n            for (gr = 0; gr < gfc.mode_gr; gr++)\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    gfc.l3_side.tt[gr][ch].block_type = Encoder$2.NORM_TYPE;\n                    gfc.l3_side.tt[gr][ch].mixed_block_flag = 0;\n                    pe_MS[gr][ch] = pe[gr][ch] = 700;\n                }\n        }\n\n        /* auto-adjust of ATH, useful for low volume */\n        adjust_ATH(gfc);\n\n        /****************************************\n         * Stage 2: MDCT *\n         ****************************************/\n\n        /* polyphase filtering / mdct */\n        newMDCT.mdct_sub48(gfc, inbuf[0], inbuf[1]);\n\n        /****************************************\n         * Stage 3: MS/LR decision *\n         ****************************************/\n\n        /* Here will be selected MS or LR coding of the 2 stereo channels */\n        gfc.mode_ext = Encoder$2.MPG_MD_LR_LR;\n\n        if (gfp.force_ms) {\n            gfc.mode_ext = Encoder$2.MPG_MD_MS_LR;\n        } else if (gfp.mode == MPEGMode.JOINT_STEREO) {\n            /*\n             * ms_ratio = is scaled, for historical reasons, to look like a\n             * ratio of side_channel / total. 0 = signal is 100% mono .5 = L & R\n             * uncorrelated\n             */\n\n            /**\n             * <PRE>\n             * [0] and [1] are the results for the two granules in MPEG-1,\n             * in MPEG-2 it's only a faked averaging of the same value\n             * _prev is the value of the last granule of the previous frame\n             * _next is the value of the first granule of the next frame\n             * </PRE>\n             */\n\n            var sum_pe_MS = 0.;\n            var sum_pe_LR = 0.;\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    sum_pe_MS += pe_MS[gr][ch];\n                    sum_pe_LR += pe[gr][ch];\n                }\n            }\n\n            /* based on PE: M/S coding would not use much more bits than L/R */\n            if (sum_pe_MS <= 1.00 * sum_pe_LR) {\n\n                var gi0 = gfc.l3_side.tt[0];\n                var gi1 = gfc.l3_side.tt[gfc.mode_gr - 1];\n\n                if (gi0[0].block_type == gi0[1].block_type\n                    && gi1[0].block_type == gi1[1].block_type) {\n\n                    gfc.mode_ext = Encoder$2.MPG_MD_MS_LR;\n                }\n            }\n        }\n\n        /* bit and noise allocation */\n        if (gfc.mode_ext == MPG_MD_MS_LR) {\n            masking = masking_MS;\n            /* use MS masking */\n            pe_use = pe_MS;\n        } else {\n            masking = masking_LR;\n            /* use LR masking */\n            pe_use = pe;\n        }\n\n        /* copy data for MP3 frame analyzer */\n        if (gfp.analysis && gfc.pinfo != null) {\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    gfc.pinfo.ms_ratio[gr] = gfc.ms_ratio[gr];\n                    gfc.pinfo.ms_ener_ratio[gr] = ms_ener_ratio[gr];\n                    gfc.pinfo.blocktype[gr][ch] = gfc.l3_side.tt[gr][ch].block_type;\n                    gfc.pinfo.pe[gr][ch] = pe_use[gr][ch];\n                    System$5.arraycopy(gfc.l3_side.tt[gr][ch].xr, 0,\n                        gfc.pinfo.xr[gr][ch], 0, 576);\n                    /*\n                     * in psymodel, LR and MS data was stored in pinfo. switch\n                     * to MS data:\n                     */\n                    if (gfc.mode_ext == MPG_MD_MS_LR) {\n                        gfc.pinfo.ers[gr][ch] = gfc.pinfo.ers[gr][ch + 2];\n                        System$5.arraycopy(gfc.pinfo.energy[gr][ch + 2], 0,\n                            gfc.pinfo.energy[gr][ch], 0,\n                            gfc.pinfo.energy[gr][ch].length);\n                    }\n                }\n            }\n        }\n\n        /****************************************\n         * Stage 4: quantization loop *\n         ****************************************/\n\n        if (gfp.VBR == VbrMode$5.vbr_off || gfp.VBR == VbrMode$5.vbr_abr) {\n\n            var i;\n            var f;\n\n            for (i = 0; i < 18; i++)\n                gfc.nsPsy.pefirbuf[i] = gfc.nsPsy.pefirbuf[i + 1];\n\n            f = 0.0;\n            for (gr = 0; gr < gfc.mode_gr; gr++)\n                for (ch = 0; ch < gfc.channels_out; ch++)\n                    f += pe_use[gr][ch];\n            gfc.nsPsy.pefirbuf[18] = f;\n\n            f = gfc.nsPsy.pefirbuf[9];\n            for (i = 0; i < 9; i++)\n                f += (gfc.nsPsy.pefirbuf[i] + gfc.nsPsy.pefirbuf[18 - i])\n                    * Encoder$2.fircoef[i];\n\n            f = (670 * 5 * gfc.mode_gr * gfc.channels_out) / f;\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    pe_use[gr][ch] *= f;\n                }\n            }\n        }\n        gfc.iteration_loop.iteration_loop(gfp, pe_use, ms_ener_ratio, masking);\n\n        /****************************************\n         * Stage 5: bitstream formatting *\n         ****************************************/\n\n        /* write the frame to the bitstream */\n        bs.format_bitstream(gfp);\n\n        /* copy mp3 bit buffer into array */\n        mp3count = bs.copy_buffer(gfc, mp3buf, mp3bufPos, mp3buf_size, 1);\n\n        if (gfp.bWriteVbrTag)\n            vbr.addVbrFrame(gfp);\n\n        if (gfp.analysis && gfc.pinfo != null) {\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var j;\n                for (j = 0; j < FFTOFFSET; j++)\n                    gfc.pinfo.pcmdata[ch][j] = gfc.pinfo.pcmdata[ch][j\n                    + gfp.framesize];\n                for (j = FFTOFFSET; j < 1600; j++) {\n                    gfc.pinfo.pcmdata[ch][j] = inbuf[ch][j - FFTOFFSET];\n                }\n            }\n            qupvt.set_frame_pinfo(gfp, masking);\n        }\n\n        updateStats(gfc);\n\n        return mp3count;\n    };\n}\n\n\nvar Encoder_1 = Encoder$2;\n\nvar Util$4 = common.Util;\nvar new_float$4 = common.new_float;\nfunction FFT() {\n\n    var window = new_float$4(Encoder_1.BLKSIZE);\n    var window_s = new_float$4(Encoder_1.BLKSIZE_s / 2);\n\n    var costab = [\n        9.238795325112867e-01, 3.826834323650898e-01,\n        9.951847266721969e-01, 9.801714032956060e-02,\n        9.996988186962042e-01, 2.454122852291229e-02,\n        9.999811752826011e-01, 6.135884649154475e-03\n    ];\n\n    function fht(fz, fzPos, n) {\n        var tri = 0;\n        var k4;\n        var fi;\n        var gi;\n\n        n <<= 1;\n        /* to get BLKSIZE, because of 3DNow! ASM routine */\n        var fn = fzPos + n;\n        k4 = 4;\n        do {\n            var s1, c1;\n            var i, k1, k2, k3, kx;\n            kx = k4 >> 1;\n            k1 = k4;\n            k2 = k4 << 1;\n            k3 = k2 + k1;\n            k4 = k2 << 1;\n            fi = fzPos;\n            gi = fi + kx;\n            do {\n                var f0, f1, f2, f3;\n                f1 = fz[fi + 0] - fz[fi + k1];\n                f0 = fz[fi + 0] + fz[fi + k1];\n                f3 = fz[fi + k2] - fz[fi + k3];\n                f2 = fz[fi + k2] + fz[fi + k3];\n                fz[fi + k2] = f0 - f2;\n                fz[fi + 0] = f0 + f2;\n                fz[fi + k3] = f1 - f3;\n                fz[fi + k1] = f1 + f3;\n                f1 = fz[gi + 0] - fz[gi + k1];\n                f0 = fz[gi + 0] + fz[gi + k1];\n                f3 = (Util$4.SQRT2 * fz[gi + k3]);\n                f2 = (Util$4.SQRT2 * fz[gi + k2]);\n                fz[gi + k2] = f0 - f2;\n                fz[gi + 0] = f0 + f2;\n                fz[gi + k3] = f1 - f3;\n                fz[gi + k1] = f1 + f3;\n                gi += k4;\n                fi += k4;\n            } while (fi < fn);\n            c1 = costab[tri + 0];\n            s1 = costab[tri + 1];\n            for (i = 1; i < kx; i++) {\n                var c2, s2;\n                c2 = 1 - (2 * s1) * s1;\n                s2 = (2 * s1) * c1;\n                fi = fzPos + i;\n                gi = fzPos + k1 - i;\n                do {\n                    var a, b, g0, f0, f1, g1, f2, g2, f3, g3;\n                    b = s2 * fz[fi + k1] - c2 * fz[gi + k1];\n                    a = c2 * fz[fi + k1] + s2 * fz[gi + k1];\n                    f1 = fz[fi + 0] - a;\n                    f0 = fz[fi + 0] + a;\n                    g1 = fz[gi + 0] - b;\n                    g0 = fz[gi + 0] + b;\n                    b = s2 * fz[fi + k3] - c2 * fz[gi + k3];\n                    a = c2 * fz[fi + k3] + s2 * fz[gi + k3];\n                    f3 = fz[fi + k2] - a;\n                    f2 = fz[fi + k2] + a;\n                    g3 = fz[gi + k2] - b;\n                    g2 = fz[gi + k2] + b;\n                    b = s1 * f2 - c1 * g3;\n                    a = c1 * f2 + s1 * g3;\n                    fz[fi + k2] = f0 - a;\n                    fz[fi + 0] = f0 + a;\n                    fz[gi + k3] = g1 - b;\n                    fz[gi + k1] = g1 + b;\n                    b = c1 * g2 - s1 * f3;\n                    a = s1 * g2 + c1 * f3;\n                    fz[gi + k2] = g0 - a;\n                    fz[gi + 0] = g0 + a;\n                    fz[fi + k3] = f1 - b;\n                    fz[fi + k1] = f1 + b;\n                    gi += k4;\n                    fi += k4;\n                } while (fi < fn);\n                c2 = c1;\n                c1 = c2 * costab[tri + 0] - s1 * costab[tri + 1];\n                s1 = c2 * costab[tri + 1] + s1 * costab[tri + 0];\n            }\n            tri += 2;\n        } while (k4 < n);\n    }\n\n    var rv_tbl = [0x00, 0x80, 0x40,\n        0xc0, 0x20, 0xa0, 0x60, 0xe0, 0x10,\n        0x90, 0x50, 0xd0, 0x30, 0xb0, 0x70,\n        0xf0, 0x08, 0x88, 0x48, 0xc8, 0x28,\n        0xa8, 0x68, 0xe8, 0x18, 0x98, 0x58,\n        0xd8, 0x38, 0xb8, 0x78, 0xf8, 0x04,\n        0x84, 0x44, 0xc4, 0x24, 0xa4, 0x64,\n        0xe4, 0x14, 0x94, 0x54, 0xd4, 0x34,\n        0xb4, 0x74, 0xf4, 0x0c, 0x8c, 0x4c,\n        0xcc, 0x2c, 0xac, 0x6c, 0xec, 0x1c,\n        0x9c, 0x5c, 0xdc, 0x3c, 0xbc, 0x7c,\n        0xfc, 0x02, 0x82, 0x42, 0xc2, 0x22,\n        0xa2, 0x62, 0xe2, 0x12, 0x92, 0x52,\n        0xd2, 0x32, 0xb2, 0x72, 0xf2, 0x0a,\n        0x8a, 0x4a, 0xca, 0x2a, 0xaa, 0x6a,\n        0xea, 0x1a, 0x9a, 0x5a, 0xda, 0x3a,\n        0xba, 0x7a, 0xfa, 0x06, 0x86, 0x46,\n        0xc6, 0x26, 0xa6, 0x66, 0xe6, 0x16,\n        0x96, 0x56, 0xd6, 0x36, 0xb6, 0x76,\n        0xf6, 0x0e, 0x8e, 0x4e, 0xce, 0x2e,\n        0xae, 0x6e, 0xee, 0x1e, 0x9e, 0x5e,\n        0xde, 0x3e, 0xbe, 0x7e, 0xfe];\n\n    this.fft_short = function (gfc, x_real, chn, buffer, bufPos) {\n        for (var b = 0; b < 3; b++) {\n            var x = Encoder_1.BLKSIZE_s / 2;\n            var k = 0xffff & ((576 / 3) * (b + 1));\n            var j = Encoder_1.BLKSIZE_s / 8 - 1;\n            do {\n                var f0, f1, f2, f3, w;\n                var i = rv_tbl[j << 2] & 0xff;\n\n                f0 = window_s[i] * buffer[chn][bufPos + i + k];\n                w = window_s[0x7f - i] * buffer[chn][bufPos + i + k + 0x80];\n                f1 = f0 - w;\n                f0 = f0 + w;\n                f2 = window_s[i + 0x40] * buffer[chn][bufPos + i + k + 0x40];\n                w = window_s[0x3f - i] * buffer[chn][bufPos + i + k + 0xc0];\n                f3 = f2 - w;\n                f2 = f2 + w;\n\n                x -= 4;\n                x_real[b][x + 0] = f0 + f2;\n                x_real[b][x + 2] = f0 - f2;\n                x_real[b][x + 1] = f1 + f3;\n                x_real[b][x + 3] = f1 - f3;\n\n                f0 = window_s[i + 0x01] * buffer[chn][bufPos + i + k + 0x01];\n                w = window_s[0x7e - i] * buffer[chn][bufPos + i + k + 0x81];\n                f1 = f0 - w;\n                f0 = f0 + w;\n                f2 = window_s[i + 0x41] * buffer[chn][bufPos + i + k + 0x41];\n                w = window_s[0x3e - i] * buffer[chn][bufPos + i + k + 0xc1];\n                f3 = f2 - w;\n                f2 = f2 + w;\n\n                x_real[b][x + Encoder_1.BLKSIZE_s / 2 + 0] = f0 + f2;\n                x_real[b][x + Encoder_1.BLKSIZE_s / 2 + 2] = f0 - f2;\n                x_real[b][x + Encoder_1.BLKSIZE_s / 2 + 1] = f1 + f3;\n                x_real[b][x + Encoder_1.BLKSIZE_s / 2 + 3] = f1 - f3;\n            } while (--j >= 0);\n\n            fht(x_real[b], x, Encoder_1.BLKSIZE_s / 2);\n            /* BLKSIZE_s/2 because of 3DNow! ASM routine */\n            /* BLKSIZE/2 because of 3DNow! ASM routine */\n        }\n    };\n\n    this.fft_long = function (gfc, y, chn, buffer, bufPos) {\n        var jj = Encoder_1.BLKSIZE / 8 - 1;\n        var x = Encoder_1.BLKSIZE / 2;\n\n        do {\n            var f0, f1, f2, f3, w;\n            var i = rv_tbl[jj] & 0xff;\n            f0 = window[i] * buffer[chn][bufPos + i];\n            w = window[i + 0x200] * buffer[chn][bufPos + i + 0x200];\n            f1 = f0 - w;\n            f0 = f0 + w;\n            f2 = window[i + 0x100] * buffer[chn][bufPos + i + 0x100];\n            w = window[i + 0x300] * buffer[chn][bufPos + i + 0x300];\n            f3 = f2 - w;\n            f2 = f2 + w;\n\n            x -= 4;\n            y[x + 0] = f0 + f2;\n            y[x + 2] = f0 - f2;\n            y[x + 1] = f1 + f3;\n            y[x + 3] = f1 - f3;\n\n            f0 = window[i + 0x001] * buffer[chn][bufPos + i + 0x001];\n            w = window[i + 0x201] * buffer[chn][bufPos + i + 0x201];\n            f1 = f0 - w;\n            f0 = f0 + w;\n            f2 = window[i + 0x101] * buffer[chn][bufPos + i + 0x101];\n            w = window[i + 0x301] * buffer[chn][bufPos + i + 0x301];\n            f3 = f2 - w;\n            f2 = f2 + w;\n\n            y[x + Encoder_1.BLKSIZE / 2 + 0] = f0 + f2;\n            y[x + Encoder_1.BLKSIZE / 2 + 2] = f0 - f2;\n            y[x + Encoder_1.BLKSIZE / 2 + 1] = f1 + f3;\n            y[x + Encoder_1.BLKSIZE / 2 + 3] = f1 - f3;\n        } while (--jj >= 0);\n\n        fht(y, x, Encoder_1.BLKSIZE / 2);\n        /* BLKSIZE/2 because of 3DNow! ASM routine */\n    };\n\n    this.init_fft = function (gfc) {\n        /* The type of window used here will make no real difference, but */\n        /*\n         * in the interest of merging nspsytune stuff - switch to blackman\n         * window\n         */\n        for (var i = 0; i < Encoder_1.BLKSIZE; i++)\n            /* blackman window */\n            window[i] = (0.42 - 0.5 * Math.cos(2 * Math.PI * (i + .5)\n                / Encoder_1.BLKSIZE) + 0.08 * Math.cos(4 * Math.PI * (i + .5)\n                / Encoder_1.BLKSIZE));\n\n        for (var i = 0; i < Encoder_1.BLKSIZE_s / 2; i++)\n            window_s[i] = (0.5 * (1.0 - Math.cos(2.0 * Math.PI\n                * (i + 0.5) / Encoder_1.BLKSIZE_s)));\n\n    };\n\n}\n\nvar FFT_1 = FFT;\n\nvar VbrMode$3 = common.VbrMode;\nvar Float$3 = common.Float;\nvar ShortBlock$3 = common.ShortBlock;\nvar Util$3 = common.Util;\nvar Arrays$3 = common.Arrays;\nvar new_float$3 = common.new_float;\nvar new_float_n$3 = common.new_float_n;\nvar new_int$3 = common.new_int;\nvar assert$3 = common.assert;\n\n\n\n\nfunction PsyModel() {\n\n    var fft = new FFT_1();\n\n    var LOG10 = 2.30258509299404568402;\n\n    var rpelev = 2;\n    var rpelev2 = 16;\n    var rpelev_s = 2;\n    var rpelev2_s = 16;\n\n    /* size of each partition band, in barks: */\n    var DELBARK = .34;\n\n    /* tuned for output level (sensitive to energy scale) */\n    var VO_SCALE = (1. / (14752 * 14752) / (Encoder_1.BLKSIZE / 2));\n\n    var temporalmask_sustain_sec = 0.01;\n\n    var NS_PREECHO_ATT0 = 0.8;\n    var NS_PREECHO_ATT1 = 0.6;\n    var NS_PREECHO_ATT2 = 0.3;\n\n    var NS_MSFIX = 3.5;\n\n    var NSATTACKTHRE = 4.4;\n    var NSATTACKTHRE_S = 25;\n\n    var NSFIRLEN = 21;\n\n    /* size of each partition band, in barks: */\n    var LN_TO_LOG10 = 0.2302585093;\n\n    function NON_LINEAR_SCALE_ENERGY(x) {\n        return x;\n    }\n\n    /**\n     * <PRE>\n     *       L3psycho_anal.  Compute psycho acoustics.\n     *\n     *       Data returned to the calling program must be delayed by one\n     *       granule.\n     *\n     *       This is done in two places.\n     *       If we do not need to know the blocktype, the copying\n     *       can be done here at the top of the program: we copy the data for\n     *       the last granule (computed during the last call) before it is\n     *       overwritten with the new data.  It looks like this:\n     *\n     *       0. static psymodel_data\n     *       1. calling_program_data = psymodel_data\n     *       2. compute psymodel_data\n     *\n     *       For data which needs to know the blocktype, the copying must be\n     *       done at the end of this loop, and the old values must be saved:\n     *\n     *       0. static psymodel_data_old\n     *       1. compute psymodel_data\n     *       2. compute possible block type of this granule\n     *       3. compute final block type of previous granule based on #2.\n     *       4. calling_program_data = psymodel_data_old\n     *       5. psymodel_data_old = psymodel_data\n     *     psycho_loudness_approx\n     *       jd - 2001 mar 12\n     *    in:  energy   - BLKSIZE/2 elements of frequency magnitudes ^ 2\n     *         gfp      - uses out_samplerate, ATHtype (also needed for ATHformula)\n     *    returns: loudness^2 approximation, a positive value roughly tuned for a value\n     *             of 1.0 for signals near clipping.\n     *    notes:   When calibrated, feeding this function binary white noise at sample\n     *             values +32767 or -32768 should return values that approach 3.\n     *             ATHformula is used to approximate an equal loudness curve.\n     *    future:  Data indicates that the shape of the equal loudness curve varies\n     *             with intensity.  This function might be improved by using an equal\n     *             loudness curve shaped for typical playback levels (instead of the\n     *             ATH, that is shaped for the threshold).  A flexible realization might\n     *             simply bend the existing ATH curve to achieve the desired shape.\n     *             However, the potential gain may not be enough to justify an effort.\n     * </PRE>\n     */\n    function psycho_loudness_approx(energy, gfc) {\n        var loudness_power = 0.0;\n        /* apply weights to power in freq. bands */\n        for (var i = 0; i < Encoder_1.BLKSIZE / 2; ++i)\n            loudness_power += energy[i] * gfc.ATH.eql_w[i];\n        loudness_power *= VO_SCALE;\n\n        return loudness_power;\n    }\n\n    function compute_ffts(gfp, fftenergy, fftenergy_s, wsamp_l, wsamp_lPos, wsamp_s, wsamp_sPos, gr_out, chn, buffer, bufPos) {\n        var gfc = gfp.internal_flags;\n        if (chn < 2) {\n            fft.fft_long(gfc, wsamp_l[wsamp_lPos], chn, buffer, bufPos);\n            fft.fft_short(gfc, wsamp_s[wsamp_sPos], chn, buffer, bufPos);\n        }\n        /* FFT data for mid and side channel is derived from L & R */\n        else if (chn == 2) {\n            for (var j = Encoder_1.BLKSIZE - 1; j >= 0; --j) {\n                var l = wsamp_l[wsamp_lPos + 0][j];\n                var r = wsamp_l[wsamp_lPos + 1][j];\n                wsamp_l[wsamp_lPos + 0][j] = (l + r) * Util$3.SQRT2 * 0.5;\n                wsamp_l[wsamp_lPos + 1][j] = (l - r) * Util$3.SQRT2 * 0.5;\n            }\n            for (var b = 2; b >= 0; --b) {\n                for (var j = Encoder_1.BLKSIZE_s - 1; j >= 0; --j) {\n                    var l = wsamp_s[wsamp_sPos + 0][b][j];\n                    var r = wsamp_s[wsamp_sPos + 1][b][j];\n                    wsamp_s[wsamp_sPos + 0][b][j] = (l + r) * Util$3.SQRT2 * 0.5;\n                    wsamp_s[wsamp_sPos + 1][b][j] = (l - r) * Util$3.SQRT2 * 0.5;\n                }\n            }\n        }\n\n        /*********************************************************************\n         * compute energies\n         *********************************************************************/\n        fftenergy[0] = NON_LINEAR_SCALE_ENERGY(wsamp_l[wsamp_lPos + 0][0]);\n        fftenergy[0] *= fftenergy[0];\n\n        for (var j = Encoder_1.BLKSIZE / 2 - 1; j >= 0; --j) {\n            var re = (wsamp_l[wsamp_lPos + 0])[Encoder_1.BLKSIZE / 2 - j];\n            var im = (wsamp_l[wsamp_lPos + 0])[Encoder_1.BLKSIZE / 2 + j];\n            fftenergy[Encoder_1.BLKSIZE / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                * re + im * im) * 0.5);\n        }\n        for (var b = 2; b >= 0; --b) {\n            fftenergy_s[b][0] = (wsamp_s[wsamp_sPos + 0])[b][0];\n            fftenergy_s[b][0] *= fftenergy_s[b][0];\n            for (var j = Encoder_1.BLKSIZE_s / 2 - 1; j >= 0; --j) {\n                var re = (wsamp_s[wsamp_sPos + 0])[b][Encoder_1.BLKSIZE_s\n                / 2 - j];\n                var im = (wsamp_s[wsamp_sPos + 0])[b][Encoder_1.BLKSIZE_s\n                / 2 + j];\n                fftenergy_s[b][Encoder_1.BLKSIZE_s / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                    * re + im * im) * 0.5);\n            }\n        }\n        /* total energy */\n        {\n            var totalenergy = 0.0;\n            for (var j = 11; j < Encoder_1.HBLKSIZE; j++)\n                totalenergy += fftenergy[j];\n\n            gfc.tot_ener[chn] = totalenergy;\n        }\n\n        if (gfp.analysis) {\n            for (var j = 0; j < Encoder_1.HBLKSIZE; j++) {\n                gfc.pinfo.energy[gr_out][chn][j] = gfc.pinfo.energy_save[chn][j];\n                gfc.pinfo.energy_save[chn][j] = fftenergy[j];\n            }\n            gfc.pinfo.pe[gr_out][chn] = gfc.pe[chn];\n        }\n\n        /*********************************************************************\n         * compute loudness approximation (used for ATH auto-level adjustment)\n         *********************************************************************/\n        if (gfp.athaa_loudapprox == 2 && chn < 2) {\n            // no loudness for mid/side ch\n            gfc.loudness_sq[gr_out][chn] = gfc.loudness_sq_save[chn];\n            gfc.loudness_sq_save[chn] = psycho_loudness_approx(fftenergy, gfc);\n        }\n    }\n\n    /* mask_add optimization */\n    /* init the limit values used to avoid computing log in mask_add when it is not necessary */\n\n    /**\n     * <PRE>\n     *  For example, with i = 10*log10(m2/m1)/10*16         (= log10(m2/m1)*16)\n     *\n     * abs(i)>8 is equivalent (as i is an integer) to\n     * abs(i)>=9\n     * i>=9 || i<=-9\n     * equivalent to (as i is the biggest integer smaller than log10(m2/m1)*16\n     * or the smallest integer bigger than log10(m2/m1)*16 depending on the sign of log10(m2/m1)*16)\n     * log10(m2/m1)>=9/16 || log10(m2/m1)<=-9/16\n     * exp10 is strictly increasing thus this is equivalent to\n     * m2/m1 >= 10^(9/16) || m2/m1<=10^(-9/16) which are comparisons to constants\n     * </PRE>\n     */\n\n    /**\n     * as in if(i>8)\n     */\n    var I1LIMIT = 8;\n    /**\n     * as in if(i>24) . changed 23\n     */\n    var I2LIMIT = 23;\n    /**\n     * as in if(m<15)\n     */\n    var MLIMIT = 15;\n\n    var ma_max_i1;\n    var ma_max_i2;\n    var ma_max_m;\n\n    /**\n     * This is the masking table:<BR>\n     * According to tonality, values are going from 0dB (TMN) to 9.3dB (NMT).<BR>\n     * After additive masking computation, 8dB are added, so final values are\n     * going from 8dB to 17.3dB\n     *\n     * pow(10, -0.0..-0.6)\n     */\n    var tab = [1.0, 0.79433, 0.63096, 0.63096,\n        0.63096, 0.63096, 0.63096, 0.25119, 0.11749];\n\n    function init_mask_add_max_values() {\n        ma_max_i1 = Math.pow(10, (I1LIMIT + 1) / 16.0);\n        ma_max_i2 = Math.pow(10, (I2LIMIT + 1) / 16.0);\n        ma_max_m = Math.pow(10, (MLIMIT) / 10.0);\n    }\n\n    var table1 = [3.3246 * 3.3246,\n        3.23837 * 3.23837, 3.15437 * 3.15437, 3.00412 * 3.00412,\n        2.86103 * 2.86103, 2.65407 * 2.65407, 2.46209 * 2.46209,\n        2.284 * 2.284, 2.11879 * 2.11879, 1.96552 * 1.96552,\n        1.82335 * 1.82335, 1.69146 * 1.69146, 1.56911 * 1.56911,\n        1.46658 * 1.46658, 1.37074 * 1.37074, 1.31036 * 1.31036,\n        1.25264 * 1.25264, 1.20648 * 1.20648, 1.16203 * 1.16203,\n        1.12765 * 1.12765, 1.09428 * 1.09428, 1.0659 * 1.0659,\n        1.03826 * 1.03826, 1.01895 * 1.01895, 1];\n\n    var table2 = [1.33352 * 1.33352,\n        1.35879 * 1.35879, 1.38454 * 1.38454, 1.39497 * 1.39497,\n        1.40548 * 1.40548, 1.3537 * 1.3537, 1.30382 * 1.30382,\n        1.22321 * 1.22321, 1.14758 * 1.14758, 1];\n\n    var table3 = [2.35364 * 2.35364,\n        2.29259 * 2.29259, 2.23313 * 2.23313, 2.12675 * 2.12675,\n        2.02545 * 2.02545, 1.87894 * 1.87894, 1.74303 * 1.74303,\n        1.61695 * 1.61695, 1.49999 * 1.49999, 1.39148 * 1.39148,\n        1.29083 * 1.29083, 1.19746 * 1.19746, 1.11084 * 1.11084,\n        1.03826 * 1.03826];\n\n    /**\n     * addition of simultaneous masking Naoki Shibata 2000/7\n     */\n    function mask_add(m1, m2, kk, b, gfc, shortblock) {\n        var ratio;\n\n        if (m2 > m1) {\n            if (m2 < (m1 * ma_max_i2))\n                ratio = m2 / m1;\n            else\n                return (m1 + m2);\n        } else {\n            if (m1 >= (m2 * ma_max_i2))\n                return (m1 + m2);\n            ratio = m1 / m2;\n        }\n\n        /* Should always be true, just checking */\n        assert$3(m1 >= 0);\n        assert$3(m2 >= 0);\n\n        m1 += m2;\n        //if (((long)(b + 3) & 0xffffffff) <= 3 + 3) {\n        if ((b + 3) <= 3 + 3) {\n            /* approximately, 1 bark = 3 partitions */\n            /* 65% of the cases */\n            /* originally 'if(i > 8)' */\n            if (ratio >= ma_max_i1) {\n                /* 43% of the total */\n                return m1;\n            }\n\n            /* 22% of the total */\n            var i = 0 | (Util$3.FAST_LOG10_X(ratio, 16.0));\n            return m1 * table2[i];\n        }\n\n        /**\n         * <PRE>\n         * m<15 equ log10((m1+m2)/gfc.ATH.cb[k])<1.5\n         * equ (m1+m2)/gfc.ATH.cb[k]<10^1.5\n         * equ (m1+m2)<10^1.5 * gfc.ATH.cb[k]\n         * </PRE>\n         */\n        var i = 0 | Util$3.FAST_LOG10_X(ratio, 16.0);\n        if (shortblock != 0) {\n            m2 = gfc.ATH.cb_s[kk] * gfc.ATH.adjust;\n        } else {\n            m2 = gfc.ATH.cb_l[kk] * gfc.ATH.adjust;\n        }\n        assert$3(m2 >= 0);\n        if (m1 < ma_max_m * m2) {\n            /* 3% of the total */\n            /* Originally if (m > 0) { */\n            if (m1 > m2) {\n                var f, r;\n\n                f = 1.0;\n                if (i <= 13)\n                    f = table3[i];\n\n                r = Util$3.FAST_LOG10_X(m1 / m2, 10.0 / 15.0);\n                return m1 * ((table1[i] - f) * r + f);\n            }\n\n            if (i > 13)\n                return m1;\n\n            return m1 * table3[i];\n        }\n\n        /* 10% of total */\n        return m1 * table1[i];\n    }\n\n    var table2_ = [1.33352 * 1.33352,\n        1.35879 * 1.35879, 1.38454 * 1.38454, 1.39497 * 1.39497,\n        1.40548 * 1.40548, 1.3537 * 1.3537, 1.30382 * 1.30382,\n        1.22321 * 1.22321, 1.14758 * 1.14758, 1];\n\n    /**\n     * addition of simultaneous masking Naoki Shibata 2000/7\n     */\n    function vbrpsy_mask_add(m1, m2, b) {\n        var ratio;\n\n        if (m1 < 0) {\n            m1 = 0;\n        }\n        if (m2 < 0) {\n            m2 = 0;\n        }\n        if (m1 <= 0) {\n            return m2;\n        }\n        if (m2 <= 0) {\n            return m1;\n        }\n        if (m2 > m1) {\n            ratio = m2 / m1;\n        } else {\n            ratio = m1 / m2;\n        }\n        if (-2 <= b && b <= 2) {\n            /* approximately, 1 bark = 3 partitions */\n            /* originally 'if(i > 8)' */\n            if (ratio >= ma_max_i1) {\n                return m1 + m2;\n            } else {\n                var i = 0 | (Util$3.FAST_LOG10_X(ratio, 16.0));\n                return (m1 + m2) * table2_[i];\n            }\n        }\n        if (ratio < ma_max_i2) {\n            return m1 + m2;\n        }\n        if (m1 < m2) {\n            m1 = m2;\n        }\n        return m1;\n    }\n\n    /**\n     * compute interchannel masking effects\n     */\n    function calc_interchannel_masking(gfp, ratio) {\n        var gfc = gfp.internal_flags;\n        if (gfc.channels_out > 1) {\n            for (var sb = 0; sb < Encoder_1.SBMAX_l; sb++) {\n                var l = gfc.thm[0].l[sb];\n                var r = gfc.thm[1].l[sb];\n                gfc.thm[0].l[sb] += r * ratio;\n                gfc.thm[1].l[sb] += l * ratio;\n            }\n            for (var sb = 0; sb < Encoder_1.SBMAX_s; sb++) {\n                for (var sblock = 0; sblock < 3; sblock++) {\n                    var l = gfc.thm[0].s[sb][sblock];\n                    var r = gfc.thm[1].s[sb][sblock];\n                    gfc.thm[0].s[sb][sblock] += r * ratio;\n                    gfc.thm[1].s[sb][sblock] += l * ratio;\n                }\n            }\n        }\n    }\n\n    /**\n     * compute M/S thresholds from Johnston & Ferreira 1992 ICASSP paper\n     */\n    function msfix1(gfc) {\n        for (var sb = 0; sb < Encoder_1.SBMAX_l; sb++) {\n            /* use this fix if L & R masking differs by 2db or less */\n            /* if db = 10*log10(x2/x1) < 2 */\n            /* if (x2 < 1.58*x1) { */\n            if (gfc.thm[0].l[sb] > 1.58 * gfc.thm[1].l[sb]\n                || gfc.thm[1].l[sb] > 1.58 * gfc.thm[0].l[sb])\n                continue;\n            var mld = gfc.mld_l[sb] * gfc.en[3].l[sb];\n            var rmid = Math.max(gfc.thm[2].l[sb],\n                Math.min(gfc.thm[3].l[sb], mld));\n\n            mld = gfc.mld_l[sb] * gfc.en[2].l[sb];\n            var rside = Math.max(gfc.thm[3].l[sb],\n                Math.min(gfc.thm[2].l[sb], mld));\n            gfc.thm[2].l[sb] = rmid;\n            gfc.thm[3].l[sb] = rside;\n        }\n\n        for (var sb = 0; sb < Encoder_1.SBMAX_s; sb++) {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                if (gfc.thm[0].s[sb][sblock] > 1.58 * gfc.thm[1].s[sb][sblock]\n                    || gfc.thm[1].s[sb][sblock] > 1.58 * gfc.thm[0].s[sb][sblock])\n                    continue;\n                var mld = gfc.mld_s[sb] * gfc.en[3].s[sb][sblock];\n                var rmid = Math.max(gfc.thm[2].s[sb][sblock],\n                    Math.min(gfc.thm[3].s[sb][sblock], mld));\n\n                mld = gfc.mld_s[sb] * gfc.en[2].s[sb][sblock];\n                var rside = Math.max(gfc.thm[3].s[sb][sblock],\n                    Math.min(gfc.thm[2].s[sb][sblock], mld));\n\n                gfc.thm[2].s[sb][sblock] = rmid;\n                gfc.thm[3].s[sb][sblock] = rside;\n            }\n        }\n    }\n\n    /**\n     * Adjust M/S maskings if user set \"msfix\"\n     *\n     * Naoki Shibata 2000\n     */\n    function ns_msfix(gfc, msfix, athadjust) {\n        var msfix2 = msfix;\n        var athlower = Math.pow(10, athadjust);\n\n        msfix *= 2.0;\n        msfix2 *= 2.0;\n        for (var sb = 0; sb < Encoder_1.SBMAX_l; sb++) {\n            var thmLR, thmM, thmS, ath;\n            ath = (gfc.ATH.cb_l[gfc.bm_l[sb]]) * athlower;\n            thmLR = Math.min(Math.max(gfc.thm[0].l[sb], ath),\n                Math.max(gfc.thm[1].l[sb], ath));\n            thmM = Math.max(gfc.thm[2].l[sb], ath);\n            thmS = Math.max(gfc.thm[3].l[sb], ath);\n            if (thmLR * msfix < thmM + thmS) {\n                var f = thmLR * msfix2 / (thmM + thmS);\n                thmM *= f;\n                thmS *= f;\n                assert$3(thmM + thmS > 0);\n            }\n            gfc.thm[2].l[sb] = Math.min(thmM, gfc.thm[2].l[sb]);\n            gfc.thm[3].l[sb] = Math.min(thmS, gfc.thm[3].l[sb]);\n        }\n\n        athlower *= ( Encoder_1.BLKSIZE_s / Encoder_1.BLKSIZE);\n        for (var sb = 0; sb < Encoder_1.SBMAX_s; sb++) {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                var thmLR, thmM, thmS, ath;\n                ath = (gfc.ATH.cb_s[gfc.bm_s[sb]]) * athlower;\n                thmLR = Math.min(Math.max(gfc.thm[0].s[sb][sblock], ath),\n                    Math.max(gfc.thm[1].s[sb][sblock], ath));\n                thmM = Math.max(gfc.thm[2].s[sb][sblock], ath);\n                thmS = Math.max(gfc.thm[3].s[sb][sblock], ath);\n\n                if (thmLR * msfix < thmM + thmS) {\n                    var f = thmLR * msfix / (thmM + thmS);\n                    thmM *= f;\n                    thmS *= f;\n                    assert$3(thmM + thmS > 0);\n                }\n                gfc.thm[2].s[sb][sblock] = Math.min(gfc.thm[2].s[sb][sblock],\n                    thmM);\n                gfc.thm[3].s[sb][sblock] = Math.min(gfc.thm[3].s[sb][sblock],\n                    thmS);\n            }\n        }\n    }\n\n    /**\n     * short block threshold calculation (part 2)\n     *\n     * partition band bo_s[sfb] is at the transition from scalefactor band sfb\n     * to the next one sfb+1; enn and thmm have to be split between them\n     */\n    function convert_partition2scalefac_s(gfc, eb, thr, chn, sblock) {\n        var sb, b;\n        var enn = 0.0;\n        var thmm = 0.0;\n        for (sb = b = 0; sb < Encoder_1.SBMAX_s; ++b, ++sb) {\n            var bo_s_sb = gfc.bo_s[sb];\n            var npart_s = gfc.npart_s;\n            var b_lim = bo_s_sb < npart_s ? bo_s_sb : npart_s;\n            while (b < b_lim) {\n                assert$3(eb[b] >= 0);\n                // iff failed, it may indicate some index error elsewhere\n                assert$3(thr[b] >= 0);\n                enn += eb[b];\n                thmm += thr[b];\n                b++;\n            }\n            gfc.en[chn].s[sb][sblock] = enn;\n            gfc.thm[chn].s[sb][sblock] = thmm;\n\n            if (b >= npart_s) {\n                ++sb;\n                break;\n            }\n            assert$3(eb[b] >= 0);\n            // iff failed, it may indicate some index error elsewhere\n            assert$3(thr[b] >= 0);\n            {\n                /* at transition sfb . sfb+1 */\n                var w_curr = gfc.PSY.bo_s_weight[sb];\n                var w_next = 1.0 - w_curr;\n                enn = w_curr * eb[b];\n                thmm = w_curr * thr[b];\n                gfc.en[chn].s[sb][sblock] += enn;\n                gfc.thm[chn].s[sb][sblock] += thmm;\n                enn = w_next * eb[b];\n                thmm = w_next * thr[b];\n            }\n        }\n        /* zero initialize the rest */\n        for (; sb < Encoder_1.SBMAX_s; ++sb) {\n            gfc.en[chn].s[sb][sblock] = 0;\n            gfc.thm[chn].s[sb][sblock] = 0;\n        }\n    }\n\n    /**\n     * longblock threshold calculation (part 2)\n     */\n    function convert_partition2scalefac_l(gfc, eb, thr, chn) {\n        var sb, b;\n        var enn = 0.0;\n        var thmm = 0.0;\n        for (sb = b = 0; sb < Encoder_1.SBMAX_l; ++b, ++sb) {\n            var bo_l_sb = gfc.bo_l[sb];\n            var npart_l = gfc.npart_l;\n            var b_lim = bo_l_sb < npart_l ? bo_l_sb : npart_l;\n            while (b < b_lim) {\n                assert$3(eb[b] >= 0);\n                // iff failed, it may indicate some index error elsewhere\n                assert$3(thr[b] >= 0);\n                enn += eb[b];\n                thmm += thr[b];\n                b++;\n            }\n            gfc.en[chn].l[sb] = enn;\n            gfc.thm[chn].l[sb] = thmm;\n\n            if (b >= npart_l) {\n                ++sb;\n                break;\n            }\n            assert$3(eb[b] >= 0);\n            assert$3(thr[b] >= 0);\n            {\n                /* at transition sfb . sfb+1 */\n                var w_curr = gfc.PSY.bo_l_weight[sb];\n                var w_next = 1.0 - w_curr;\n                enn = w_curr * eb[b];\n                thmm = w_curr * thr[b];\n                gfc.en[chn].l[sb] += enn;\n                gfc.thm[chn].l[sb] += thmm;\n                enn = w_next * eb[b];\n                thmm = w_next * thr[b];\n            }\n        }\n        /* zero initialize the rest */\n        for (; sb < Encoder_1.SBMAX_l; ++sb) {\n            gfc.en[chn].l[sb] = 0;\n            gfc.thm[chn].l[sb] = 0;\n        }\n    }\n\n    function compute_masking_s(gfp, fftenergy_s, eb, thr, chn, sblock) {\n        var gfc = gfp.internal_flags;\n        var j, b;\n\n        for (b = j = 0; b < gfc.npart_s; ++b) {\n            var ebb = 0, m = 0;\n            var n = gfc.numlines_s[b];\n            for (var i = 0; i < n; ++i, ++j) {\n                var el = fftenergy_s[sblock][j];\n                ebb += el;\n                if (m < el)\n                    m = el;\n            }\n            eb[b] = ebb;\n        }\n        assert$3(b == gfc.npart_s);\n        assert$3(j == 129);\n        for (j = b = 0; b < gfc.npart_s; b++) {\n            var kk = gfc.s3ind_s[b][0];\n            var ecb = gfc.s3_ss[j++] * eb[kk];\n            ++kk;\n            while (kk <= gfc.s3ind_s[b][1]) {\n                ecb += gfc.s3_ss[j] * eb[kk];\n                ++j;\n                ++kk;\n            }\n\n            { /* limit calculated threshold by previous granule */\n                var x = rpelev_s * gfc.nb_s1[chn][b];\n                thr[b] = Math.min(ecb, x);\n            }\n            if (gfc.blocktype_old[chn & 1] == Encoder_1.SHORT_TYPE) {\n                /* limit calculated threshold by even older granule */\n                var x = rpelev2_s * gfc.nb_s2[chn][b];\n                var y = thr[b];\n                thr[b] = Math.min(x, y);\n            }\n\n            gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\n            gfc.nb_s1[chn][b] = ecb;\n            assert$3(thr[b] >= 0);\n        }\n        for (; b <= Encoder_1.CBANDS; ++b) {\n            eb[b] = 0;\n            thr[b] = 0;\n        }\n    }\n\n    function block_type_set(gfp, uselongblock, blocktype_d, blocktype) {\n        var gfc = gfp.internal_flags;\n\n        if (gfp.short_blocks == ShortBlock$3.short_block_coupled\n                /* force both channels to use the same block type */\n                /* this is necessary if the frame is to be encoded in ms_stereo. */\n                /* But even without ms_stereo, FhG does this */\n            && !(uselongblock[0] != 0 && uselongblock[1] != 0))\n            uselongblock[0] = uselongblock[1] = 0;\n\n        /*\n         * update the blocktype of the previous granule, since it depends on\n         * what happend in this granule\n         */\n        for (var chn = 0; chn < gfc.channels_out; chn++) {\n            blocktype[chn] = Encoder_1.NORM_TYPE;\n            /* disable short blocks */\n            if (gfp.short_blocks == ShortBlock$3.short_block_dispensed)\n                uselongblock[chn] = 1;\n            if (gfp.short_blocks == ShortBlock$3.short_block_forced)\n                uselongblock[chn] = 0;\n\n            if (uselongblock[chn] != 0) {\n                /* no attack : use long blocks */\n                assert$3(gfc.blocktype_old[chn] != Encoder_1.START_TYPE);\n                if (gfc.blocktype_old[chn] == Encoder_1.SHORT_TYPE)\n                    blocktype[chn] = Encoder_1.STOP_TYPE;\n            } else {\n                /* attack : use short blocks */\n                blocktype[chn] = Encoder_1.SHORT_TYPE;\n                if (gfc.blocktype_old[chn] == Encoder_1.NORM_TYPE) {\n                    gfc.blocktype_old[chn] = Encoder_1.START_TYPE;\n                }\n                if (gfc.blocktype_old[chn] == Encoder_1.STOP_TYPE)\n                    gfc.blocktype_old[chn] = Encoder_1.SHORT_TYPE;\n            }\n\n            blocktype_d[chn] = gfc.blocktype_old[chn];\n            // value returned to calling program\n            gfc.blocktype_old[chn] = blocktype[chn];\n            // save for next call to l3psy_anal\n        }\n    }\n\n    function NS_INTERP(x, y, r) {\n        /* was pow((x),(r))*pow((y),1-(r)) */\n        if (r >= 1.0) {\n            /* 99.7% of the time */\n            return x;\n        }\n        if (r <= 0.0)\n            return y;\n        if (y > 0.0) {\n            /* rest of the time */\n            return (Math.pow(x / y, r) * y);\n        }\n        /* never happens */\n        return 0.0;\n    }\n\n    /**\n     * these values are tuned only for 44.1kHz...\n     */\n    var regcoef_s = [11.8, 13.6, 17.2, 32, 46.5,\n        51.3, 57.5, 67.1, 71.5, 84.6, 97.6, 130,\n        /* 255.8 */\n    ];\n\n    function pecalc_s(mr, masking_lower) {\n        var pe_s = 1236.28 / 4;\n        for (var sb = 0; sb < Encoder_1.SBMAX_s - 1; sb++) {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                var thm = mr.thm.s[sb][sblock];\n                assert$3(sb < regcoef_s.length);\n                if (thm > 0.0) {\n                    var x = thm * masking_lower;\n                    var en = mr.en.s[sb][sblock];\n                    if (en > x) {\n                        if (en > x * 1e10) {\n                            pe_s += regcoef_s[sb] * (10.0 * LOG10);\n                        } else {\n                            assert$3(x > 0);\n                            pe_s += regcoef_s[sb] * Util$3.FAST_LOG10(en / x);\n                        }\n                    }\n                }\n            }\n        }\n\n        return pe_s;\n    }\n\n    /**\n     * these values are tuned only for 44.1kHz...\n     */\n    var regcoef_l = [6.8, 5.8, 5.8, 6.4, 6.5, 9.9,\n        12.1, 14.4, 15, 18.9, 21.6, 26.9, 34.2, 40.2, 46.8, 56.5,\n        60.7, 73.9, 85.7, 93.4, 126.1,\n        /* 241.3 */\n    ];\n\n    function pecalc_l(mr, masking_lower) {\n        var pe_l = 1124.23 / 4;\n        for (var sb = 0; sb < Encoder_1.SBMAX_l - 1; sb++) {\n            var thm = mr.thm.l[sb];\n            assert$3(sb < regcoef_l.length);\n            if (thm > 0.0) {\n                var x = thm * masking_lower;\n                var en = mr.en.l[sb];\n                if (en > x) {\n                    if (en > x * 1e10) {\n                        pe_l += regcoef_l[sb] * (10.0 * LOG10);\n                    } else {\n                        assert$3(x > 0);\n                        pe_l += regcoef_l[sb] * Util$3.FAST_LOG10(en / x);\n                    }\n                }\n            }\n        }\n        return pe_l;\n    }\n\n    function calc_energy(gfc, fftenergy, eb, max, avg) {\n        var b, j;\n\n        for (b = j = 0; b < gfc.npart_l; ++b) {\n            var ebb = 0, m = 0;\n            var i;\n            for (i = 0; i < gfc.numlines_l[b]; ++i, ++j) {\n                var el = fftenergy[j];\n                assert$3(el >= 0);\n                ebb += el;\n                if (m < el)\n                    m = el;\n            }\n            eb[b] = ebb;\n            max[b] = m;\n            avg[b] = ebb * gfc.rnumlines_l[b];\n            assert$3(gfc.rnumlines_l[b] >= 0);\n            assert$3(ebb >= 0);\n            assert$3(eb[b] >= 0);\n            assert$3(max[b] >= 0);\n            assert$3(avg[b] >= 0);\n        }\n    }\n\n    function calc_mask_index_l(gfc, max, avg, mask_idx) {\n        var last_tab_entry = tab.length - 1;\n        var b = 0;\n        var a = avg[b] + avg[b + 1];\n        assert$3(a >= 0);\n        if (a > 0.0) {\n            var m = max[b];\n            if (m < max[b + 1])\n                m = max[b + 1];\n            assert$3((gfc.numlines_l[b] + gfc.numlines_l[b + 1] - 1) > 0);\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_l[b] + gfc.numlines_l[b + 1] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n\n        for (b = 1; b < gfc.npart_l - 1; b++) {\n            a = avg[b - 1] + avg[b] + avg[b + 1];\n            assert$3(a >= 0);\n            if (a > 0.0) {\n                var m = max[b - 1];\n                if (m < max[b])\n                    m = max[b];\n                if (m < max[b + 1])\n                    m = max[b + 1];\n                assert$3((gfc.numlines_l[b - 1] + gfc.numlines_l[b] + gfc.numlines_l[b + 1] - 1) > 0);\n                a = 20.0\n                    * (m * 3.0 - a)\n                    / (a * (gfc.numlines_l[b - 1] + gfc.numlines_l[b]\n                    + gfc.numlines_l[b + 1] - 1));\n                var k = 0 | a;\n                if (k > last_tab_entry)\n                    k = last_tab_entry;\n                mask_idx[b] = k;\n            } else {\n                mask_idx[b] = 0;\n            }\n        }\n        assert$3(b > 0);\n        assert$3(b == gfc.npart_l - 1);\n\n        a = avg[b - 1] + avg[b];\n        assert$3(a >= 0);\n        if (a > 0.0) {\n            var m = max[b - 1];\n            if (m < max[b])\n                m = max[b];\n            assert$3((gfc.numlines_l[b - 1] + gfc.numlines_l[b] - 1) > 0);\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_l[b - 1] + gfc.numlines_l[b] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n        assert$3(b == (gfc.npart_l - 1));\n    }\n\n    var fircoef = [\n        -8.65163e-18 * 2, -0.00851586 * 2, -6.74764e-18 * 2, 0.0209036 * 2,\n        -3.36639e-17 * 2, -0.0438162 * 2, -1.54175e-17 * 2, 0.0931738 * 2,\n        -5.52212e-17 * 2, -0.313819 * 2\n    ];\n\n    this.L3psycho_anal_ns = function (gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, percep_entropy, percep_MS_entropy, energy, blocktype_d) {\n        /*\n         * to get a good cache performance, one has to think about the sequence,\n         * in which the variables are used.\n         */\n        var gfc = gfp.internal_flags;\n\n        /* fft and energy calculation */\n        var wsamp_L = new_float_n$3([2, Encoder_1.BLKSIZE]);\n        var wsamp_S = new_float_n$3([2, 3, Encoder_1.BLKSIZE_s]);\n\n        /* convolution */\n        var eb_l = new_float$3(Encoder_1.CBANDS + 1);\n        var eb_s = new_float$3(Encoder_1.CBANDS + 1);\n        var thr = new_float$3(Encoder_1.CBANDS + 2);\n\n        /* block type */\n        var blocktype = new_int$3(2), uselongblock = new_int$3(2);\n\n        /* usual variables like loop indices, etc.. */\n        var numchn, chn;\n        var b, i, j, k;\n        var sb, sblock;\n\n        /* variables used for --nspsytune */\n        var ns_hpfsmpl = new_float_n$3([2, 576]);\n        var pcfact;\n        var mask_idx_l = new_int$3(Encoder_1.CBANDS + 2), mask_idx_s = new_int$3(Encoder_1.CBANDS + 2);\n\n        Arrays$3.fill(mask_idx_s, 0);\n\n        numchn = gfc.channels_out;\n        /* chn=2 and 3 = Mid and Side channels */\n        if (gfp.mode == MPEGMode.JOINT_STEREO)\n            numchn = 4;\n\n        if (gfp.VBR == VbrMode$3.vbr_off)\n            pcfact = gfc.ResvMax == 0 ? 0 : ( gfc.ResvSize)\n            / gfc.ResvMax * 0.5;\n        else if (gfp.VBR == VbrMode$3.vbr_rh || gfp.VBR == VbrMode$3.vbr_mtrh\n            || gfp.VBR == VbrMode$3.vbr_mt) {\n            pcfact = 0.6;\n        } else\n            pcfact = 1.0;\n\n        /**********************************************************************\n         * Apply HPF of fs/4 to the input signal. This is used for attack\n         * detection / handling.\n         **********************************************************************/\n        /* Don't copy the input buffer into a temporary buffer */\n        /* unroll the loop 2 times */\n        for (chn = 0; chn < gfc.channels_out; chn++) {\n            /* apply high pass filter of fs/4 */\n            var firbuf = buffer[chn];\n            var firbufPos = bufPos + 576 - 350 - NSFIRLEN + 192;\n            assert$3(fircoef.length == ((NSFIRLEN - 1) / 2));\n            for (i = 0; i < 576; i++) {\n                var sum1, sum2;\n                sum1 = firbuf[firbufPos + i + 10];\n                sum2 = 0.0;\n                for (j = 0; j < ((NSFIRLEN - 1) / 2) - 1; j += 2) {\n                    sum1 += fircoef[j]\n                        * (firbuf[firbufPos + i + j] + firbuf[firbufPos + i\n                        + NSFIRLEN - j]);\n                    sum2 += fircoef[j + 1]\n                        * (firbuf[firbufPos + i + j + 1] + firbuf[firbufPos\n                        + i + NSFIRLEN - j - 1]);\n                }\n                ns_hpfsmpl[chn][i] = sum1 + sum2;\n            }\n            masking_ratio[gr_out][chn].en.assign(gfc.en[chn]);\n            masking_ratio[gr_out][chn].thm.assign(gfc.thm[chn]);\n            if (numchn > 2) {\n                /* MS maskings */\n                /* percep_MS_entropy [chn-2] = gfc . pe [chn]; */\n                masking_MS_ratio[gr_out][chn].en.assign(gfc.en[chn + 2]);\n                masking_MS_ratio[gr_out][chn].thm.assign(gfc.thm[chn + 2]);\n            }\n        }\n\n        for (chn = 0; chn < numchn; chn++) {\n            var wsamp_l;\n            var wsamp_s;\n            var en_subshort = new_float$3(12);\n            var en_short = [0, 0, 0, 0];\n            var attack_intensity = new_float$3(12);\n            var ns_uselongblock = 1;\n            var attackThreshold;\n            var max = new_float$3(Encoder_1.CBANDS), avg = new_float$3(Encoder_1.CBANDS);\n            var ns_attacks = [0, 0, 0, 0];\n            var fftenergy = new_float$3(Encoder_1.HBLKSIZE);\n            var fftenergy_s = new_float_n$3([3, Encoder_1.HBLKSIZE_s]);\n\n            /*\n             * rh 20040301: the following loops do access one off the limits so\n             * I increase the array dimensions by one and initialize the\n             * accessed values to zero\n             */\n            assert$3(gfc.npart_s <= Encoder_1.CBANDS);\n            assert$3(gfc.npart_l <= Encoder_1.CBANDS);\n\n            /***************************************************************\n             * determine the block type (window type)\n             ***************************************************************/\n            /* calculate energies of each sub-shortblocks */\n            for (i = 0; i < 3; i++) {\n                en_subshort[i] = gfc.nsPsy.last_en_subshort[chn][i + 6];\n                assert$3(gfc.nsPsy.last_en_subshort[chn][i + 4] > 0);\n                attack_intensity[i] = en_subshort[i]\n                    / gfc.nsPsy.last_en_subshort[chn][i + 4];\n                en_short[0] += en_subshort[i];\n            }\n\n            if (chn == 2) {\n                for (i = 0; i < 576; i++) {\n                    var l, r;\n                    l = ns_hpfsmpl[0][i];\n                    r = ns_hpfsmpl[1][i];\n                    ns_hpfsmpl[0][i] = l + r;\n                    ns_hpfsmpl[1][i] = l - r;\n                }\n            }\n            {\n                var pf = ns_hpfsmpl[chn & 1];\n                var pfPos = 0;\n                for (i = 0; i < 9; i++) {\n                    var pfe = pfPos + 576 / 9;\n                    var p = 1.;\n                    for (; pfPos < pfe; pfPos++)\n                        if (p < Math.abs(pf[pfPos]))\n                            p = Math.abs(pf[pfPos]);\n\n                    gfc.nsPsy.last_en_subshort[chn][i] = en_subshort[i + 3] = p;\n                    en_short[1 + i / 3] += p;\n                    if (p > en_subshort[i + 3 - 2]) {\n                        assert$3(en_subshort[i + 3 - 2] > 0);\n                        p = p / en_subshort[i + 3 - 2];\n                    } else if (en_subshort[i + 3 - 2] > p * 10.0) {\n                        assert$3(p > 0);\n                        p = en_subshort[i + 3 - 2] / (p * 10.0);\n                    } else\n                        p = 0.0;\n                    attack_intensity[i + 3] = p;\n                }\n            }\n\n            if (gfp.analysis) {\n                var x = attack_intensity[0];\n                for (i = 1; i < 12; i++)\n                    if (x < attack_intensity[i])\n                        x = attack_intensity[i];\n                gfc.pinfo.ers[gr_out][chn] = gfc.pinfo.ers_save[chn];\n                gfc.pinfo.ers_save[chn] = x;\n            }\n\n            /* compare energies between sub-shortblocks */\n            attackThreshold = (chn == 3) ? gfc.nsPsy.attackthre_s\n                : gfc.nsPsy.attackthre;\n            for (i = 0; i < 12; i++)\n                if (0 == ns_attacks[i / 3]\n                    && attack_intensity[i] > attackThreshold)\n                    ns_attacks[i / 3] = (i % 3) + 1;\n\n            /*\n             * should have energy change between short blocks, in order to avoid\n             * periodic signals\n             */\n            for (i = 1; i < 4; i++) {\n                var ratio;\n                if (en_short[i - 1] > en_short[i]) {\n                    assert$3(en_short[i] > 0);\n                    ratio = en_short[i - 1] / en_short[i];\n                } else {\n                    assert$3(en_short[i - 1] > 0);\n                    ratio = en_short[i] / en_short[i - 1];\n                }\n                if (ratio < 1.7) {\n                    ns_attacks[i] = 0;\n                    if (i == 1)\n                        ns_attacks[0] = 0;\n                }\n            }\n\n            if (ns_attacks[0] != 0 && gfc.nsPsy.lastAttacks[chn] != 0)\n                ns_attacks[0] = 0;\n\n            if (gfc.nsPsy.lastAttacks[chn] == 3\n                || (ns_attacks[0] + ns_attacks[1] + ns_attacks[2] + ns_attacks[3]) != 0) {\n                ns_uselongblock = 0;\n\n                if (ns_attacks[1] != 0 && ns_attacks[0] != 0)\n                    ns_attacks[1] = 0;\n                if (ns_attacks[2] != 0 && ns_attacks[1] != 0)\n                    ns_attacks[2] = 0;\n                if (ns_attacks[3] != 0 && ns_attacks[2] != 0)\n                    ns_attacks[3] = 0;\n            }\n\n            if (chn < 2) {\n                uselongblock[chn] = ns_uselongblock;\n            } else {\n                if (ns_uselongblock == 0) {\n                    uselongblock[0] = uselongblock[1] = 0;\n                }\n            }\n\n            /*\n             * there is a one granule delay. Copy maskings computed last call\n             * into masking_ratio to return to calling program.\n             */\n            energy[chn] = gfc.tot_ener[chn];\n\n            /*********************************************************************\n             * compute FFTs\n             *********************************************************************/\n            wsamp_s = wsamp_S;\n            wsamp_l = wsamp_L;\n            compute_ffts(gfp, fftenergy, fftenergy_s, wsamp_l, (chn & 1),\n                wsamp_s, (chn & 1), gr_out, chn, buffer, bufPos);\n\n            /*********************************************************************\n             * Calculate the energy and the tonality of each partition.\n             *********************************************************************/\n            calc_energy(gfc, fftenergy, eb_l, max, avg);\n            calc_mask_index_l(gfc, max, avg, mask_idx_l);\n            /* compute masking thresholds for short blocks */\n            for (sblock = 0; sblock < 3; sblock++) {\n                var enn, thmm;\n                compute_masking_s(gfp, fftenergy_s, eb_s, thr, chn, sblock);\n                convert_partition2scalefac_s(gfc, eb_s, thr, chn, sblock);\n                /**** short block pre-echo control ****/\n                for (sb = 0; sb < Encoder_1.SBMAX_s; sb++) {\n                    thmm = gfc.thm[chn].s[sb][sblock];\n\n                    thmm *= NS_PREECHO_ATT0;\n                    if (ns_attacks[sblock] >= 2 || ns_attacks[sblock + 1] == 1) {\n                        var idx = (sblock != 0) ? sblock - 1 : 2;\n                        var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                            NS_PREECHO_ATT1 * pcfact);\n                        thmm = Math.min(thmm, p);\n                    }\n\n                    if (ns_attacks[sblock] == 1) {\n                        var idx = (sblock != 0) ? sblock - 1 : 2;\n                        var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                            NS_PREECHO_ATT2 * pcfact);\n                        thmm = Math.min(thmm, p);\n                    } else if ((sblock != 0 && ns_attacks[sblock - 1] == 3)\n                        || (sblock == 0 && gfc.nsPsy.lastAttacks[chn] == 3)) {\n                        var idx = (sblock != 2) ? sblock + 1 : 0;\n                        var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                            NS_PREECHO_ATT2 * pcfact);\n                        thmm = Math.min(thmm, p);\n                    }\n\n                    /* pulse like signal detection for fatboy.wav and so on */\n                    enn = en_subshort[sblock * 3 + 3]\n                        + en_subshort[sblock * 3 + 4]\n                        + en_subshort[sblock * 3 + 5];\n                    if (en_subshort[sblock * 3 + 5] * 6 < enn) {\n                        thmm *= 0.5;\n                        if (en_subshort[sblock * 3 + 4] * 6 < enn)\n                            thmm *= 0.5;\n                    }\n\n                    gfc.thm[chn].s[sb][sblock] = thmm;\n                }\n            }\n            gfc.nsPsy.lastAttacks[chn] = ns_attacks[2];\n\n            /*********************************************************************\n             * convolve the partitioned energy and unpredictability with the\n             * spreading function, s3_l[b][k]\n             ********************************************************************/\n            k = 0;\n            {\n                for (b = 0; b < gfc.npart_l; b++) {\n                    /*\n                     * convolve the partitioned energy with the spreading\n                     * function\n                     */\n                    var kk = gfc.s3ind[b][0];\n                    var eb2 = eb_l[kk] * tab[mask_idx_l[kk]];\n                    var ecb = gfc.s3_ll[k++] * eb2;\n                    while (++kk <= gfc.s3ind[b][1]) {\n                        eb2 = eb_l[kk] * tab[mask_idx_l[kk]];\n                        ecb = mask_add(ecb, gfc.s3_ll[k++] * eb2, kk, kk - b,\n                            gfc, 0);\n                    }\n                    ecb *= 0.158489319246111;\n                    /* pow(10,-0.8) */\n\n                    /**** long block pre-echo control ****/\n                    /**\n                     * <PRE>\n                     * dont use long block pre-echo control if previous granule was\n                     * a short block.  This is to avoid the situation:\n                     * frame0:  quiet (very low masking)\n                     * frame1:  surge  (triggers short blocks)\n                     * frame2:  regular frame.  looks like pre-echo when compared to\n                     *          frame0, but all pre-echo was in frame1.\n                     * </PRE>\n                     */\n                    /*\n                     * chn=0,1 L and R channels\n                     *\n                     * chn=2,3 S and M channels.\n                     */\n\n                    if (gfc.blocktype_old[chn & 1] == Encoder_1.SHORT_TYPE)\n                        thr[b] = ecb;\n                    else\n                        thr[b] = NS_INTERP(\n                            Math.min(ecb, Math.min(rpelev\n                                * gfc.nb_1[chn][b], rpelev2\n                                * gfc.nb_2[chn][b])), ecb, pcfact);\n\n                    gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\n                    gfc.nb_1[chn][b] = ecb;\n                }\n            }\n            for (; b <= Encoder_1.CBANDS; ++b) {\n                eb_l[b] = 0;\n                thr[b] = 0;\n            }\n            /* compute masking thresholds for long blocks */\n            convert_partition2scalefac_l(gfc, eb_l, thr, chn);\n        }\n        /* end loop over chn */\n\n        if (gfp.mode == MPEGMode.STEREO || gfp.mode == MPEGMode.JOINT_STEREO) {\n            if (gfp.interChRatio > 0.0) {\n                calc_interchannel_masking(gfp, gfp.interChRatio);\n            }\n        }\n\n        if (gfp.mode == MPEGMode.JOINT_STEREO) {\n            var msfix;\n            msfix1(gfc);\n            msfix = gfp.msfix;\n            if (Math.abs(msfix) > 0.0)\n                ns_msfix(gfc, msfix, gfp.ATHlower * gfc.ATH.adjust);\n        }\n\n        /***************************************************************\n         * determine final block type\n         ***************************************************************/\n        block_type_set(gfp, uselongblock, blocktype_d, blocktype);\n\n        /*********************************************************************\n         * compute the value of PE to return ... no delay and advance\n         *********************************************************************/\n        for (chn = 0; chn < numchn; chn++) {\n            var ppe;\n            var ppePos = 0;\n            var type;\n            var mr;\n\n            if (chn > 1) {\n                ppe = percep_MS_entropy;\n                ppePos = -2;\n                type = Encoder_1.NORM_TYPE;\n                if (blocktype_d[0] == Encoder_1.SHORT_TYPE\n                    || blocktype_d[1] == Encoder_1.SHORT_TYPE)\n                    type = Encoder_1.SHORT_TYPE;\n                mr = masking_MS_ratio[gr_out][chn - 2];\n            } else {\n                ppe = percep_entropy;\n                ppePos = 0;\n                type = blocktype_d[chn];\n                mr = masking_ratio[gr_out][chn];\n            }\n\n            if (type == Encoder_1.SHORT_TYPE)\n                ppe[ppePos + chn] = pecalc_s(mr, gfc.masking_lower);\n            else\n                ppe[ppePos + chn] = pecalc_l(mr, gfc.masking_lower);\n\n            if (gfp.analysis)\n                gfc.pinfo.pe[gr_out][chn] = ppe[ppePos + chn];\n\n        }\n        return 0;\n    };\n\n    function vbrpsy_compute_fft_l(gfp, buffer, bufPos, chn, gr_out, fftenergy, wsamp_l, wsamp_lPos) {\n        var gfc = gfp.internal_flags;\n        if (chn < 2) {\n            fft.fft_long(gfc, wsamp_l[wsamp_lPos], chn, buffer, bufPos);\n        } else if (chn == 2) {\n            /* FFT data for mid and side channel is derived from L & R */\n            for (var j = Encoder_1.BLKSIZE - 1; j >= 0; --j) {\n                var l = wsamp_l[wsamp_lPos + 0][j];\n                var r = wsamp_l[wsamp_lPos + 1][j];\n                wsamp_l[wsamp_lPos + 0][j] = (l + r) * Util$3.SQRT2 * 0.5;\n                wsamp_l[wsamp_lPos + 1][j] = (l - r) * Util$3.SQRT2 * 0.5;\n            }\n        }\n\n        /*********************************************************************\n         * compute energies\n         *********************************************************************/\n        fftenergy[0] = NON_LINEAR_SCALE_ENERGY(wsamp_l[wsamp_lPos + 0][0]);\n        fftenergy[0] *= fftenergy[0];\n\n        for (var j = Encoder_1.BLKSIZE / 2 - 1; j >= 0; --j) {\n            var re = wsamp_l[wsamp_lPos + 0][Encoder_1.BLKSIZE / 2 - j];\n            var im = wsamp_l[wsamp_lPos + 0][Encoder_1.BLKSIZE / 2 + j];\n            fftenergy[Encoder_1.BLKSIZE / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                * re + im * im) * 0.5);\n        }\n        /* total energy */\n        {\n            var totalenergy = 0.0;\n            for (var j = 11; j < Encoder_1.HBLKSIZE; j++)\n                totalenergy += fftenergy[j];\n\n            gfc.tot_ener[chn] = totalenergy;\n        }\n\n        if (gfp.analysis) {\n            for (var j = 0; j < Encoder_1.HBLKSIZE; j++) {\n                gfc.pinfo.energy[gr_out][chn][j] = gfc.pinfo.energy_save[chn][j];\n                gfc.pinfo.energy_save[chn][j] = fftenergy[j];\n            }\n            gfc.pinfo.pe[gr_out][chn] = gfc.pe[chn];\n        }\n    }\n\n    function vbrpsy_compute_fft_s(gfp, buffer, bufPos, chn, sblock, fftenergy_s, wsamp_s, wsamp_sPos) {\n        var gfc = gfp.internal_flags;\n\n        if (sblock == 0 && chn < 2) {\n            fft.fft_short(gfc, wsamp_s[wsamp_sPos], chn, buffer, bufPos);\n        }\n        if (chn == 2) {\n            /* FFT data for mid and side channel is derived from L & R */\n            for (var j = Encoder_1.BLKSIZE_s - 1; j >= 0; --j) {\n                var l = wsamp_s[wsamp_sPos + 0][sblock][j];\n                var r = wsamp_s[wsamp_sPos + 1][sblock][j];\n                wsamp_s[wsamp_sPos + 0][sblock][j] = (l + r) * Util$3.SQRT2 * 0.5;\n                wsamp_s[wsamp_sPos + 1][sblock][j] = (l - r) * Util$3.SQRT2 * 0.5;\n            }\n        }\n\n        /*********************************************************************\n         * compute energies\n         *********************************************************************/\n        fftenergy_s[sblock][0] = wsamp_s[wsamp_sPos + 0][sblock][0];\n        fftenergy_s[sblock][0] *= fftenergy_s[sblock][0];\n        for (var j = Encoder_1.BLKSIZE_s / 2 - 1; j >= 0; --j) {\n            var re = wsamp_s[wsamp_sPos + 0][sblock][Encoder_1.BLKSIZE_s / 2 - j];\n            var im = wsamp_s[wsamp_sPos + 0][sblock][Encoder_1.BLKSIZE_s / 2 + j];\n            fftenergy_s[sblock][Encoder_1.BLKSIZE_s / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                * re + im * im) * 0.5);\n        }\n    }\n\n    /**\n     * compute loudness approximation (used for ATH auto-level adjustment)\n     */\n    function vbrpsy_compute_loudness_approximation_l(gfp, gr_out, chn, fftenergy) {\n        var gfc = gfp.internal_flags;\n        if (gfp.athaa_loudapprox == 2 && chn < 2) {\n            // no loudness for mid/side ch\n            gfc.loudness_sq[gr_out][chn] = gfc.loudness_sq_save[chn];\n            gfc.loudness_sq_save[chn] = psycho_loudness_approx(fftenergy, gfc);\n        }\n    }\n\n    var fircoef_ = [-8.65163e-18 * 2,\n        -0.00851586 * 2, -6.74764e-18 * 2, 0.0209036 * 2,\n        -3.36639e-17 * 2, -0.0438162 * 2, -1.54175e-17 * 2,\n        0.0931738 * 2, -5.52212e-17 * 2, -0.313819 * 2];\n\n    /**\n     * Apply HPF of fs/4 to the input signal. This is used for attack detection\n     * / handling.\n     */\n    function vbrpsy_attack_detection(gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, energy, sub_short_factor, ns_attacks, uselongblock) {\n        var ns_hpfsmpl = new_float_n$3([2, 576]);\n        var gfc = gfp.internal_flags;\n        var n_chn_out = gfc.channels_out;\n        /* chn=2 and 3 = Mid and Side channels */\n        var n_chn_psy = (gfp.mode == MPEGMode.JOINT_STEREO) ? 4 : n_chn_out;\n        /* Don't copy the input buffer into a temporary buffer */\n        /* unroll the loop 2 times */\n        for (var chn = 0; chn < n_chn_out; chn++) {\n            /* apply high pass filter of fs/4 */\n            firbuf = buffer[chn];\n            var firbufPos = bufPos + 576 - 350 - NSFIRLEN + 192;\n            assert$3(fircoef_.length == ((NSFIRLEN - 1) / 2));\n            for (var i = 0; i < 576; i++) {\n                var sum1, sum2;\n                sum1 = firbuf[firbufPos + i + 10];\n                sum2 = 0.0;\n                for (var j = 0; j < ((NSFIRLEN - 1) / 2) - 1; j += 2) {\n                    sum1 += fircoef_[j]\n                        * (firbuf[firbufPos + i + j] + firbuf[firbufPos + i\n                        + NSFIRLEN - j]);\n                    sum2 += fircoef_[j + 1]\n                        * (firbuf[firbufPos + i + j + 1] + firbuf[firbufPos\n                        + i + NSFIRLEN - j - 1]);\n                }\n                ns_hpfsmpl[chn][i] = sum1 + sum2;\n            }\n            masking_ratio[gr_out][chn].en.assign(gfc.en[chn]);\n            masking_ratio[gr_out][chn].thm.assign(gfc.thm[chn]);\n            if (n_chn_psy > 2) {\n                /* MS maskings */\n                /* percep_MS_entropy [chn-2] = gfc . pe [chn]; */\n                masking_MS_ratio[gr_out][chn].en.assign(gfc.en[chn + 2]);\n                masking_MS_ratio[gr_out][chn].thm.assign(gfc.thm[chn + 2]);\n            }\n        }\n        for (var chn = 0; chn < n_chn_psy; chn++) {\n            var attack_intensity = new_float$3(12);\n            var en_subshort = new_float$3(12);\n            var en_short = [0, 0, 0, 0];\n            var pf = ns_hpfsmpl[chn & 1];\n            var pfPos = 0;\n            var attackThreshold = (chn == 3) ? gfc.nsPsy.attackthre_s\n                : gfc.nsPsy.attackthre;\n            var ns_uselongblock = 1;\n\n            if (chn == 2) {\n                for (var i = 0, j = 576; j > 0; ++i, --j) {\n                    var l = ns_hpfsmpl[0][i];\n                    var r = ns_hpfsmpl[1][i];\n                    ns_hpfsmpl[0][i] = l + r;\n                    ns_hpfsmpl[1][i] = l - r;\n                }\n            }\n            /***************************************************************\n             * determine the block type (window type)\n             ***************************************************************/\n            /* calculate energies of each sub-shortblocks */\n            for (var i = 0; i < 3; i++) {\n                en_subshort[i] = gfc.nsPsy.last_en_subshort[chn][i + 6];\n                assert$3(gfc.nsPsy.last_en_subshort[chn][i + 4] > 0);\n                attack_intensity[i] = en_subshort[i]\n                    / gfc.nsPsy.last_en_subshort[chn][i + 4];\n                en_short[0] += en_subshort[i];\n            }\n\n            for (var i = 0; i < 9; i++) {\n                var pfe = pfPos + 576 / 9;\n                var p = 1.;\n                for (; pfPos < pfe; pfPos++)\n                    if (p < Math.abs(pf[pfPos]))\n                        p = Math.abs(pf[pfPos]);\n\n                gfc.nsPsy.last_en_subshort[chn][i] = en_subshort[i + 3] = p;\n                en_short[1 + i / 3] += p;\n                if (p > en_subshort[i + 3 - 2]) {\n                    assert$3(en_subshort[i + 3 - 2] > 0);\n                    p = p / en_subshort[i + 3 - 2];\n                } else if (en_subshort[i + 3 - 2] > p * 10.0) {\n                    assert$3(p > 0);\n                    p = en_subshort[i + 3 - 2] / (p * 10.0);\n                } else {\n                    p = 0.0;\n                }\n                attack_intensity[i + 3] = p;\n            }\n            /* pulse like signal detection for fatboy.wav and so on */\n            for (var i = 0; i < 3; ++i) {\n                var enn = en_subshort[i * 3 + 3]\n                    + en_subshort[i * 3 + 4] + en_subshort[i * 3 + 5];\n                var factor = 1.;\n                if (en_subshort[i * 3 + 5] * 6 < enn) {\n                    factor *= 0.5;\n                    if (en_subshort[i * 3 + 4] * 6 < enn) {\n                        factor *= 0.5;\n                    }\n                }\n                sub_short_factor[chn][i] = factor;\n            }\n\n            if (gfp.analysis) {\n                var x = attack_intensity[0];\n                for (var i = 1; i < 12; i++) {\n                    if (x < attack_intensity[i]) {\n                        x = attack_intensity[i];\n                    }\n                }\n                gfc.pinfo.ers[gr_out][chn] = gfc.pinfo.ers_save[chn];\n                gfc.pinfo.ers_save[chn] = x;\n            }\n\n            /* compare energies between sub-shortblocks */\n            for (var i = 0; i < 12; i++) {\n                if (0 == ns_attacks[chn][i / 3]\n                    && attack_intensity[i] > attackThreshold) {\n                    ns_attacks[chn][i / 3] = (i % 3) + 1;\n                }\n            }\n\n            /*\n             * should have energy change between short blocks, in order to avoid\n             * periodic signals\n             */\n            /* Good samples to show the effect are Trumpet test songs */\n            /*\n             * GB: tuned (1) to avoid too many short blocks for test sample\n             * TRUMPET\n             */\n            /*\n             * RH: tuned (2) to let enough short blocks through for test sample\n             * FSOL and SNAPS\n             */\n            for (var i = 1; i < 4; i++) {\n                var u = en_short[i - 1];\n                var v = en_short[i];\n                var m = Math.max(u, v);\n                if (m < 40000) { /* (2) */\n                    if (u < 1.7 * v && v < 1.7 * u) { /* (1) */\n                        if (i == 1 && ns_attacks[chn][0] <= ns_attacks[chn][i]) {\n                            ns_attacks[chn][0] = 0;\n                        }\n                        ns_attacks[chn][i] = 0;\n                    }\n                }\n            }\n\n            if (ns_attacks[chn][0] <= gfc.nsPsy.lastAttacks[chn]) {\n                ns_attacks[chn][0] = 0;\n            }\n\n            if (gfc.nsPsy.lastAttacks[chn] == 3\n                || (ns_attacks[chn][0] + ns_attacks[chn][1]\n                + ns_attacks[chn][2] + ns_attacks[chn][3]) != 0) {\n                ns_uselongblock = 0;\n\n                if (ns_attacks[chn][1] != 0 && ns_attacks[chn][0] != 0) {\n                    ns_attacks[chn][1] = 0;\n                }\n                if (ns_attacks[chn][2] != 0 && ns_attacks[chn][1] != 0) {\n                    ns_attacks[chn][2] = 0;\n                }\n                if (ns_attacks[chn][3] != 0 && ns_attacks[chn][2] != 0) {\n                    ns_attacks[chn][3] = 0;\n                }\n            }\n            if (chn < 2) {\n                uselongblock[chn] = ns_uselongblock;\n            } else {\n                if (ns_uselongblock == 0) {\n                    uselongblock[0] = uselongblock[1] = 0;\n                }\n            }\n\n            /*\n             * there is a one granule delay. Copy maskings computed last call\n             * into masking_ratio to return to calling program.\n             */\n            energy[chn] = gfc.tot_ener[chn];\n        }\n    }\n\n    function vbrpsy_skip_masking_s(gfc, chn, sblock) {\n        if (sblock == 0) {\n            for (var b = 0; b < gfc.npart_s; b++) {\n                gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\n                gfc.nb_s1[chn][b] = 0;\n            }\n        }\n    }\n\n    function vbrpsy_skip_masking_l(gfc, chn) {\n        for (var b = 0; b < gfc.npart_l; b++) {\n            gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\n            gfc.nb_1[chn][b] = 0;\n        }\n    }\n\n    function psyvbr_calc_mask_index_s(gfc, max, avg, mask_idx) {\n        var last_tab_entry = tab.length - 1;\n        var b = 0;\n        var a = avg[b] + avg[b + 1];\n        assert$3(a >= 0);\n        if (a > 0.0) {\n            var m = max[b];\n            if (m < max[b + 1])\n                m = max[b + 1];\n            assert$3((gfc.numlines_s[b] + gfc.numlines_s[b + 1] - 1) > 0);\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_s[b] + gfc.numlines_s[b + 1] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n\n        for (b = 1; b < gfc.npart_s - 1; b++) {\n            a = avg[b - 1] + avg[b] + avg[b + 1];\n            assert$3(b + 1 < gfc.npart_s);\n            assert$3(a >= 0);\n            if (a > 0.0) {\n                var m = max[b - 1];\n                if (m < max[b])\n                    m = max[b];\n                if (m < max[b + 1])\n                    m = max[b + 1];\n                assert$3((gfc.numlines_s[b - 1] + gfc.numlines_s[b] + gfc.numlines_s[b + 1] - 1) > 0);\n                a = 20.0\n                    * (m * 3.0 - a)\n                    / (a * (gfc.numlines_s[b - 1] + gfc.numlines_s[b]\n                    + gfc.numlines_s[b + 1] - 1));\n                var k = 0 | a;\n                if (k > last_tab_entry)\n                    k = last_tab_entry;\n                mask_idx[b] = k;\n            } else {\n                mask_idx[b] = 0;\n            }\n        }\n        assert$3(b > 0);\n        assert$3(b == gfc.npart_s - 1);\n\n        a = avg[b - 1] + avg[b];\n        assert$3(a >= 0);\n        if (a > 0.0) {\n            var m = max[b - 1];\n            if (m < max[b])\n                m = max[b];\n            assert$3((gfc.numlines_s[b - 1] + gfc.numlines_s[b] - 1) > 0);\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_s[b - 1] + gfc.numlines_s[b] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n        assert$3(b == (gfc.npart_s - 1));\n    }\n\n    function vbrpsy_compute_masking_s(gfp, fftenergy_s, eb, thr, chn, sblock) {\n        var gfc = gfp.internal_flags;\n        var max = new float[Encoder_1.CBANDS], avg = new_float$3(Encoder_1.CBANDS);\n        var i, j, b;\n        var mask_idx_s = new int[Encoder_1.CBANDS];\n\n        for (b = j = 0; b < gfc.npart_s; ++b) {\n            var ebb = 0, m = 0;\n            var n = gfc.numlines_s[b];\n            for (i = 0; i < n; ++i, ++j) {\n                var el = fftenergy_s[sblock][j];\n                ebb += el;\n                if (m < el)\n                    m = el;\n            }\n            eb[b] = ebb;\n            assert$3(ebb >= 0);\n            max[b] = m;\n            assert$3(n > 0);\n            avg[b] = ebb / n;\n            assert$3(avg[b] >= 0);\n        }\n        assert$3(b == gfc.npart_s);\n        assert$3(j == 129);\n        for (; b < Encoder_1.CBANDS; ++b) {\n            max[b] = 0;\n            avg[b] = 0;\n        }\n        psyvbr_calc_mask_index_s(gfc, max, avg, mask_idx_s);\n        for (j = b = 0; b < gfc.npart_s; b++) {\n            var kk = gfc.s3ind_s[b][0];\n            var last = gfc.s3ind_s[b][1];\n            var dd, dd_n;\n            var x, ecb, avg_mask;\n            dd = mask_idx_s[kk];\n            dd_n = 1;\n            ecb = gfc.s3_ss[j] * eb[kk] * tab[mask_idx_s[kk]];\n            ++j;\n            ++kk;\n            while (kk <= last) {\n                dd += mask_idx_s[kk];\n                dd_n += 1;\n                x = gfc.s3_ss[j] * eb[kk] * tab[mask_idx_s[kk]];\n                ecb = vbrpsy_mask_add(ecb, x, kk - b);\n                ++j;\n                ++kk;\n            }\n            dd = (1 + 2 * dd) / (2 * dd_n);\n            avg_mask = tab[dd] * 0.5;\n            ecb *= avg_mask;\n            thr[b] = ecb;\n            gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\n            gfc.nb_s1[chn][b] = ecb;\n            {\n                /*\n                 * if THR exceeds EB, the quantization routines will take the\n                 * difference from other bands. in case of strong tonal samples\n                 * (tonaltest.wav) this leads to heavy distortions. that's why\n                 * we limit THR here.\n                 */\n                x = max[b];\n                x *= gfc.minval_s[b];\n                x *= avg_mask;\n                if (thr[b] > x) {\n                    thr[b] = x;\n                }\n            }\n            if (gfc.masking_lower > 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n            if (thr[b] > eb[b]) {\n                thr[b] = eb[b];\n            }\n            if (gfc.masking_lower < 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n\n            assert$3(thr[b] >= 0);\n        }\n        for (; b < Encoder_1.CBANDS; ++b) {\n            eb[b] = 0;\n            thr[b] = 0;\n        }\n    }\n\n    function vbrpsy_compute_masking_l(gfc, fftenergy, eb_l, thr, chn) {\n        var max = new_float$3(Encoder_1.CBANDS), avg = new_float$3(Encoder_1.CBANDS);\n        var mask_idx_l = new_int$3(Encoder_1.CBANDS + 2);\n        var b;\n\n        /*********************************************************************\n         * Calculate the energy and the tonality of each partition.\n         *********************************************************************/\n        calc_energy(gfc, fftenergy, eb_l, max, avg);\n        calc_mask_index_l(gfc, max, avg, mask_idx_l);\n\n        /*********************************************************************\n         * convolve the partitioned energy and unpredictability with the\n         * spreading function, s3_l[b][k]\n         ********************************************************************/\n        var k = 0;\n        for (b = 0; b < gfc.npart_l; b++) {\n            var x, ecb, avg_mask, t;\n            /* convolve the partitioned energy with the spreading function */\n            var kk = gfc.s3ind[b][0];\n            var last = gfc.s3ind[b][1];\n            var dd = 0, dd_n = 0;\n            dd = mask_idx_l[kk];\n            dd_n += 1;\n            ecb = gfc.s3_ll[k] * eb_l[kk] * tab[mask_idx_l[kk]];\n            ++k;\n            ++kk;\n            while (kk <= last) {\n                dd += mask_idx_l[kk];\n                dd_n += 1;\n                x = gfc.s3_ll[k] * eb_l[kk] * tab[mask_idx_l[kk]];\n                t = vbrpsy_mask_add(ecb, x, kk - b);\n                ecb = t;\n                ++k;\n                ++kk;\n            }\n            dd = (1 + 2 * dd) / (2 * dd_n);\n            avg_mask = tab[dd] * 0.5;\n            ecb *= avg_mask;\n\n            /**** long block pre-echo control ****/\n            /**\n             * <PRE>\n             * dont use long block pre-echo control if previous granule was\n             * a short block.  This is to avoid the situation:\n             * frame0:  quiet (very low masking)\n             * frame1:  surge  (triggers short blocks)\n             * frame2:  regular frame.  looks like pre-echo when compared to\n             *          frame0, but all pre-echo was in frame1.\n             * </PRE>\n             */\n            /*\n             * chn=0,1 L and R channels chn=2,3 S and M channels.\n             */\n            if (gfc.blocktype_old[chn & 0x01] == Encoder_1.SHORT_TYPE) {\n                var ecb_limit = rpelev * gfc.nb_1[chn][b];\n                if (ecb_limit > 0) {\n                    thr[b] = Math.min(ecb, ecb_limit);\n                } else {\n                    /**\n                     * <PRE>\n                     * Robert 071209:\n                     * Because we don't calculate long block psy when we know a granule\n                     * should be of short blocks, we don't have any clue how the granule\n                     * before would have looked like as a long block. So we have to guess\n                     * a little bit for this END_TYPE block.\n                     * Most of the time we get away with this sloppyness. (fingers crossed :)\n                     * The speed increase is worth it.\n                     * </PRE>\n                     */\n                    thr[b] = Math.min(ecb, eb_l[b] * NS_PREECHO_ATT2);\n                }\n            } else {\n                var ecb_limit_2 = rpelev2 * gfc.nb_2[chn][b];\n                var ecb_limit_1 = rpelev * gfc.nb_1[chn][b];\n                var ecb_limit;\n                if (ecb_limit_2 <= 0) {\n                    ecb_limit_2 = ecb;\n                }\n                if (ecb_limit_1 <= 0) {\n                    ecb_limit_1 = ecb;\n                }\n                if (gfc.blocktype_old[chn & 0x01] == Encoder_1.NORM_TYPE) {\n                    ecb_limit = Math.min(ecb_limit_1, ecb_limit_2);\n                } else {\n                    ecb_limit = ecb_limit_1;\n                }\n                thr[b] = Math.min(ecb, ecb_limit);\n            }\n            gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\n            gfc.nb_1[chn][b] = ecb;\n            {\n                /*\n                 * if THR exceeds EB, the quantization routines will take the\n                 * difference from other bands. in case of strong tonal samples\n                 * (tonaltest.wav) this leads to heavy distortions. that's why\n                 * we limit THR here.\n                 */\n                x = max[b];\n                x *= gfc.minval_l[b];\n                x *= avg_mask;\n                if (thr[b] > x) {\n                    thr[b] = x;\n                }\n            }\n            if (gfc.masking_lower > 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n            if (thr[b] > eb_l[b]) {\n                thr[b] = eb_l[b];\n            }\n            if (gfc.masking_lower < 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n            assert$3(thr[b] >= 0);\n        }\n        for (; b < Encoder_1.CBANDS; ++b) {\n            eb_l[b] = 0;\n            thr[b] = 0;\n        }\n    }\n\n    function vbrpsy_compute_block_type(gfp, uselongblock) {\n        var gfc = gfp.internal_flags;\n\n        if (gfp.short_blocks == ShortBlock$3.short_block_coupled\n                /* force both channels to use the same block type */\n                /* this is necessary if the frame is to be encoded in ms_stereo. */\n                /* But even without ms_stereo, FhG does this */\n            && !(uselongblock[0] != 0 && uselongblock[1] != 0))\n            uselongblock[0] = uselongblock[1] = 0;\n\n        for (var chn = 0; chn < gfc.channels_out; chn++) {\n            /* disable short blocks */\n            if (gfp.short_blocks == ShortBlock$3.short_block_dispensed) {\n                uselongblock[chn] = 1;\n            }\n            if (gfp.short_blocks == ShortBlock$3.short_block_forced) {\n                uselongblock[chn] = 0;\n            }\n        }\n    }\n\n    function vbrpsy_apply_block_type(gfp, uselongblock, blocktype_d) {\n        var gfc = gfp.internal_flags;\n\n        /*\n         * update the blocktype of the previous granule, since it depends on\n         * what happend in this granule\n         */\n        for (var chn = 0; chn < gfc.channels_out; chn++) {\n            var blocktype = Encoder_1.NORM_TYPE;\n            /* disable short blocks */\n\n            if (uselongblock[chn] != 0) {\n                /* no attack : use long blocks */\n                assert$3(gfc.blocktype_old[chn] != Encoder_1.START_TYPE);\n                if (gfc.blocktype_old[chn] == Encoder_1.SHORT_TYPE)\n                    blocktype = Encoder_1.STOP_TYPE;\n            } else {\n                /* attack : use short blocks */\n                blocktype = Encoder_1.SHORT_TYPE;\n                if (gfc.blocktype_old[chn] == Encoder_1.NORM_TYPE) {\n                    gfc.blocktype_old[chn] = Encoder_1.START_TYPE;\n                }\n                if (gfc.blocktype_old[chn] == Encoder_1.STOP_TYPE)\n                    gfc.blocktype_old[chn] = Encoder_1.SHORT_TYPE;\n            }\n\n            blocktype_d[chn] = gfc.blocktype_old[chn];\n            // value returned to calling program\n            gfc.blocktype_old[chn] = blocktype;\n            // save for next call to l3psy_anal\n        }\n    }\n\n    /**\n     * compute M/S thresholds from Johnston & Ferreira 1992 ICASSP paper\n     */\n    function vbrpsy_compute_MS_thresholds(eb, thr, cb_mld, ath_cb, athadjust, msfix, n) {\n        var msfix2 = msfix * 2;\n        var athlower = msfix > 0 ? Math.pow(10, athadjust) : 1;\n        var rside, rmid;\n        for (var b = 0; b < n; ++b) {\n            var ebM = eb[2][b];\n            var ebS = eb[3][b];\n            var thmL = thr[0][b];\n            var thmR = thr[1][b];\n            var thmM = thr[2][b];\n            var thmS = thr[3][b];\n\n            /* use this fix if L & R masking differs by 2db or less */\n            if (thmL <= 1.58 * thmR && thmR <= 1.58 * thmL) {\n                var mld_m = cb_mld[b] * ebS;\n                var mld_s = cb_mld[b] * ebM;\n                rmid = Math.max(thmM, Math.min(thmS, mld_m));\n                rside = Math.max(thmS, Math.min(thmM, mld_s));\n            } else {\n                rmid = thmM;\n                rside = thmS;\n            }\n            if (msfix > 0) {\n                /***************************************************************/\n                /* Adjust M/S maskings if user set \"msfix\" */\n                /***************************************************************/\n                /* Naoki Shibata 2000 */\n                var thmLR, thmMS;\n                var ath = ath_cb[b] * athlower;\n                thmLR = Math.min(Math.max(thmL, ath), Math.max(thmR, ath));\n                thmM = Math.max(rmid, ath);\n                thmS = Math.max(rside, ath);\n                thmMS = thmM + thmS;\n                if (thmMS > 0 && (thmLR * msfix2) < thmMS) {\n                    var f = thmLR * msfix2 / thmMS;\n                    thmM *= f;\n                    thmS *= f;\n                    assert$3(thmMS > 0);\n                }\n                rmid = Math.min(thmM, rmid);\n                rside = Math.min(thmS, rside);\n            }\n            if (rmid > ebM) {\n                rmid = ebM;\n            }\n            if (rside > ebS) {\n                rside = ebS;\n            }\n            thr[2][b] = rmid;\n            thr[3][b] = rside;\n        }\n    }\n\n    this.L3psycho_anal_vbr = function (gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, percep_entropy, percep_MS_entropy, energy, blocktype_d) {\n        var gfc = gfp.internal_flags;\n\n        /* fft and energy calculation */\n        var wsamp_l;\n        var wsamp_s;\n        var fftenergy = new_float$3(Encoder_1.HBLKSIZE);\n        var fftenergy_s = new_float_n$3([3, Encoder_1.HBLKSIZE_s]);\n        var wsamp_L = new_float_n$3([2, Encoder_1.BLKSIZE]);\n        var wsamp_S = new_float_n$3([2, 3, Encoder_1.BLKSIZE_s]);\n        var eb = new_float_n$3([4, Encoder_1.CBANDS]), thr = new_float_n$3([4, Encoder_1.CBANDS]);\n        var sub_short_factor = new_float_n$3([4, 3]);\n        var pcfact = 0.6;\n\n        /* block type */\n        var ns_attacks = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0],\n            [0, 0, 0, 0]];\n        var uselongblock = new_int$3(2);\n\n        /* usual variables like loop indices, etc.. */\n\n        /* chn=2 and 3 = Mid and Side channels */\n        var n_chn_psy = (gfp.mode == MPEGMode.JOINT_STEREO) ? 4\n            : gfc.channels_out;\n\n        vbrpsy_attack_detection(gfp, buffer, bufPos, gr_out, masking_ratio,\n            masking_MS_ratio, energy, sub_short_factor, ns_attacks,\n            uselongblock);\n\n        vbrpsy_compute_block_type(gfp, uselongblock);\n\n        /* LONG BLOCK CASE */\n        {\n            for (var chn = 0; chn < n_chn_psy; chn++) {\n                var ch01 = chn & 0x01;\n                wsamp_l = wsamp_L;\n                vbrpsy_compute_fft_l(gfp, buffer, bufPos, chn, gr_out,\n                    fftenergy, wsamp_l, ch01);\n\n                vbrpsy_compute_loudness_approximation_l(gfp, gr_out, chn,\n                    fftenergy);\n\n                if (uselongblock[ch01] != 0) {\n                    vbrpsy_compute_masking_l(gfc, fftenergy, eb[chn], thr[chn],\n                        chn);\n                } else {\n                    vbrpsy_skip_masking_l(gfc, chn);\n                }\n            }\n            if ((uselongblock[0] + uselongblock[1]) == 2) {\n                /* M/S channel */\n                if (gfp.mode == MPEGMode.JOINT_STEREO) {\n                    vbrpsy_compute_MS_thresholds(eb, thr, gfc.mld_cb_l,\n                        gfc.ATH.cb_l, gfp.ATHlower * gfc.ATH.adjust,\n                        gfp.msfix, gfc.npart_l);\n                }\n            }\n            /* TODO: apply adaptive ATH masking here ?? */\n            for (var chn = 0; chn < n_chn_psy; chn++) {\n                var ch01 = chn & 0x01;\n                if (uselongblock[ch01] != 0) {\n                    convert_partition2scalefac_l(gfc, eb[chn], thr[chn], chn);\n                }\n            }\n        }\n\n        /* SHORT BLOCKS CASE */\n        {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                for (var chn = 0; chn < n_chn_psy; ++chn) {\n                    var ch01 = chn & 0x01;\n\n                    if (uselongblock[ch01] != 0) {\n                        vbrpsy_skip_masking_s(gfc, chn, sblock);\n                    } else {\n                        /* compute masking thresholds for short blocks */\n                        wsamp_s = wsamp_S;\n                        vbrpsy_compute_fft_s(gfp, buffer, bufPos, chn, sblock,\n                            fftenergy_s, wsamp_s, ch01);\n                        vbrpsy_compute_masking_s(gfp, fftenergy_s, eb[chn],\n                            thr[chn], chn, sblock);\n                    }\n                }\n                if ((uselongblock[0] + uselongblock[1]) == 0) {\n                    /* M/S channel */\n                    if (gfp.mode == MPEGMode.JOINT_STEREO) {\n                        vbrpsy_compute_MS_thresholds(eb, thr, gfc.mld_cb_s,\n                            gfc.ATH.cb_s, gfp.ATHlower * gfc.ATH.adjust,\n                            gfp.msfix, gfc.npart_s);\n                    }\n                    /* L/R channel */\n                }\n                /* TODO: apply adaptive ATH masking here ?? */\n                for (var chn = 0; chn < n_chn_psy; ++chn) {\n                    var ch01 = chn & 0x01;\n                    if (0 == uselongblock[ch01]) {\n                        convert_partition2scalefac_s(gfc, eb[chn], thr[chn],\n                            chn, sblock);\n                    }\n                }\n            }\n\n            /**** short block pre-echo control ****/\n            for (var chn = 0; chn < n_chn_psy; chn++) {\n                var ch01 = chn & 0x01;\n\n                if (uselongblock[ch01] != 0) {\n                    continue;\n                }\n                for (var sb = 0; sb < Encoder_1.SBMAX_s; sb++) {\n                    var new_thmm = new_float$3(3);\n                    for (var sblock = 0; sblock < 3; sblock++) {\n                        var thmm = gfc.thm[chn].s[sb][sblock];\n                        thmm *= NS_PREECHO_ATT0;\n\n                        if (ns_attacks[chn][sblock] >= 2\n                            || ns_attacks[chn][sblock + 1] == 1) {\n                            var idx = (sblock != 0) ? sblock - 1 : 2;\n                            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                                NS_PREECHO_ATT1 * pcfact);\n                            thmm = Math.min(thmm, p);\n                        } else if (ns_attacks[chn][sblock] == 1) {\n                            var idx = (sblock != 0) ? sblock - 1 : 2;\n                            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                                NS_PREECHO_ATT2 * pcfact);\n                            thmm = Math.min(thmm, p);\n                        } else if ((sblock != 0 && ns_attacks[chn][sblock - 1] == 3)\n                            || (sblock == 0 && gfc.nsPsy.lastAttacks[chn] == 3)) {\n                            var idx = (sblock != 2) ? sblock + 1 : 0;\n                            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                                NS_PREECHO_ATT2 * pcfact);\n                            thmm = Math.min(thmm, p);\n                        }\n\n                        /* pulse like signal detection for fatboy.wav and so on */\n                        thmm *= sub_short_factor[chn][sblock];\n\n                        new_thmm[sblock] = thmm;\n                    }\n                    for (var sblock = 0; sblock < 3; sblock++) {\n                        gfc.thm[chn].s[sb][sblock] = new_thmm[sblock];\n                    }\n                }\n            }\n        }\n        for (var chn = 0; chn < n_chn_psy; chn++) {\n            gfc.nsPsy.lastAttacks[chn] = ns_attacks[chn][2];\n        }\n\n        /***************************************************************\n         * determine final block type\n         ***************************************************************/\n        vbrpsy_apply_block_type(gfp, uselongblock, blocktype_d);\n\n        /*********************************************************************\n         * compute the value of PE to return ... no delay and advance\n         *********************************************************************/\n        for (var chn = 0; chn < n_chn_psy; chn++) {\n            var ppe;\n            var ppePos;\n            var type;\n            var mr;\n\n            if (chn > 1) {\n                ppe = percep_MS_entropy;\n                ppePos = -2;\n                type = Encoder_1.NORM_TYPE;\n                if (blocktype_d[0] == Encoder_1.SHORT_TYPE\n                    || blocktype_d[1] == Encoder_1.SHORT_TYPE)\n                    type = Encoder_1.SHORT_TYPE;\n                mr = masking_MS_ratio[gr_out][chn - 2];\n            } else {\n                ppe = percep_entropy;\n                ppePos = 0;\n                type = blocktype_d[chn];\n                mr = masking_ratio[gr_out][chn];\n            }\n\n            if (type == Encoder_1.SHORT_TYPE) {\n                ppe[ppePos + chn] = pecalc_s(mr, gfc.masking_lower);\n            } else {\n                ppe[ppePos + chn] = pecalc_l(mr, gfc.masking_lower);\n            }\n\n            if (gfp.analysis) {\n                gfc.pinfo.pe[gr_out][chn] = ppe[ppePos + chn];\n            }\n        }\n        return 0;\n    };\n\n    function s3_func_x(bark, hf_slope) {\n        var tempx = bark, tempy;\n\n        if (tempx >= 0) {\n            tempy = -tempx * 27;\n        } else {\n            tempy = tempx * hf_slope;\n        }\n        if (tempy <= -72.0) {\n            return 0;\n        }\n        return Math.exp(tempy * LN_TO_LOG10);\n    }\n\n    function norm_s3_func_x(hf_slope) {\n        var lim_a = 0, lim_b = 0;\n        {\n            var x = 0, l, h;\n            for (x = 0; s3_func_x(x, hf_slope) > 1e-20; x -= 1)\n                ;\n            l = x;\n            h = 0;\n            while (Math.abs(h - l) > 1e-12) {\n                x = (h + l) / 2;\n                if (s3_func_x(x, hf_slope) > 0) {\n                    h = x;\n                } else {\n                    l = x;\n                }\n            }\n            lim_a = l;\n        }\n        {\n            var x = 0, l, h;\n            for (x = 0; s3_func_x(x, hf_slope) > 1e-20; x += 1)\n                ;\n            l = 0;\n            h = x;\n            while (Math.abs(h - l) > 1e-12) {\n                x = (h + l) / 2;\n                if (s3_func_x(x, hf_slope) > 0) {\n                    l = x;\n                } else {\n                    h = x;\n                }\n            }\n            lim_b = h;\n        }\n        {\n            var sum = 0;\n            var m = 1000;\n            var i;\n            for (i = 0; i <= m; ++i) {\n                var x = lim_a + i * (lim_b - lim_a) / m;\n                var y = s3_func_x(x, hf_slope);\n                sum += y;\n            }\n            {\n                var norm = (m + 1) / (sum * (lim_b - lim_a));\n                /* printf( \"norm = %lf\\n\",norm); */\n                return norm;\n            }\n        }\n    }\n\n    /**\n     *   The spreading function.  Values returned in units of energy\n     */\n    function s3_func(bark) {\n        var tempx, x, tempy, temp;\n        tempx = bark;\n        if (tempx >= 0)\n            tempx *= 3;\n        else\n            tempx *= 1.5;\n\n        if (tempx >= 0.5 && tempx <= 2.5) {\n            temp = tempx - 0.5;\n            x = 8.0 * (temp * temp - 2.0 * temp);\n        } else\n            x = 0.0;\n        tempx += 0.474;\n        tempy = 15.811389 + 7.5 * tempx - 17.5\n            * Math.sqrt(1.0 + tempx * tempx);\n\n        if (tempy <= -60.0)\n            return 0.0;\n\n        tempx = Math.exp((x + tempy) * LN_TO_LOG10);\n\n        /**\n         * <PRE>\n         * Normalization.  The spreading function should be normalized so that:\n         * +inf\n         * /\n         * |  s3 [ bark ]  d(bark)   =  1\n         * /\n         * -inf\n         * </PRE>\n         */\n        tempx /= .6609193;\n        return tempx;\n    }\n\n    /**\n     * see for example \"Zwicker: Psychoakustik, 1982; ISBN 3-540-11401-7\n     */\n    function freq2bark(freq) {\n        /* input: freq in hz output: barks */\n        if (freq < 0)\n            freq = 0;\n        freq = freq * 0.001;\n        return 13.0 * Math.atan(.76 * freq) + 3.5\n            * Math.atan(freq * freq / (7.5 * 7.5));\n    }\n\n    function init_numline(numlines, bo, bm, bval, bval_width, mld, bo_w, sfreq, blksize, scalepos, deltafreq, sbmax) {\n        var b_frq = new_float$3(Encoder_1.CBANDS + 1);\n        var sample_freq_frac = sfreq / (sbmax > 15 ? 2 * 576 : 2 * 192);\n        var partition = new_int$3(Encoder_1.HBLKSIZE);\n        var i;\n        sfreq /= blksize;\n        var j = 0;\n        var ni = 0;\n        /* compute numlines, the number of spectral lines in each partition band */\n        /* each partition band should be about DELBARK wide. */\n        for (i = 0; i < Encoder_1.CBANDS; i++) {\n            var bark1;\n            var j2;\n            bark1 = freq2bark(sfreq * j);\n\n            b_frq[i] = sfreq * j;\n\n            for (j2 = j; freq2bark(sfreq * j2) - bark1 < DELBARK\n            && j2 <= blksize / 2; j2++)\n                ;\n\n            numlines[i] = j2 - j;\n            ni = i + 1;\n\n            while (j < j2) {\n                assert$3(j < Encoder_1.HBLKSIZE);\n                partition[j++] = i;\n            }\n            if (j > blksize / 2) {\n                j = blksize / 2;\n                ++i;\n                break;\n            }\n        }\n        assert$3(i < Encoder_1.CBANDS);\n        b_frq[i] = sfreq * j;\n\n        for (var sfb = 0; sfb < sbmax; sfb++) {\n            var i1, i2, start, end;\n            var arg;\n            start = scalepos[sfb];\n            end = scalepos[sfb + 1];\n\n            i1 = 0 | Math.floor(.5 + deltafreq * (start - .5));\n            if (i1 < 0)\n                i1 = 0;\n            i2 = 0 | Math.floor(.5 + deltafreq * (end - .5));\n\n            if (i2 > blksize / 2)\n                i2 = blksize / 2;\n\n            bm[sfb] = (partition[i1] + partition[i2]) / 2;\n            bo[sfb] = partition[i2];\n            var f_tmp = sample_freq_frac * end;\n            /*\n             * calculate how much of this band belongs to current scalefactor\n             * band\n             */\n            bo_w[sfb] = (f_tmp - b_frq[bo[sfb]])\n                / (b_frq[bo[sfb] + 1] - b_frq[bo[sfb]]);\n            if (bo_w[sfb] < 0) {\n                bo_w[sfb] = 0;\n            } else {\n                if (bo_w[sfb] > 1) {\n                    bo_w[sfb] = 1;\n                }\n            }\n            /* setup stereo demasking thresholds */\n            /* formula reverse enginerred from plot in paper */\n            arg = freq2bark(sfreq * scalepos[sfb] * deltafreq);\n            arg = ( Math.min(arg, 15.5) / 15.5);\n\n            mld[sfb] = Math.pow(10.0,\n                1.25 * (1 - Math.cos(Math.PI * arg)) - 2.5);\n        }\n\n        /* compute bark values of each critical band */\n        j = 0;\n        for (var k = 0; k < ni; k++) {\n            var w = numlines[k];\n            var bark1, bark2;\n\n            bark1 = freq2bark(sfreq * (j));\n            bark2 = freq2bark(sfreq * (j + w - 1));\n            bval[k] = .5 * (bark1 + bark2);\n\n            bark1 = freq2bark(sfreq * (j - .5));\n            bark2 = freq2bark(sfreq * (j + w - .5));\n            bval_width[k] = bark2 - bark1;\n            j += w;\n        }\n\n        return ni;\n    }\n\n    function init_s3_values(s3ind, npart, bval, bval_width, norm, use_old_s3) {\n        var s3 = new_float_n$3([Encoder_1.CBANDS, Encoder_1.CBANDS]);\n        /*\n         * The s3 array is not linear in the bark scale.\n         *\n         * bval[x] should be used to get the bark value.\n         */\n        var j;\n        var numberOfNoneZero = 0;\n\n        /**\n         * <PRE>\n         * s[i][j], the value of the spreading function,\n         * centered at band j (masker), for band i (maskee)\n         *\n         * i.e.: sum over j to spread into signal barkval=i\n         * NOTE: i and j are used opposite as in the ISO docs\n         * </PRE>\n         */\n        if (use_old_s3) {\n            for (var i = 0; i < npart; i++) {\n                for (j = 0; j < npart; j++) {\n                    var v = s3_func(bval[i] - bval[j]) * bval_width[j];\n                    s3[i][j] = v * norm[i];\n                }\n            }\n        } else {\n            for (j = 0; j < npart; j++) {\n                var hf_slope = 15 + Math.min(21 / bval[j], 12);\n                var s3_x_norm = norm_s3_func_x(hf_slope);\n                for (var i = 0; i < npart; i++) {\n                    var v = s3_x_norm\n                        * s3_func_x(bval[i] - bval[j], hf_slope)\n                        * bval_width[j];\n                    s3[i][j] = v * norm[i];\n                }\n            }\n        }\n        for (var i = 0; i < npart; i++) {\n            for (j = 0; j < npart; j++) {\n                if (s3[i][j] > 0.0)\n                    break;\n            }\n            s3ind[i][0] = j;\n\n            for (j = npart - 1; j > 0; j--) {\n                if (s3[i][j] > 0.0)\n                    break;\n            }\n            s3ind[i][1] = j;\n            numberOfNoneZero += (s3ind[i][1] - s3ind[i][0] + 1);\n        }\n\n        var p = new_float$3(numberOfNoneZero);\n        var k = 0;\n        for (var i = 0; i < npart; i++)\n            for (j = s3ind[i][0]; j <= s3ind[i][1]; j++)\n                p[k++] = s3[i][j];\n\n        return p;\n    }\n\n    function stereo_demask(f) {\n        /* setup stereo demasking thresholds */\n        /* formula reverse enginerred from plot in paper */\n        var arg = freq2bark(f);\n        arg = (Math.min(arg, 15.5) / 15.5);\n\n        return Math.pow(10.0,\n            1.25 * (1 - Math.cos(Math.PI * arg)) - 2.5);\n    }\n\n    /**\n     * NOTE: the bitrate reduction from the inter-channel masking effect is low\n     * compared to the chance of getting annyoing artefacts. L3psycho_anal_vbr\n     * does not use this feature. (Robert 071216)\n     */\n    this.psymodel_init = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var i;\n        var useOldS3 = true;\n        var bvl_a = 13, bvl_b = 24;\n        var snr_l_a = 0, snr_l_b = 0;\n        var snr_s_a = -8.25, snr_s_b = -4.5;\n        var bval = new_float$3(Encoder_1.CBANDS);\n        var bval_width = new_float$3(Encoder_1.CBANDS);\n        var norm = new_float$3(Encoder_1.CBANDS);\n        var sfreq = gfp.out_samplerate;\n\n        switch (gfp.experimentalZ) {\n            default:\n            case 0:\n                useOldS3 = true;\n                break;\n            case 1:\n                useOldS3 = (gfp.VBR == VbrMode$3.vbr_mtrh || gfp.VBR == VbrMode$3.vbr_mt) ? false\n                    : true;\n                break;\n            case 2:\n                useOldS3 = false;\n                break;\n            case 3:\n                bvl_a = 8;\n                snr_l_a = -1.75;\n                snr_l_b = -0.0125;\n                snr_s_a = -8.25;\n                snr_s_b = -2.25;\n                break;\n        }\n        gfc.ms_ener_ratio_old = .25;\n        gfc.blocktype_old[0] = gfc.blocktype_old[1] = Encoder_1.NORM_TYPE;\n        // the vbr header is long blocks\n\n        for (i = 0; i < 4; ++i) {\n            for (var j = 0; j < Encoder_1.CBANDS; ++j) {\n                gfc.nb_1[i][j] = 1e20;\n                gfc.nb_2[i][j] = 1e20;\n                gfc.nb_s1[i][j] = gfc.nb_s2[i][j] = 1.0;\n            }\n            for (var sb = 0; sb < Encoder_1.SBMAX_l; sb++) {\n                gfc.en[i].l[sb] = 1e20;\n                gfc.thm[i].l[sb] = 1e20;\n            }\n            for (var j = 0; j < 3; ++j) {\n                for (var sb = 0; sb < Encoder_1.SBMAX_s; sb++) {\n                    gfc.en[i].s[sb][j] = 1e20;\n                    gfc.thm[i].s[sb][j] = 1e20;\n                }\n                gfc.nsPsy.lastAttacks[i] = 0;\n            }\n            for (var j = 0; j < 9; j++)\n                gfc.nsPsy.last_en_subshort[i][j] = 10.;\n        }\n\n        /* init. for loudness approx. -jd 2001 mar 27 */\n        gfc.loudness_sq_save[0] = gfc.loudness_sq_save[1] = 0.0;\n\n        /*************************************************************************\n         * now compute the psychoacoustic model specific constants\n         ************************************************************************/\n        /* compute numlines, bo, bm, bval, bval_width, mld */\n\n        gfc.npart_l = init_numline(gfc.numlines_l, gfc.bo_l, gfc.bm_l, bval,\n            bval_width, gfc.mld_l, gfc.PSY.bo_l_weight, sfreq,\n            Encoder_1.BLKSIZE, gfc.scalefac_band.l, Encoder_1.BLKSIZE\n            / (2.0 * 576), Encoder_1.SBMAX_l);\n        assert$3(gfc.npart_l < Encoder_1.CBANDS);\n        /* compute the spreading function */\n        for (i = 0; i < gfc.npart_l; i++) {\n            var snr = snr_l_a;\n            if (bval[i] >= bvl_a) {\n                snr = snr_l_b * (bval[i] - bvl_a) / (bvl_b - bvl_a) + snr_l_a\n                    * (bvl_b - bval[i]) / (bvl_b - bvl_a);\n            }\n            norm[i] = Math.pow(10.0, snr / 10.0);\n            if (gfc.numlines_l[i] > 0) {\n                gfc.rnumlines_l[i] = 1.0 / gfc.numlines_l[i];\n            } else {\n                gfc.rnumlines_l[i] = 0;\n            }\n        }\n        gfc.s3_ll = init_s3_values(gfc.s3ind, gfc.npart_l, bval, bval_width,\n            norm, useOldS3);\n\n        /* compute long block specific values, ATH and MINVAL */\n        var j = 0;\n        for (i = 0; i < gfc.npart_l; i++) {\n            var x;\n\n            /* ATH */\n            x = Float$3.MAX_VALUE;\n            for (var k = 0; k < gfc.numlines_l[i]; k++, j++) {\n                var freq = sfreq * j / (1000.0 * Encoder_1.BLKSIZE);\n                var level;\n                /*\n                 * ATH below 100 Hz constant, not further climbing\n                 */\n                level = this.ATHformula(freq * 1000, gfp) - 20;\n                // scale to FFT units; returned value is in dB\n                level = Math.pow(10., 0.1 * level);\n                // convert from dB . energy\n                level *= gfc.numlines_l[i];\n                if (x > level)\n                    x = level;\n            }\n            gfc.ATH.cb_l[i] = x;\n\n            /*\n             * MINVAL. For low freq, the strength of the masking is limited by\n             * minval this is an ISO MPEG1 thing, dont know if it is really\n             * needed\n             */\n            /*\n             * FIXME: it does work to reduce low-freq problems in S53-Wind-Sax\n             * and lead-voice samples, but introduces some 3 kbps bit bloat too.\n             * TODO: Further refinement of the shape of this hack.\n             */\n            x = -20 + bval[i] * 20 / 10;\n            if (x > 6) {\n                x = 100;\n            }\n            if (x < -15) {\n                x = -15;\n            }\n            x -= 8.;\n            gfc.minval_l[i] = (Math.pow(10.0, x / 10.) * gfc.numlines_l[i]);\n        }\n\n        /************************************************************************\n         * do the same things for short blocks\n         ************************************************************************/\n        gfc.npart_s = init_numline(gfc.numlines_s, gfc.bo_s, gfc.bm_s, bval,\n            bval_width, gfc.mld_s, gfc.PSY.bo_s_weight, sfreq,\n            Encoder_1.BLKSIZE_s, gfc.scalefac_band.s, Encoder_1.BLKSIZE_s\n            / (2.0 * 192), Encoder_1.SBMAX_s);\n        assert$3(gfc.npart_s < Encoder_1.CBANDS);\n\n        /* SNR formula. short block is normalized by SNR. is it still right ? */\n        j = 0;\n        for (i = 0; i < gfc.npart_s; i++) {\n            var x;\n            var snr = snr_s_a;\n            if (bval[i] >= bvl_a) {\n                snr = snr_s_b * (bval[i] - bvl_a) / (bvl_b - bvl_a) + snr_s_a\n                    * (bvl_b - bval[i]) / (bvl_b - bvl_a);\n            }\n            norm[i] = Math.pow(10.0, snr / 10.0);\n\n            /* ATH */\n            x = Float$3.MAX_VALUE;\n            for (var k = 0; k < gfc.numlines_s[i]; k++, j++) {\n                var freq = sfreq * j / (1000.0 * Encoder_1.BLKSIZE_s);\n                var level;\n                /* freq = Min(.1,freq); */\n                /*\n                 * ATH below 100 Hz constant, not\n                 * further climbing\n                 */\n                level = this.ATHformula(freq * 1000, gfp) - 20;\n                // scale to FFT units; returned value is in dB\n                level = Math.pow(10., 0.1 * level);\n                // convert from dB . energy\n                level *= gfc.numlines_s[i];\n                if (x > level)\n                    x = level;\n            }\n            gfc.ATH.cb_s[i] = x;\n\n            /*\n             * MINVAL. For low freq, the strength of the masking is limited by\n             * minval this is an ISO MPEG1 thing, dont know if it is really\n             * needed\n             */\n            x = (-7.0 + bval[i] * 7.0 / 12.0);\n            if (bval[i] > 12) {\n                x *= 1 + Math.log(1 + x) * 3.1;\n            }\n            if (bval[i] < 12) {\n                x *= 1 + Math.log(1 - x) * 2.3;\n            }\n            if (x < -15) {\n                x = -15;\n            }\n            x -= 8;\n            gfc.minval_s[i] = Math.pow(10.0, x / 10)\n                * gfc.numlines_s[i];\n        }\n\n        gfc.s3_ss = init_s3_values(gfc.s3ind_s, gfc.npart_s, bval, bval_width,\n            norm, useOldS3);\n\n        init_mask_add_max_values();\n        fft.init_fft(gfc);\n\n        /* setup temporal masking */\n        gfc.decay = Math.exp(-1.0 * LOG10\n            / (temporalmask_sustain_sec * sfreq / 192.0));\n\n        {\n            var msfix;\n            msfix = NS_MSFIX;\n            if ((gfp.exp_nspsytune & 2) != 0)\n                msfix = 1.0;\n            if (Math.abs(gfp.msfix) > 0.0)\n                msfix = gfp.msfix;\n            gfp.msfix = msfix;\n\n            /*\n             * spread only from npart_l bands. Normally, we use the spreading\n             * function to convolve from npart_l down to npart_l bands\n             */\n            for (var b = 0; b < gfc.npart_l; b++)\n                if (gfc.s3ind[b][1] > gfc.npart_l - 1)\n                    gfc.s3ind[b][1] = gfc.npart_l - 1;\n        }\n\n        /*\n         * prepare for ATH auto adjustment: we want to decrease the ATH by 12 dB\n         * per second\n         */\n        var frame_duration = (576. * gfc.mode_gr / sfreq);\n        gfc.ATH.decay = Math.pow(10., -12. / 10. * frame_duration);\n        gfc.ATH.adjust = 0.01;\n        /* minimum, for leading low loudness */\n        gfc.ATH.adjustLimit = 1.0;\n        /* on lead, allow adjust up to maximum */\n\n        assert$3(gfc.bo_l[Encoder_1.SBMAX_l - 1] <= gfc.npart_l);\n        assert$3(gfc.bo_s[Encoder_1.SBMAX_s - 1] <= gfc.npart_s);\n\n        if (gfp.ATHtype != -1) {\n            /* compute equal loudness weights (eql_w) */\n            var freq;\n            var freq_inc = gfp.out_samplerate\n                / (Encoder_1.BLKSIZE);\n            var eql_balance = 0.0;\n            freq = 0.0;\n            for (i = 0; i < Encoder_1.BLKSIZE / 2; ++i) {\n                /* convert ATH dB to relative power (not dB) */\n                /* to determine eql_w */\n                freq += freq_inc;\n                gfc.ATH.eql_w[i] = 1. / Math.pow(10, this.ATHformula(freq, gfp) / 10);\n                eql_balance += gfc.ATH.eql_w[i];\n            }\n            eql_balance = 1.0 / eql_balance;\n            for (i = Encoder_1.BLKSIZE / 2; --i >= 0;) { /* scale weights */\n                gfc.ATH.eql_w[i] *= eql_balance;\n            }\n        }\n        {\n            for (var b = j = 0; b < gfc.npart_s; ++b) {\n                for (i = 0; i < gfc.numlines_s[b]; ++i) {\n                    ++j;\n                }\n            }\n            assert$3(j == 129);\n            for (var b = j = 0; b < gfc.npart_l; ++b) {\n                for (i = 0; i < gfc.numlines_l[b]; ++i) {\n                    ++j;\n                }\n            }\n            assert$3(j == 513);\n        }\n        j = 0;\n        for (i = 0; i < gfc.npart_l; i++) {\n            var freq = sfreq * (j + gfc.numlines_l[i] / 2) / (1.0 * Encoder_1.BLKSIZE);\n            gfc.mld_cb_l[i] = stereo_demask(freq);\n            j += gfc.numlines_l[i];\n        }\n        for (; i < Encoder_1.CBANDS; ++i) {\n            gfc.mld_cb_l[i] = 1;\n        }\n        j = 0;\n        for (i = 0; i < gfc.npart_s; i++) {\n            var freq = sfreq * (j + gfc.numlines_s[i] / 2) / (1.0 * Encoder_1.BLKSIZE_s);\n            gfc.mld_cb_s[i] = stereo_demask(freq);\n            j += gfc.numlines_s[i];\n        }\n        for (; i < Encoder_1.CBANDS; ++i) {\n            gfc.mld_cb_s[i] = 1;\n        }\n        return 0;\n    };\n\n    /**\n     * Those ATH formulas are returning their minimum value for input = -1\n     */\n    function ATHformula_GB(f, value) {\n        /**\n         * <PRE>\n         *  from Painter & Spanias\n         *           modified by Gabriel Bouvigne to better fit the reality\n         *           ath =    3.640 * pow(f,-0.8)\n         *           - 6.800 * exp(-0.6*pow(f-3.4,2.0))\n         *           + 6.000 * exp(-0.15*pow(f-8.7,2.0))\n         *           + 0.6* 0.001 * pow(f,4.0);\n         *\n         *\n         *           In the past LAME was using the Painter &Spanias formula.\n         *           But we had some recurrent problems with HF content.\n         *           We measured real ATH values, and found the older formula\n         *           to be inaccurate in the higher part. So we made this new\n         *           formula and this solved most of HF problematic test cases.\n         *           The tradeoff is that in VBR mode it increases a lot the\n         *           bitrate.\n         * </PRE>\n         */\n\n        /*\n         * This curve can be adjusted according to the VBR scale: it adjusts\n         * from something close to Painter & Spanias on V9 up to Bouvigne's\n         * formula for V0. This way the VBR bitrate is more balanced according\n         * to the -V value.\n         */\n\n        // the following Hack allows to ask for the lowest value\n        if (f < -.3)\n            f = 3410;\n\n        // convert to khz\n        f /= 1000;\n        f = Math.max(0.1, f);\n        var ath = 3.640 * Math.pow(f, -0.8) - 6.800\n            * Math.exp(-0.6 * Math.pow(f - 3.4, 2.0)) + 6.000\n            * Math.exp(-0.15 * Math.pow(f - 8.7, 2.0))\n            + (0.6 + 0.04 * value) * 0.001 * Math.pow(f, 4.0);\n        return ath;\n    }\n\n    this.ATHformula = function (f, gfp) {\n        var ath;\n        switch (gfp.ATHtype) {\n            case 0:\n                ath = ATHformula_GB(f, 9);\n                break;\n            case 1:\n                // over sensitive, should probably be removed\n                ath = ATHformula_GB(f, -1);\n                break;\n            case 2:\n                ath = ATHformula_GB(f, 0);\n                break;\n            case 3:\n                // modification of GB formula by Roel\n                ath = ATHformula_GB(f, 1) + 6;\n                break;\n            case 4:\n                ath = ATHformula_GB(f, gfp.ATHcurve);\n                break;\n            default:\n                ath = ATHformula_GB(f, 0);\n                break;\n        }\n        return ath;\n    };\n\n}\n\nvar PsyModel_1 = PsyModel;\n\n//package mp3;\n\n/* MPEG modes */\nfunction MPEGMode$1(ordinal) {\n    var _ordinal = ordinal;\n    this.ordinal = function () {\n        return _ordinal;\n    };\n}\n\nMPEGMode$1.STEREO = new MPEGMode$1(0);\nMPEGMode$1.JOINT_STEREO = new MPEGMode$1(1);\nMPEGMode$1.DUAL_CHANNEL = new MPEGMode$1(2);\nMPEGMode$1.MONO = new MPEGMode$1(3);\nMPEGMode$1.NOT_SET = new MPEGMode$1(4);\n\nvar MPEGMode_1 = MPEGMode$1;\n\nfunction LameGlobalFlags() {\n\n    this.class_id = 0;\n\n    /* input description */\n\n    /**\n     * number of samples. default=-1\n     */\n    this.num_samples = 0;\n    /**\n     * input number of channels. default=2\n     */\n    this.num_channels = 0;\n    /**\n     * input_samp_rate in Hz. default=44.1 kHz\n     */\n    this.in_samplerate = 0;\n    /**\n     * output_samp_rate. default: LAME picks best value at least not used for\n     * MP3 decoding: Remember 44.1 kHz MP3s and AC97\n     */\n    this.out_samplerate = 0;\n    /**\n     * scale input by this amount before encoding at least not used for MP3\n     * decoding\n     */\n    this.scale = 0.;\n    /**\n     * scale input of channel 0 (left) by this amount before encoding\n     */\n    this.scale_left = 0.;\n    /**\n     * scale input of channel 1 (right) by this amount before encoding\n     */\n    this.scale_right = 0.;\n\n    /* general control params */\n    /**\n     * collect data for a MP3 frame analyzer?\n     */\n    this.analysis = false;\n    /**\n     * add Xing VBR tag?\n     */\n    this.bWriteVbrTag = false;\n\n    /**\n     * use lame/mpglib to convert mp3 to wav\n     */\n    this.decode_only = false;\n    /**\n     * quality setting 0=best, 9=worst default=5\n     */\n    this.quality = 0;\n    /**\n     * see enum default = LAME picks best value\n     */\n    this.mode = MPEGMode_1.STEREO;\n    /**\n     * force M/S mode. requires mode=1\n     */\n    this.force_ms = false;\n    /**\n     * use free format? default=0\n     */\n    this.free_format = false;\n    /**\n     * find the RG value? default=0\n     */\n    this.findReplayGain = false;\n    /**\n     * decode on the fly? default=0\n     */\n    this.decode_on_the_fly = false;\n    /**\n     * 1 (default) writes ID3 tags, 0 not\n     */\n    this.write_id3tag_automatic = false;\n\n    /*\n     * set either brate>0 or compression_ratio>0, LAME will compute the value of\n     * the variable not set. Default is compression_ratio = 11.025\n     */\n    /**\n     * bitrate\n     */\n    this.brate = 0;\n    /**\n     * sizeof(wav file)/sizeof(mp3 file)\n     */\n    this.compression_ratio = 0.;\n\n    /* frame params */\n    /**\n     * mark as copyright. default=0\n     */\n    this.copyright = 0;\n    /**\n     * mark as original. default=1\n     */\n    this.original = 0;\n    /**\n     * the MP3 'private extension' bit. Meaningless\n     */\n    this.extension = 0;\n    /**\n     * Input PCM is emphased PCM (for instance from one of the rarely emphased\n     * CDs), it is STRONGLY not recommended to use this, because psycho does not\n     * take it into account, and last but not least many decoders don't care\n     * about these bits\n     */\n    this.emphasis = 0;\n    /**\n     * use 2 bytes per frame for a CRC checksum. default=0\n     */\n    this.error_protection = 0;\n    /**\n     * enforce ISO spec as much as possible\n     */\n    this.strict_ISO = false;\n\n    /**\n     * use bit reservoir?\n     */\n    this.disable_reservoir = false;\n\n    /* quantization/noise shaping */\n    this.quant_comp = 0;\n    this.quant_comp_short = 0;\n    this.experimentalY = false;\n    this.experimentalZ = 0;\n    this.exp_nspsytune = 0;\n\n    this.preset = 0;\n\n    /* VBR control */\n    this.VBR = null;\n    /**\n     * Range [0,...,1[\n     */\n    this.VBR_q_frac = 0.;\n    /**\n     * Range [0,...,9]\n     */\n    this.VBR_q = 0;\n    this.VBR_mean_bitrate_kbps = 0;\n    this.VBR_min_bitrate_kbps = 0;\n    this.VBR_max_bitrate_kbps = 0;\n    /**\n     * strictly enforce VBR_min_bitrate normaly, it will be violated for analog\n     * silence\n     */\n    this.VBR_hard_min = 0;\n\n    /* resampling and filtering */\n\n    /**\n     * freq in Hz. 0=lame choses. -1=no filter\n     */\n    this.lowpassfreq = 0;\n    /**\n     * freq in Hz. 0=lame choses. -1=no filter\n     */\n    this.highpassfreq = 0;\n    /**\n     * freq width of filter, in Hz (default=15%)\n     */\n    this.lowpasswidth = 0;\n    /**\n     * freq width of filter, in Hz (default=15%)\n     */\n    this.highpasswidth = 0;\n\n    /*\n     * psycho acoustics and other arguments which you should not change unless\n     * you know what you are doing\n     */\n\n    this.maskingadjust = 0.;\n    this.maskingadjust_short = 0.;\n    /**\n     * only use ATH\n     */\n    this.ATHonly = false;\n    /**\n     * only use ATH for short blocks\n     */\n    this.ATHshort = false;\n    /**\n     * disable ATH\n     */\n    this.noATH = false;\n    /**\n     * select ATH formula\n     */\n    this.ATHtype = 0;\n    /**\n     * change ATH formula 4 shape\n     */\n    this.ATHcurve = 0.;\n    /**\n     * lower ATH by this many db\n     */\n    this.ATHlower = 0.;\n    /**\n     * select ATH auto-adjust scheme\n     */\n    this.athaa_type = 0;\n    /**\n     * select ATH auto-adjust loudness calc\n     */\n    this.athaa_loudapprox = 0;\n    /**\n     * dB, tune active region of auto-level\n     */\n    this.athaa_sensitivity = 0.;\n    this.short_blocks = null;\n    /**\n     * use temporal masking effect\n     */\n    this.useTemporal = false;\n    this.interChRatio = 0.;\n    /**\n     * Naoki's adjustment of Mid/Side maskings\n     */\n    this.msfix = 0.;\n\n    /**\n     * 0 off, 1 on\n     */\n    this.tune = false;\n    /**\n     * used to pass values for debugging and stuff\n     */\n    this.tune_value_a = 0.;\n\n    /************************************************************************/\n    /* internal variables, do not set... */\n    /* provided because they may be of use to calling application */\n    /************************************************************************/\n\n    /**\n     * 0=MPEG-2/2.5 1=MPEG-1\n     */\n    this.version = 0;\n    this.encoder_delay = 0;\n    /**\n     * number of samples of padding appended to input\n     */\n    this.encoder_padding = 0;\n    this.framesize = 0;\n    /**\n     * number of frames encoded\n     */\n    this.frameNum = 0;\n    /**\n     * is this struct owned by calling program or lame?\n     */\n    this.lame_allocated_gfp = 0;\n    /**************************************************************************/\n    /* more internal variables are stored in this structure: */\n    /**************************************************************************/\n    this.internal_flags = null;\n}\n\nvar LameGlobalFlags_1 = LameGlobalFlags;\n\nvar L3Side$1 = {};\n\n\n\t/**\n\t * max scalefactor band, max(SBMAX_l, SBMAX_s*3, (SBMAX_s-3)*3+8)\n\t */\nL3Side$1.SFBMAX = (Encoder_1.SBMAX_s * 3);\n\nvar L3Side_1 = L3Side$1;\n\nvar new_float$10 = common.new_float;\nvar new_int$10 = common.new_int;\nfunction GrInfo() {\n    //float xr[] = new float[576];\n    this.xr = new_float$10(576);\n    //int l3_enc[] = new int[576];\n    this.l3_enc = new_int$10(576);\n    //int scalefac[] = new int[L3Side.SFBMAX];\n    this.scalefac = new_int$10(L3Side_1.SFBMAX);\n    this.xrpow_max = 0.;\n\n    this.part2_3_length = 0;\n    this.big_values = 0;\n    this.count1 = 0;\n    this.global_gain = 0;\n    this.scalefac_compress = 0;\n    this.block_type = 0;\n    this.mixed_block_flag = 0;\n    this.table_select = new_int$10(3);\n    this.subblock_gain = new_int$10(3 + 1);\n    this.region0_count = 0;\n    this.region1_count = 0;\n    this.preflag = 0;\n    this.scalefac_scale = 0;\n    this.count1table_select = 0;\n\n    this.part2_length = 0;\n    this.sfb_lmax = 0;\n    this.sfb_smin = 0;\n    this.psy_lmax = 0;\n    this.sfbmax = 0;\n    this.psymax = 0;\n    this.sfbdivide = 0;\n    this.width = new_int$10(L3Side_1.SFBMAX);\n    this.window = new_int$10(L3Side_1.SFBMAX);\n    this.count1bits = 0;\n    /**\n     * added for LSF\n     */\n    this.sfb_partition_table = null;\n    this.slen = new_int$10(4);\n\n    this.max_nonzero_coeff = 0;\n\n    var self = this;\n    function clone_int(array) {\n        return new Int32Array(array);\n    }\n    function clone_float(array) {\n        return new Float32Array(array);\n    }\n    this.assign = function (other) {\n        self.xr = clone_float(other.xr); //.slice(0); //clone();\n        self.l3_enc = clone_int(other.l3_enc); //.slice(0); //clone();\n        self.scalefac = clone_int(other.scalefac);//.slice(0); //clone();\n        self.xrpow_max = other.xrpow_max;\n\n        self.part2_3_length = other.part2_3_length;\n        self.big_values = other.big_values;\n        self.count1 = other.count1;\n        self.global_gain = other.global_gain;\n        self.scalefac_compress = other.scalefac_compress;\n        self.block_type = other.block_type;\n        self.mixed_block_flag = other.mixed_block_flag;\n        self.table_select = clone_int(other.table_select);//.slice(0); //clone();\n        self.subblock_gain = clone_int(other.subblock_gain); //.slice(0); //.clone();\n        self.region0_count = other.region0_count;\n        self.region1_count = other.region1_count;\n        self.preflag = other.preflag;\n        self.scalefac_scale = other.scalefac_scale;\n        self.count1table_select = other.count1table_select;\n\n        self.part2_length = other.part2_length;\n        self.sfb_lmax = other.sfb_lmax;\n        self.sfb_smin = other.sfb_smin;\n        self.psy_lmax = other.psy_lmax;\n        self.sfbmax = other.sfbmax;\n        self.psymax = other.psymax;\n        self.sfbdivide = other.sfbdivide;\n        self.width = clone_int(other.width); //.slice(0); //.clone();\n        self.window = clone_int(other.window); //.slice(0); //.clone();\n        self.count1bits = other.count1bits;\n\n        self.sfb_partition_table = other.sfb_partition_table.slice(0); //.clone();\n        self.slen = clone_int(other.slen); //.slice(0); //.clone();\n        self.max_nonzero_coeff = other.max_nonzero_coeff;\n    };\n}\n\nvar GrInfo_1 = GrInfo;\n\nvar new_int$9 = common.new_int;\nfunction IIISideInfo() {\n    this.tt = [[null, null], [null, null]];\n    this.main_data_begin = 0;\n    this.private_bits = 0;\n    this.resvDrain_pre = 0;\n    this.resvDrain_post = 0;\n    this.scfsi = [new_int$9(4), new_int$9(4)];\n\n    for (var gr = 0; gr < 2; gr++) {\n        for (var ch = 0; ch < 2; ch++) {\n            this.tt[gr][ch] = new GrInfo_1();\n        }\n    }\n}\n\nvar IIISideInfo_1 = IIISideInfo;\n\n//package mp3;\n\n/**\n * Layer III side information.\n *\n * @author Ken\n *\n */\n\n\nvar System$11 = common.System;\nvar new_int$11 = common.new_int;\nfunction ScaleFac(arrL, arrS, arr21, arr12) {\n\n    this.l = new_int$11(1 + Encoder_1.SBMAX_l);\n    this.s = new_int$11(1 + Encoder_1.SBMAX_s);\n    this.psfb21 = new_int$11(1 + Encoder_1.PSFB21);\n    this.psfb12 = new_int$11(1 + Encoder_1.PSFB12);\n    var l = this.l;\n    var s = this.s;\n\n    if (arguments.length == 4) {\n        //public ScaleFac(final int[] arrL, final int[] arrS, final int[] arr21,\n        //    final int[] arr12) {\n        this.arrL = arguments[0];\n        this.arrS = arguments[1];\n        this.arr21 = arguments[2];\n        this.arr12 = arguments[3];\n\n        System$11.arraycopy(this.arrL, 0, l, 0, Math.min(this.arrL.length, this.l.length));\n        System$11.arraycopy(this.arrS, 0, s, 0, Math.min(this.arrS.length, this.s.length));\n        System$11.arraycopy(this.arr21, 0, this.psfb21, 0, Math.min(this.arr21.length, this.psfb21.length));\n        System$11.arraycopy(this.arr12, 0, this.psfb12, 0, Math.min(this.arr12.length, this.psfb12.length));\n    }\n}\n\nvar ScaleFac_1 = ScaleFac;\n\nvar new_float$12 = common.new_float;\nvar new_float_n$12 = common.new_float_n;\nvar new_int$12 = common.new_int;\n//package mp3;\n\n/**\n * Variables used for --nspsytune\n *\n * @author Ken\n *\n */\nfunction NsPsy() {\n    this.last_en_subshort = new_float_n$12([4, 9]);\n    this.lastAttacks = new_int$12(4);\n    this.pefirbuf = new_float$12(19);\n    this.longfact = new_float$12(Encoder_1.SBMAX_l);\n    this.shortfact = new_float$12(Encoder_1.SBMAX_s);\n\n    /**\n     * short block tuning\n     */\n    this.attackthre = 0.;\n    this.attackthre_s = 0.;\n}\n\nvar NsPsy_1 = NsPsy;\n\n//package mp3;\n\nfunction VBRSeekInfo() {\n    /**\n     * What we have seen so far.\n     */\n    this.sum = 0;\n    /**\n     * How many frames we have seen in this chunk.\n     */\n    this.seen = 0;\n    /**\n     * How many frames we want to collect into one chunk.\n     */\n    this.want = 0;\n    /**\n     * Actual position in our bag.\n     */\n    this.pos = 0;\n    /**\n     * Size of our bag.\n     */\n    this.size = 0;\n    /**\n     * Pointer to our bag.\n     */\n    this.bag = null;\n    this.nVbrNumFrames = 0;\n    this.nBytesWritten = 0;\n    /* VBR tag data */\n    this.TotalFrameSize = 0;\n}\n\nvar VBRSeekInfo_1 = VBRSeekInfo;\n\nvar new_byte$8 = common.new_byte;\nvar new_double$8 = common.new_double;\nvar new_float$8 = common.new_float;\nvar new_float_n$8 = common.new_float_n;\nvar new_int$8 = common.new_int;\nvar new_int_n$8 = common.new_int_n;\nLameInternalFlags$1.MFSIZE = (3 * 1152 + Encoder_1.ENCDELAY - Encoder_1.MDCTDELAY);\nLameInternalFlags$1.MAX_HEADER_BUF = 256;\nLameInternalFlags$1.MAX_BITS_PER_CHANNEL = 4095;\nLameInternalFlags$1.MAX_BITS_PER_GRANULE = 7680;\nLameInternalFlags$1.BPC = 320;\n\nfunction LameInternalFlags$1() {\n    var MAX_HEADER_LEN = 40;\n\n\n    /********************************************************************\n     * internal variables NOT set by calling program, and should not be *\n     * modified by the calling program *\n     ********************************************************************/\n\n    /**\n     * Some remarks to the Class_ID field: The Class ID is an Identifier for a\n     * pointer to this struct. It is very unlikely that a pointer to\n     * lame_global_flags has the same 32 bits in it's structure (large and other\n     * special properties, for instance prime).\n     *\n     * To test that the structure is right and initialized, use: if ( gfc .\n     * Class_ID == LAME_ID ) ... Other remark: If you set a flag to 0 for uninit\n     * data and 1 for init data, the right test should be \"if (flag == 1)\" and\n     * NOT \"if (flag)\". Unintended modification of this element will be\n     * otherwise misinterpreted as an init.\n     */\n    this.Class_ID = 0;\n\n    this.lame_encode_frame_init = 0;\n    this.iteration_init_init = 0;\n    this.fill_buffer_resample_init = 0;\n\n    //public float mfbuf[][] = new float[2][MFSIZE];\n    this.mfbuf = new_float_n$8([2, LameInternalFlags$1.MFSIZE]);\n\n    /**\n     * granules per frame\n     */\n    this.mode_gr = 0;\n    /**\n     * number of channels in the input data stream (PCM or decoded PCM)\n     */\n    this.channels_in = 0;\n    /**\n     * number of channels in the output data stream (not used for decoding)\n     */\n    this.channels_out = 0;\n    /**\n     * input_samp_rate/output_samp_rate\n     */\n        //public double resample_ratio;\n    this.resample_ratio = 0.;\n\n    this.mf_samples_to_encode = 0;\n    this.mf_size = 0;\n    /**\n     * min bitrate index\n     */\n    this.VBR_min_bitrate = 0;\n    /**\n     * max bitrate index\n     */\n    this.VBR_max_bitrate = 0;\n    this.bitrate_index = 0;\n    this.samplerate_index = 0;\n    this.mode_ext = 0;\n\n    /* lowpass and highpass filter control */\n    /**\n     * normalized frequency bounds of passband\n     */\n    this.lowpass1 = 0.;\n    this.lowpass2 = 0.;\n    /**\n     * normalized frequency bounds of passband\n     */\n    this.highpass1 = 0.;\n    this.highpass2 = 0.;\n\n    /**\n     * 0 = none 1 = ISO AAC model 2 = allow scalefac_select=1\n     */\n    this.noise_shaping = 0;\n\n    /**\n     * 0 = ISO model: amplify all distorted bands<BR>\n     * 1 = amplify within 50% of max (on db scale)<BR>\n     * 2 = amplify only most distorted band<BR>\n     * 3 = method 1 and refine with method 2<BR>\n     */\n    this.noise_shaping_amp = 0;\n    /**\n     * 0 = no substep<BR>\n     * 1 = use substep shaping at last step(VBR only)<BR>\n     * (not implemented yet)<BR>\n     * 2 = use substep inside loop<BR>\n     * 3 = use substep inside loop and last step<BR>\n     */\n    this.substep_shaping = 0;\n\n    /**\n     * 1 = gpsycho. 0 = none\n     */\n    this.psymodel = 0;\n    /**\n     * 0 = stop at over=0, all scalefacs amplified or<BR>\n     * a scalefac has reached max value<BR>\n     * 1 = stop when all scalefacs amplified or a scalefac has reached max value<BR>\n     * 2 = stop when all scalefacs amplified\n     */\n    this.noise_shaping_stop = 0;\n\n    /**\n     * 0 = no, 1 = yes\n     */\n    this.subblock_gain = 0;\n    /**\n     * 0 = no. 1=outside loop 2=inside loop(slow)\n     */\n    this.use_best_huffman = 0;\n\n    /**\n     * 0 = stop early after 0 distortion found. 1 = full search\n     */\n    this.full_outer_loop = 0;\n\n    //public IIISideInfo l3_side = new IIISideInfo();\n    this.l3_side = new IIISideInfo_1();\n    this.ms_ratio = new_float$8(2);\n\n    /* used for padding */\n    /**\n     * padding for the current frame?\n     */\n    this.padding = 0;\n    this.frac_SpF = 0;\n    this.slot_lag = 0;\n\n    /**\n     * optional ID3 tags\n     */\n        //public ID3TagSpec tag_spec;\n    this.tag_spec = null;\n    this.nMusicCRC = 0;\n\n    /* variables used by Quantize */\n    //public int OldValue[] = new int[2];\n    this.OldValue = new_int$8(2);\n    //public int CurrentStep[] = new int[2];\n    this.CurrentStep = new_int$8(2);\n\n    this.masking_lower = 0.;\n    //public int bv_scf[] = new int[576];\n    this.bv_scf = new_int$8(576);\n    //public int pseudohalf[] = new int[L3Side.SFBMAX];\n    this.pseudohalf = new_int$8(L3Side_1.SFBMAX);\n\n    /**\n     * will be set in lame_init_params\n     */\n    this.sfb21_extra = false;\n\n    /* BPC = maximum number of filter convolution windows to precompute */\n    //public float[][] inbuf_old = new float[2][];\n    this.inbuf_old = new Array(2);\n    //public float[][] blackfilt = new float[2 * BPC + 1][];\n    this.blackfilt = new Array(2 * LameInternalFlags$1.BPC + 1);\n    //public double itime[] = new double[2];\n    this.itime = new_double$8(2);\n    this.sideinfo_len = 0;\n\n    /* variables for newmdct.c */\n    //public float sb_sample[][][][] = new float[2][2][18][Encoder.SBLIMIT];\n    this.sb_sample = new_float_n$8([2, 2, 18, Encoder_1.SBLIMIT]);\n    this.amp_filter = new_float$8(32);\n\n    /* variables for BitStream */\n\n    /**\n     * <PRE>\n     * mpeg1: buffer=511 bytes  smallest frame: 96-38(sideinfo)=58\n     * max number of frames in reservoir:  8\n     * mpeg2: buffer=255 bytes.  smallest frame: 24-23bytes=1\n     * with VBR, if you are encoding all silence, it is possible to\n     * have 8kbs/24khz frames with 1byte of data each, which means we need\n     * to buffer up to 255 headers!\n     * </PRE>\n     */\n    /**\n     * also, max_header_buf has to be a power of two\n     */\n    /**\n     * max size of header is 38\n     */\n\n    function Header() {\n        this.write_timing = 0;\n        this.ptr = 0;\n        //public byte buf[] = new byte[MAX_HEADER_LEN];\n        this.buf = new_byte$8(MAX_HEADER_LEN);\n    }\n\n    this.header = new Array(LameInternalFlags$1.MAX_HEADER_BUF);\n\n    this.h_ptr = 0;\n    this.w_ptr = 0;\n    this.ancillary_flag = 0;\n\n    /* variables for Reservoir */\n    /**\n     * in bits\n     */\n    this.ResvSize = 0;\n    /**\n     * in bits\n     */\n    this.ResvMax = 0;\n\n    //public ScaleFac scalefac_band = new ScaleFac();\n    this.scalefac_band = new ScaleFac_1();\n\n    /* daa from PsyModel */\n    /* The static variables \"r\", \"phi_sav\", \"new\", \"old\" and \"oldest\" have */\n    /* to be remembered for the unpredictability measure. For \"r\" and */\n    /* \"phi_sav\", the first index from the left is the channel select and */\n    /* the second index is the \"age\" of the data. */\n    this.minval_l = new_float$8(Encoder_1.CBANDS);\n    this.minval_s = new_float$8(Encoder_1.CBANDS);\n    this.nb_1 = new_float_n$8([4, Encoder_1.CBANDS]);\n    this.nb_2 = new_float_n$8([4, Encoder_1.CBANDS]);\n    this.nb_s1 = new_float_n$8([4, Encoder_1.CBANDS]);\n    this.nb_s2 = new_float_n$8([4, Encoder_1.CBANDS]);\n    this.s3_ss = null;\n    this.s3_ll = null;\n    this.decay = 0.;\n\n    //public III_psy_xmin[] thm = new III_psy_xmin[4];\n    //public III_psy_xmin[] en = new III_psy_xmin[4];\n    this.thm = new Array(4);\n    this.en = new Array(4);\n\n    /**\n     * fft and energy calculation\n     */\n    this.tot_ener = new_float$8(4);\n\n    /* loudness calculation (for adaptive threshold of hearing) */\n    /**\n     * loudness^2 approx. per granule and channel\n     */\n    this.loudness_sq = new_float_n$8([2, 2]);\n    /**\n     * account for granule delay of L3psycho_anal\n     */\n    this.loudness_sq_save = new_float$8(2);\n\n    /**\n     * Scale Factor Bands\n     */\n    this.mld_l = new_float$8(Encoder_1.SBMAX_l);\n    this.mld_s = new_float$8(Encoder_1.SBMAX_s);\n    this.bm_l = new_int$8(Encoder_1.SBMAX_l);\n    this.bo_l = new_int$8(Encoder_1.SBMAX_l);\n    this.bm_s = new_int$8(Encoder_1.SBMAX_s);\n    this.bo_s = new_int$8(Encoder_1.SBMAX_s);\n    this.npart_l = 0;\n    this.npart_s = 0;\n\n    this.s3ind = new_int_n$8([Encoder_1.CBANDS, 2]);\n    this.s3ind_s = new_int_n$8([Encoder_1.CBANDS, 2]);\n\n    this.numlines_s = new_int$8(Encoder_1.CBANDS);\n    this.numlines_l = new_int$8(Encoder_1.CBANDS);\n    this.rnumlines_l = new_float$8(Encoder_1.CBANDS);\n    this.mld_cb_l = new_float$8(Encoder_1.CBANDS);\n    this.mld_cb_s = new_float$8(Encoder_1.CBANDS);\n    this.numlines_s_num1 = 0;\n    this.numlines_l_num1 = 0;\n\n    /* ratios */\n    this.pe = new_float$8(4);\n    this.ms_ratio_s_old = 0.;\n    this.ms_ratio_l_old = 0.;\n    this.ms_ener_ratio_old = 0.;\n\n    /**\n     * block type\n     */\n    this.blocktype_old = new_int$8(2);\n\n    /**\n     * variables used for --nspsytune\n     */\n    this.nsPsy = new NsPsy_1();\n\n    /**\n     * used for Xing VBR header\n     */\n    this.VBR_seek_table = new VBRSeekInfo_1();\n\n    /**\n     * all ATH related stuff\n     */\n        //public ATH ATH;\n    this.ATH = null;\n\n    this.PSY = null;\n\n    this.nogap_total = 0;\n    this.nogap_current = 0;\n\n    /* ReplayGain */\n    this.decode_on_the_fly = true;\n    this.findReplayGain = true;\n    this.findPeakSample = true;\n    this.PeakSample = 0.;\n    this.RadioGain = 0;\n    this.AudiophileGain = 0;\n    //public ReplayGain rgdata;\n    this.rgdata = null;\n\n    /**\n     * gain change required for preventing clipping\n     */\n    this.noclipGainChange = 0;\n    /**\n     * user-specified scale factor required for preventing clipping\n     */\n    this.noclipScale = 0.;\n\n    /* simple statistics */\n    this.bitrate_stereoMode_Hist = new_int_n$8([16, 4 + 1]);\n    /**\n     * norm/start/short/stop/mixed(short)/sum\n     */\n    this.bitrate_blockType_Hist = new_int_n$8([16, 4 + 1 + 1]);\n\n    //public PlottingData pinfo;\n    //public MPGLib.mpstr_tag hip;\n    this.pinfo = null;\n    this.hip = null;\n\n    this.in_buffer_nsamples = 0;\n    //public float[] in_buffer_0;\n    //public float[] in_buffer_1;\n    this.in_buffer_0 = null;\n    this.in_buffer_1 = null;\n\n    //public IIterationLoop iteration_loop;\n    this.iteration_loop = null;\n\n    for (var i = 0; i < this.en.length; i++) {\n        this.en[i] = new III_psy_xmin_1();\n    }\n    for (var i = 0; i < this.thm.length; i++) {\n        this.thm[i] = new III_psy_xmin_1();\n    }\n    for (var i = 0; i < this.header.length; i++) {\n        this.header[i] = new Header();\n    }\n\n}\n\nvar LameInternalFlags_1 = LameInternalFlags$1;\n\nvar new_float$13 = common.new_float;\n/**\n * ATH related stuff, if something new ATH related has to be added, please plug\n * it here into the ATH.\n */\nfunction ATH() {\n    /**\n     * Method for the auto adjustment.\n     */\n    this.useAdjust = 0;\n    /**\n     * factor for tuning the (sample power) point below which adaptive threshold\n     * of hearing adjustment occurs\n     */\n    this.aaSensitivityP = 0.;\n    /**\n     * Lowering based on peak volume, 1 = no lowering.\n     */\n    this.adjust = 0.;\n    /**\n     * Limit for dynamic ATH adjust.\n     */\n    this.adjustLimit = 0.;\n    /**\n     * Determined to lower x dB each second.\n     */\n    this.decay = 0.;\n    /**\n     * Lowest ATH value.\n     */\n    this.floor = 0.;\n    /**\n     * ATH for sfbs in long blocks.\n     */\n    this.l = new_float$13(Encoder_1.SBMAX_l);\n    /**\n     * ATH for sfbs in short blocks.\n     */\n    this.s = new_float$13(Encoder_1.SBMAX_s);\n    /**\n     * ATH for partitioned sfb21 in long blocks.\n     */\n    this.psfb21 = new_float$13(Encoder_1.PSFB21);\n    /**\n     * ATH for partitioned sfb12 in short blocks.\n     */\n    this.psfb12 = new_float$13(Encoder_1.PSFB12);\n    /**\n     * ATH for long block convolution bands.\n     */\n    this.cb_l = new_float$13(Encoder_1.CBANDS);\n    /**\n     * ATH for short block convolution bands.\n     */\n    this.cb_s = new_float$13(Encoder_1.CBANDS);\n    /**\n     * Equal loudness weights (based on ATH).\n     */\n    this.eql_w = new_float$13(Encoder_1.BLKSIZE / 2);\n}\n\nvar ATH_1 = ATH;\n\n/*\n *  ReplayGainAnalysis - analyzes input samples and give the recommended dB change\n *  Copyright (C) 2001 David Robinson and Glen Sawyer\n *  Improvements and optimizations added by Frank Klemm, and by Marcel Muller \n *\n *  This library is free software; you can redistribute it and/or\n *  modify it under the terms of the GNU Lesser General Public\n *  License as published by the Free Software Foundation; either\n *  version 2.1 of the License, or (at your option) any later version.\n *\n *  This library is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n *  Lesser General Public License for more details.\n *\n *  You should have received a copy of the GNU Lesser General Public\n *  License along with this library; if not, write to the Free Software\n *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n *\n *  concept and filter values by David Robinson (David@Robinson.org)\n *    -- blame him if you think the idea is flawed\n *  original coding by Glen Sawyer (mp3gain@hotmail.com)\n *    -- blame him if you think this runs too slowly, or the coding is otherwise flawed\n *\n *  lots of code improvements by Frank Klemm ( http://www.uni-jena.de/~pfk/mpp/ )\n *    -- credit him for all the _good_ programming ;)\n *\n *\n *  For an explanation of the concepts and the basic algorithms involved, go to:\n *    http://www.replaygain.org/\n */\n\n/*\n *  Here's the deal. Call\n *\n *    InitGainAnalysis ( long samplefreq );\n *\n *  to initialize everything. Call\n *\n *    AnalyzeSamples ( var Float_t*  left_samples,\n *                     var Float_t*  right_samples,\n *                     size_t          num_samples,\n *                     int             num_channels );\n *\n *  as many times as you want, with as many or as few samples as you want.\n *  If mono, pass the sample buffer in through left_samples, leave\n *  right_samples NULL, and make sure num_channels = 1.\n *\n *    GetTitleGain()\n *\n *  will return the recommended dB level change for all samples analyzed\n *  SINCE THE LAST TIME you called GetTitleGain() OR InitGainAnalysis().\n *\n *    GetAlbumGain()\n *\n *  will return the recommended dB level change for all samples analyzed\n *  since InitGainAnalysis() was called and finalized with GetTitleGain().\n *\n *  Pseudo-code to process an album:\n *\n *    Float_t       l_samples [4096];\n *    Float_t       r_samples [4096];\n *    size_t        num_samples;\n *    unsigned int  num_songs;\n *    unsigned int  i;\n *\n *    InitGainAnalysis ( 44100 );\n *    for ( i = 1; i <= num_songs; i++ ) {\n *        while ( ( num_samples = getSongSamples ( song[i], left_samples, right_samples ) ) > 0 )\n *            AnalyzeSamples ( left_samples, right_samples, num_samples, 2 );\n *        fprintf (\"Recommended dB change for song %2d: %+6.2 dB\\n\", i, GetTitleGain() );\n *    }\n *    fprintf (\"Recommended dB change for whole album: %+6.2 dB\\n\", GetAlbumGain() );\n */\n\n/*\n *  So here's the main source of potential code confusion:\n *\n *  The filters applied to the incoming samples are IIR filters,\n *  meaning they rely on up to <filter order> number of previous samples\n *  AND up to <filter order> number of previous filtered samples.\n *\n *  I set up the AnalyzeSamples routine to minimize memory usage and interface\n *  complexity. The speed isn't compromised too much (I don't think), but the\n *  internal complexity is higher than it should be for such a relatively\n *  simple routine.\n *\n *  Optimization/clarity suggestions are welcome.\n */\n\nvar System$15 = common.System;\nvar Arrays$15 = common.Arrays;\n/**\n * Table entries per dB\n */\nGainAnalysis$1.STEPS_per_dB = 100.;\n/**\n * Table entries for 0...MAX_dB (normal max. values are 70...80 dB)\n */\nGainAnalysis$1.MAX_dB = 120.;\nGainAnalysis$1.GAIN_NOT_ENOUGH_SAMPLES = -24601;\nGainAnalysis$1.GAIN_ANALYSIS_ERROR = 0;\nGainAnalysis$1.GAIN_ANALYSIS_OK = 1;\nGainAnalysis$1.INIT_GAIN_ANALYSIS_ERROR = 0;\nGainAnalysis$1.INIT_GAIN_ANALYSIS_OK = 1;\n\nGainAnalysis$1.YULE_ORDER = 10;\nGainAnalysis$1.MAX_ORDER = GainAnalysis$1.YULE_ORDER;\n\nGainAnalysis$1.MAX_SAMP_FREQ = 48000;\nGainAnalysis$1.RMS_WINDOW_TIME_NUMERATOR = 1;\nGainAnalysis$1.RMS_WINDOW_TIME_DENOMINATOR = 20;\nGainAnalysis$1.MAX_SAMPLES_PER_WINDOW = ((GainAnalysis$1.MAX_SAMP_FREQ * GainAnalysis$1.RMS_WINDOW_TIME_NUMERATOR) / GainAnalysis$1.RMS_WINDOW_TIME_DENOMINATOR + 1);\n\nfunction GainAnalysis$1() {\n    /**\n     * calibration value for 89dB\n     */\n    var PINK_REF = 64.82;\n\n    var YULE_ORDER = GainAnalysis$1.YULE_ORDER;\n    /**\n     * percentile which is louder than the proposed level\n     */\n    var RMS_PERCENTILE = 0.95;\n    /**\n     * maximum allowed sample frequency [Hz]\n     */\n    var MAX_SAMP_FREQ = GainAnalysis$1.MAX_SAMP_FREQ;\n    var RMS_WINDOW_TIME_NUMERATOR = GainAnalysis$1.RMS_WINDOW_TIME_NUMERATOR;\n    /**\n     * numerator / denominator = time slice size [s]\n     */\n    var RMS_WINDOW_TIME_DENOMINATOR = GainAnalysis$1.RMS_WINDOW_TIME_DENOMINATOR;\n    /**\n     * max. Samples per Time slice\n     */\n    var MAX_SAMPLES_PER_WINDOW = GainAnalysis$1.MAX_SAMPLES_PER_WINDOW;\n\n\n    var ABYule = [\n        [0.03857599435200, -3.84664617118067, -0.02160367184185,\n            7.81501653005538, -0.00123395316851, -11.34170355132042,\n            -0.00009291677959, 13.05504219327545, -0.01655260341619,\n            -12.28759895145294, 0.02161526843274, 9.48293806319790,\n            -0.02074045215285, -5.87257861775999, 0.00594298065125,\n            2.75465861874613, 0.00306428023191, -0.86984376593551,\n            0.00012025322027, 0.13919314567432, 0.00288463683916],\n        [0.05418656406430, -3.47845948550071, -0.02911007808948,\n            6.36317777566148, -0.00848709379851, -8.54751527471874,\n            -0.00851165645469, 9.47693607801280, -0.00834990904936,\n            -8.81498681370155, 0.02245293253339, 6.85401540936998,\n            -0.02596338512915, -4.39470996079559, 0.01624864962975,\n            2.19611684890774, -0.00240879051584, -0.75104302451432,\n            0.00674613682247, 0.13149317958808, -0.00187763777362],\n        [0.15457299681924, -2.37898834973084, -0.09331049056315,\n            2.84868151156327, -0.06247880153653, -2.64577170229825,\n            0.02163541888798, 2.23697657451713, -0.05588393329856,\n            -1.67148153367602, 0.04781476674921, 1.00595954808547,\n            0.00222312597743, -0.45953458054983, 0.03174092540049,\n            0.16378164858596, -0.01390589421898, -0.05032077717131,\n            0.00651420667831, 0.02347897407020, -0.00881362733839],\n        [0.30296907319327, -1.61273165137247, -0.22613988682123,\n            1.07977492259970, -0.08587323730772, -0.25656257754070,\n            0.03282930172664, -0.16276719120440, -0.00915702933434,\n            -0.22638893773906, -0.02364141202522, 0.39120800788284,\n            -0.00584456039913, -0.22138138954925, 0.06276101321749,\n            0.04500235387352, -0.00000828086748, 0.02005851806501,\n            0.00205861885564, 0.00302439095741, -0.02950134983287],\n        [0.33642304856132, -1.49858979367799, -0.25572241425570,\n            0.87350271418188, -0.11828570177555, 0.12205022308084,\n            0.11921148675203, -0.80774944671438, -0.07834489609479,\n            0.47854794562326, -0.00469977914380, -0.12453458140019,\n            -0.00589500224440, -0.04067510197014, 0.05724228140351,\n            0.08333755284107, 0.00832043980773, -0.04237348025746,\n            -0.01635381384540, 0.02977207319925, -0.01760176568150],\n        [0.44915256608450, -0.62820619233671, -0.14351757464547,\n            0.29661783706366, -0.22784394429749, -0.37256372942400,\n            -0.01419140100551, 0.00213767857124, 0.04078262797139,\n            -0.42029820170918, -0.12398163381748, 0.22199650564824,\n            0.04097565135648, 0.00613424350682, 0.10478503600251,\n            0.06747620744683, -0.01863887810927, 0.05784820375801,\n            -0.03193428438915, 0.03222754072173, 0.00541907748707],\n        [0.56619470757641, -1.04800335126349, -0.75464456939302,\n            0.29156311971249, 0.16242137742230, -0.26806001042947,\n            0.16744243493672, 0.00819999645858, -0.18901604199609,\n            0.45054734505008, 0.30931782841830, -0.33032403314006,\n            -0.27562961986224, 0.06739368333110, 0.00647310677246,\n            -0.04784254229033, 0.08647503780351, 0.01639907836189,\n            -0.03788984554840, 0.01807364323573, -0.00588215443421],\n        [0.58100494960553, -0.51035327095184, -0.53174909058578,\n            -0.31863563325245, -0.14289799034253, -0.20256413484477,\n            0.17520704835522, 0.14728154134330, 0.02377945217615,\n            0.38952639978999, 0.15558449135573, -0.23313271880868,\n            -0.25344790059353, -0.05246019024463, 0.01628462406333,\n            -0.02505961724053, 0.06920467763959, 0.02442357316099,\n            -0.03721611395801, 0.01818801111503, -0.00749618797172],\n        [0.53648789255105, -0.25049871956020, -0.42163034350696,\n            -0.43193942311114, -0.00275953611929, -0.03424681017675,\n            0.04267842219415, -0.04678328784242, -0.10214864179676,\n            0.26408300200955, 0.14590772289388, 0.15113130533216,\n            -0.02459864859345, -0.17556493366449, -0.11202315195388,\n            -0.18823009262115, -0.04060034127000, 0.05477720428674,\n            0.04788665548180, 0.04704409688120, -0.02217936801134]];\n\n    var ABButter = [\n        [0.98621192462708, -1.97223372919527, -1.97242384925416,\n            0.97261396931306, 0.98621192462708],\n        [0.98500175787242, -1.96977855582618, -1.97000351574484,\n            0.97022847566350, 0.98500175787242],\n        [0.97938932735214, -1.95835380975398, -1.95877865470428,\n            0.95920349965459, 0.97938932735214],\n        [0.97531843204928, -1.95002759149878, -1.95063686409857,\n            0.95124613669835, 0.97531843204928],\n        [0.97316523498161, -1.94561023566527, -1.94633046996323,\n            0.94705070426118, 0.97316523498161],\n        [0.96454515552826, -1.92783286977036, -1.92909031105652,\n            0.93034775234268, 0.96454515552826],\n        [0.96009142950541, -1.91858953033784, -1.92018285901082,\n            0.92177618768381, 0.96009142950541],\n        [0.95856916599601, -1.91542108074780, -1.91713833199203,\n            0.91885558323625, 0.95856916599601],\n        [0.94597685600279, -1.88903307939452, -1.89195371200558,\n            0.89487434461664, 0.94597685600279]];\n\n\n    /**\n     * When calling this procedure, make sure that ip[-order] and op[-order]\n     * point to real data\n     */\n    //private void filterYule(final float[] input, int inputPos, float[] output,\n    //int outputPos, int nSamples, final float[] kernel) {\n    function filterYule(input, inputPos, output, outputPos, nSamples, kernel) {\n\n        while ((nSamples--) != 0) {\n            /* 1e-10 is a hack to avoid slowdown because of denormals */\n            output[outputPos] = 1e-10 + input[inputPos + 0] * kernel[0]\n                - output[outputPos - 1] * kernel[1] + input[inputPos - 1]\n                * kernel[2] - output[outputPos - 2] * kernel[3]\n                + input[inputPos - 2] * kernel[4] - output[outputPos - 3]\n                * kernel[5] + input[inputPos - 3] * kernel[6]\n                - output[outputPos - 4] * kernel[7] + input[inputPos - 4]\n                * kernel[8] - output[outputPos - 5] * kernel[9]\n                + input[inputPos - 5] * kernel[10] - output[outputPos - 6]\n                * kernel[11] + input[inputPos - 6] * kernel[12]\n                - output[outputPos - 7] * kernel[13] + input[inputPos - 7]\n                * kernel[14] - output[outputPos - 8] * kernel[15]\n                + input[inputPos - 8] * kernel[16] - output[outputPos - 9]\n                * kernel[17] + input[inputPos - 9] * kernel[18]\n                - output[outputPos - 10] * kernel[19]\n                + input[inputPos - 10] * kernel[20];\n            ++outputPos;\n            ++inputPos;\n        }\n    }\n\n//private void filterButter(final float[] input, int inputPos,\n//    float[] output, int outputPos, int nSamples, final float[] kernel) {\n    function filterButter(input, inputPos, output, outputPos, nSamples, kernel) {\n\n        while ((nSamples--) != 0) {\n            output[outputPos] = input[inputPos + 0] * kernel[0]\n                - output[outputPos - 1] * kernel[1] + input[inputPos - 1]\n                * kernel[2] - output[outputPos - 2] * kernel[3]\n                + input[inputPos - 2] * kernel[4];\n            ++outputPos;\n            ++inputPos;\n        }\n    }\n\n    /**\n     * @return INIT_GAIN_ANALYSIS_OK if successful, INIT_GAIN_ANALYSIS_ERROR if\n     *         not\n     */\n    function ResetSampleFrequency(rgData, samplefreq) {\n        /* zero out initial values */\n        for (var i = 0; i < MAX_ORDER; i++)\n            rgData.linprebuf[i] = rgData.lstepbuf[i] = rgData.loutbuf[i] = rgData.rinprebuf[i] = rgData.rstepbuf[i] = rgData.routbuf[i] = 0.;\n\n        switch (0 | (samplefreq)) {\n            case 48000:\n                rgData.reqindex = 0;\n                break;\n            case 44100:\n                rgData.reqindex = 1;\n                break;\n            case 32000:\n                rgData.reqindex = 2;\n                break;\n            case 24000:\n                rgData.reqindex = 3;\n                break;\n            case 22050:\n                rgData.reqindex = 4;\n                break;\n            case 16000:\n                rgData.reqindex = 5;\n                break;\n            case 12000:\n                rgData.reqindex = 6;\n                break;\n            case 11025:\n                rgData.reqindex = 7;\n                break;\n            case 8000:\n                rgData.reqindex = 8;\n                break;\n            default:\n                return INIT_GAIN_ANALYSIS_ERROR;\n        }\n\n        rgData.sampleWindow = 0 | ((samplefreq * RMS_WINDOW_TIME_NUMERATOR\n            + RMS_WINDOW_TIME_DENOMINATOR - 1) / RMS_WINDOW_TIME_DENOMINATOR);\n\n        rgData.lsum = 0.;\n        rgData.rsum = 0.;\n        rgData.totsamp = 0;\n\n        Arrays$15.ill(rgData.A, 0);\n\n        return INIT_GAIN_ANALYSIS_OK;\n    }\n\n    this.InitGainAnalysis = function (rgData, samplefreq) {\n        if (ResetSampleFrequency(rgData, samplefreq) != INIT_GAIN_ANALYSIS_OK) {\n            return INIT_GAIN_ANALYSIS_ERROR;\n        }\n\n        rgData.linpre = MAX_ORDER;\n        rgData.rinpre = MAX_ORDER;\n        rgData.lstep = MAX_ORDER;\n        rgData.rstep = MAX_ORDER;\n        rgData.lout = MAX_ORDER;\n        rgData.rout = MAX_ORDER;\n\n        Arrays$15.fill(rgData.B, 0);\n\n        return INIT_GAIN_ANALYSIS_OK;\n    };\n\n    /**\n     * square\n     */\n    function fsqr(d) {\n        return d * d;\n    }\n\n    this.AnalyzeSamples = function (rgData, left_samples, left_samplesPos, right_samples, right_samplesPos, num_samples,\n                                    num_channels) {\n        var curleft;\n        var curleftBase;\n        var curright;\n        var currightBase;\n        var batchsamples;\n        var cursamples;\n        var cursamplepos;\n\n        if (num_samples == 0)\n            return GAIN_ANALYSIS_OK;\n\n        cursamplepos = 0;\n        batchsamples = num_samples;\n\n        switch (num_channels) {\n            case 1:\n                right_samples = left_samples;\n                right_samplesPos = left_samplesPos;\n                break;\n            case 2:\n                break;\n            default:\n                return GAIN_ANALYSIS_ERROR;\n        }\n\n        if (num_samples < MAX_ORDER) {\n            System$15.arraycopy(left_samples, left_samplesPos, rgData.linprebuf,\n                MAX_ORDER, num_samples);\n            System$15.arraycopy(right_samples, right_samplesPos, rgData.rinprebuf,\n                MAX_ORDER, num_samples);\n        } else {\n            System$15.arraycopy(left_samples, left_samplesPos, rgData.linprebuf,\n                MAX_ORDER, MAX_ORDER);\n            System$15.arraycopy(right_samples, right_samplesPos, rgData.rinprebuf,\n                MAX_ORDER, MAX_ORDER);\n        }\n\n        while (batchsamples > 0) {\n            cursamples = batchsamples > rgData.sampleWindow - rgData.totsamp ? rgData.sampleWindow\n            - rgData.totsamp\n                : batchsamples;\n            if (cursamplepos < MAX_ORDER) {\n                curleft = rgData.linpre + cursamplepos;\n                curleftBase = rgData.linprebuf;\n                curright = rgData.rinpre + cursamplepos;\n                currightBase = rgData.rinprebuf;\n                if (cursamples > MAX_ORDER - cursamplepos)\n                    cursamples = MAX_ORDER - cursamplepos;\n            } else {\n                curleft = left_samplesPos + cursamplepos;\n                curleftBase = left_samples;\n                curright = right_samplesPos + cursamplepos;\n                currightBase = right_samples;\n            }\n\n            filterYule(curleftBase, curleft, rgData.lstepbuf, rgData.lstep\n                + rgData.totsamp, cursamples, ABYule[rgData.reqindex]);\n            filterYule(currightBase, curright, rgData.rstepbuf, rgData.rstep\n                + rgData.totsamp, cursamples, ABYule[rgData.reqindex]);\n\n            filterButter(rgData.lstepbuf, rgData.lstep + rgData.totsamp,\n                rgData.loutbuf, rgData.lout + rgData.totsamp, cursamples,\n                ABButter[rgData.reqindex]);\n            filterButter(rgData.rstepbuf, rgData.rstep + rgData.totsamp,\n                rgData.routbuf, rgData.rout + rgData.totsamp, cursamples,\n                ABButter[rgData.reqindex]);\n\n            curleft = rgData.lout + rgData.totsamp;\n            /* Get the squared values */\n            curleftBase = rgData.loutbuf;\n            curright = rgData.rout + rgData.totsamp;\n            currightBase = rgData.routbuf;\n\n            var i = cursamples % 8;\n            while ((i--) != 0) {\n                rgData.lsum += fsqr(curleftBase[curleft++]);\n                rgData.rsum += fsqr(currightBase[curright++]);\n            }\n            i = cursamples / 8;\n            while ((i--) != 0) {\n                rgData.lsum += fsqr(curleftBase[curleft + 0])\n                    + fsqr(curleftBase[curleft + 1])\n                    + fsqr(curleftBase[curleft + 2])\n                    + fsqr(curleftBase[curleft + 3])\n                    + fsqr(curleftBase[curleft + 4])\n                    + fsqr(curleftBase[curleft + 5])\n                    + fsqr(curleftBase[curleft + 6])\n                    + fsqr(curleftBase[curleft + 7]);\n                curleft += 8;\n                rgData.rsum += fsqr(currightBase[curright + 0])\n                    + fsqr(currightBase[curright + 1])\n                    + fsqr(currightBase[curright + 2])\n                    + fsqr(currightBase[curright + 3])\n                    + fsqr(currightBase[curright + 4])\n                    + fsqr(currightBase[curright + 5])\n                    + fsqr(currightBase[curright + 6])\n                    + fsqr(currightBase[curright + 7]);\n                curright += 8;\n            }\n\n            batchsamples -= cursamples;\n            cursamplepos += cursamples;\n            rgData.totsamp += cursamples;\n            if (rgData.totsamp == rgData.sampleWindow) {\n                /* Get the Root Mean Square (RMS) for this set of samples */\n                var val = GainAnalysis$1.STEPS_per_dB\n                    * 10.\n                    * Math.log10((rgData.lsum + rgData.rsum)\n                        / rgData.totsamp * 0.5 + 1.e-37);\n                var ival = (val <= 0) ? 0 : 0 | val;\n                if (ival >= rgData.A.length)\n                    ival = rgData.A.length - 1;\n                rgData.A[ival]++;\n                rgData.lsum = rgData.rsum = 0.;\n\n                System$15.arraycopy(rgData.loutbuf, rgData.totsamp,\n                    rgData.loutbuf, 0, MAX_ORDER);\n                System$15.arraycopy(rgData.routbuf, rgData.totsamp,\n                    rgData.routbuf, 0, MAX_ORDER);\n                System$15.arraycopy(rgData.lstepbuf, rgData.totsamp,\n                    rgData.lstepbuf, 0, MAX_ORDER);\n                System$15.arraycopy(rgData.rstepbuf, rgData.totsamp,\n                    rgData.rstepbuf, 0, MAX_ORDER);\n                rgData.totsamp = 0;\n            }\n            if (rgData.totsamp > rgData.sampleWindow) {\n                /*\n                 * somehow I really screwed up: Error in programming! Contact\n                 * author about totsamp > sampleWindow\n                 */\n                return GAIN_ANALYSIS_ERROR;\n            }\n        }\n        if (num_samples < MAX_ORDER) {\n            System$15.arraycopy(rgData.linprebuf, num_samples, rgData.linprebuf,\n                0, MAX_ORDER - num_samples);\n            System$15.arraycopy(rgData.rinprebuf, num_samples, rgData.rinprebuf,\n                0, MAX_ORDER - num_samples);\n            System$15.arraycopy(left_samples, left_samplesPos, rgData.linprebuf,\n                MAX_ORDER - num_samples, num_samples);\n            System$15.arraycopy(right_samples, right_samplesPos, rgData.rinprebuf,\n                MAX_ORDER - num_samples, num_samples);\n        } else {\n            System$15.arraycopy(left_samples, left_samplesPos + num_samples\n                - MAX_ORDER, rgData.linprebuf, 0, MAX_ORDER);\n            System$15.arraycopy(right_samples, right_samplesPos + num_samples\n                - MAX_ORDER, rgData.rinprebuf, 0, MAX_ORDER);\n        }\n\n        return GAIN_ANALYSIS_OK;\n    };\n\n    function analyzeResult(Array, len) {\n        var i;\n\n        var elems = 0;\n        for (i = 0; i < len; i++)\n            elems += Array[i];\n        if (elems == 0)\n            return GAIN_NOT_ENOUGH_SAMPLES;\n\n        var upper = 0 | Math.ceil(elems * (1. - RMS_PERCENTILE));\n        for (i = len; i-- > 0;) {\n            if ((upper -= Array[i]) <= 0)\n                break;\n        }\n\n        //return (float) ((float) PINK_REF - (float) i / (float) STEPS_per_dB);\n        return (PINK_REF - i / GainAnalysis$1.STEPS_per_dB);\n    }\n\n    this.GetTitleGain = function (rgData) {\n        var retval = analyzeResult(rgData.A, rgData.A.length);\n\n        for (var i = 0; i < rgData.A.length; i++) {\n            rgData.B[i] += rgData.A[i];\n            rgData.A[i] = 0;\n        }\n\n        for (var i = 0; i < MAX_ORDER; i++)\n            rgData.linprebuf[i] = rgData.lstepbuf[i] = rgData.loutbuf[i] = rgData.rinprebuf[i] = rgData.rstepbuf[i] = rgData.routbuf[i] = 0.;\n\n        rgData.totsamp = 0;\n        rgData.lsum = rgData.rsum = 0.;\n        return retval;\n    };\n\n}\n\nvar GainAnalysis_1 = GainAnalysis$1;\n\nvar new_float$14 = common.new_float;\nvar new_int$14 = common.new_int;\nfunction ReplayGain() {\n    this.linprebuf = new_float$14(GainAnalysis_1.MAX_ORDER * 2);\n    /**\n     * left input samples, with pre-buffer\n     */\n    this.linpre = 0;\n    this.lstepbuf = new_float$14(GainAnalysis_1.MAX_SAMPLES_PER_WINDOW + GainAnalysis_1.MAX_ORDER);\n    /**\n     * left \"first step\" (i.e. post first filter) samples\n     */\n    this.lstep = 0;\n    this.loutbuf = new_float$14(GainAnalysis_1.MAX_SAMPLES_PER_WINDOW + GainAnalysis_1.MAX_ORDER);\n    /**\n     * left \"out\" (i.e. post second filter) samples\n     */\n    this.lout = 0;\n    this.rinprebuf = new_float$14(GainAnalysis_1.MAX_ORDER * 2);\n    /**\n     * right input samples ...\n     */\n    this.rinpre = 0;\n    this.rstepbuf = new_float$14(GainAnalysis_1.MAX_SAMPLES_PER_WINDOW + GainAnalysis_1.MAX_ORDER);\n    this.rstep = 0;\n    this.routbuf = new_float$14(GainAnalysis_1.MAX_SAMPLES_PER_WINDOW + GainAnalysis_1.MAX_ORDER);\n    this.rout = 0;\n    /**\n     * number of samples required to reach number of milliseconds required\n     * for RMS window\n     */\n    this.sampleWindow = 0;\n    this.totsamp = 0;\n    this.lsum = 0.;\n    this.rsum = 0.;\n    this.freqindex = 0;\n    this.first = 0;\n    this.A = new_int$14(0 | (GainAnalysis_1.STEPS_per_dB * GainAnalysis_1.MAX_dB));\n    this.B = new_int$14(0 | (GainAnalysis_1.STEPS_per_dB * GainAnalysis_1.MAX_dB));\n\n}\n\nvar ReplayGain_1 = ReplayGain;\n\nfunction MeanBits$1(meanBits) {\n    this.bits = meanBits;\n}\n\nvar MeanBits_1 = MeanBits$1;\n\nvar new_float$16 = common.new_float;\nvar new_int$16 = common.new_int;\nvar assert$16 = common.assert;\n\n\n\n\n\n\nfunction CBRNewIterationLoop(_quantize)  {\n    var quantize = _quantize;\n    this.quantize = quantize;\n\tthis.iteration_loop = function(gfp, pe, ms_ener_ratio, ratio) {\n\t\tvar gfc = gfp.internal_flags;\n        var l3_xmin = new_float$16(L3Side_1.SFBMAX);\n\t\tvar xrpow = new_float$16(576);\n\t\tvar targ_bits = new_int$16(2);\n\t\tvar mean_bits = 0, max_bits;\n\t\tvar l3_side = gfc.l3_side;\n\n\t\tvar mb = new MeanBits_1(mean_bits);\n\t\tthis.quantize.rv.ResvFrameBegin(gfp, mb);\n\t\tmean_bits = mb.bits;\n\n\t\t/* quantize! */\n\t\tfor (var gr = 0; gr < gfc.mode_gr; gr++) {\n\n\t\t\t/*\n\t\t\t * calculate needed bits\n\t\t\t */\n\t\t\tmax_bits = this.quantize.qupvt.on_pe(gfp, pe, targ_bits, mean_bits,\n\t\t\t\t\tgr, gr);\n\n\t\t\tif (gfc.mode_ext == Encoder_1.MPG_MD_MS_LR) {\n\t\t\t\tthis.quantize.ms_convert(gfc.l3_side, gr);\n\t\t\t\tthis.quantize.qupvt.reduce_side(targ_bits, ms_ener_ratio[gr],\n\t\t\t\t\t\tmean_bits, max_bits);\n\t\t\t}\n\n\t\t\tfor (var ch = 0; ch < gfc.channels_out; ch++) {\n\t\t\t\tvar adjust, masking_lower_db;\n\t\t\t\tvar cod_info = l3_side.tt[gr][ch];\n\n\t\t\t\tif (cod_info.block_type != Encoder_1.SHORT_TYPE) {\n\t\t\t\t\t// NORM, START or STOP type\n\t\t\t\t\tadjust = 0;\n\t\t\t\t\tmasking_lower_db = gfc.PSY.mask_adjust - adjust;\n\t\t\t\t} else {\n\t\t\t\t\tadjust = 0;\n\t\t\t\t\tmasking_lower_db = gfc.PSY.mask_adjust_short - adjust;\n\t\t\t\t}\n\t\t\t\tgfc.masking_lower =  Math.pow(10.0,\n\t\t\t\t\t\tmasking_lower_db * 0.1);\n\n\t\t\t\t/*\n\t\t\t\t * init_outer_loop sets up cod_info, scalefac and xrpow\n\t\t\t\t */\n\t\t\t\tthis.quantize.init_outer_loop(gfc, cod_info);\n\t\t\t\tif (this.quantize.init_xrpow(gfc, cod_info, xrpow)) {\n\t\t\t\t\t/*\n\t\t\t\t\t * xr contains energy we will have to encode calculate the\n\t\t\t\t\t * masking abilities find some good quantization in\n\t\t\t\t\t * outer_loop\n\t\t\t\t\t */\n\t\t\t\t\tthis.quantize.qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info,\n\t\t\t\t\t\t\tl3_xmin);\n\t\t\t\t\tthis.quantize.outer_loop(gfp, cod_info, l3_xmin, xrpow, ch,\n\t\t\t\t\t\t\ttarg_bits[ch]);\n\t\t\t\t}\n\n\t\t\t\tthis.quantize.iteration_finish_one(gfc, gr, ch);\n\t\t\t\tassert$16 (cod_info.part2_3_length <= LameInternalFlags_1.MAX_BITS_PER_CHANNEL);\n\t\t\t\tassert$16 (cod_info.part2_3_length <= targ_bits[ch]);\n\t\t\t} /* for ch */\n\t\t} /* for gr */\n\n\t\tthis.quantize.rv.ResvFrameEnd(gfc, mean_bits);\n\t};\n}\nvar CBRNewIterationLoop_1 = CBRNewIterationLoop;\n\nfunction HuffCodeTab(len, max, tab, hl) {\n    this.xlen = len;\n    this.linmax = max;\n    this.table = tab;\n    this.hlen = hl;\n}\n\nvar Tables$1 = {};\n\n\nTables$1.t1HB = [\n    1, 1,\n    1, 0\n];\n\nTables$1.t2HB = [\n    1, 2, 1,\n    3, 1, 1,\n    3, 2, 0\n];\n\nTables$1.t3HB = [\n    3, 2, 1,\n    1, 1, 1,\n    3, 2, 0\n];\n\nTables$1.t5HB = [\n    1, 2, 6, 5,\n    3, 1, 4, 4,\n    7, 5, 7, 1,\n    6, 1, 1, 0\n];\n\nTables$1.t6HB = [\n    7, 3, 5, 1,\n    6, 2, 3, 2,\n    5, 4, 4, 1,\n    3, 3, 2, 0\n];\n\nTables$1.t7HB = [\n    1, 2, 10, 19, 16, 10,\n    3, 3, 7, 10, 5, 3,\n    11, 4, 13, 17, 8, 4,\n    12, 11, 18, 15, 11, 2,\n    7, 6, 9, 14, 3, 1,\n    6, 4, 5, 3, 2, 0\n];\n\nTables$1.t8HB = [\n    3, 4, 6, 18, 12, 5,\n    5, 1, 2, 16, 9, 3,\n    7, 3, 5, 14, 7, 3,\n    19, 17, 15, 13, 10, 4,\n    13, 5, 8, 11, 5, 1,\n    12, 4, 4, 1, 1, 0\n];\n\nTables$1.t9HB = [\n    7, 5, 9, 14, 15, 7,\n    6, 4, 5, 5, 6, 7,\n    7, 6, 8, 8, 8, 5,\n    15, 6, 9, 10, 5, 1,\n    11, 7, 9, 6, 4, 1,\n    14, 4, 6, 2, 6, 0\n];\n\nTables$1.t10HB = [\n    1, 2, 10, 23, 35, 30, 12, 17,\n    3, 3, 8, 12, 18, 21, 12, 7,\n    11, 9, 15, 21, 32, 40, 19, 6,\n    14, 13, 22, 34, 46, 23, 18, 7,\n    20, 19, 33, 47, 27, 22, 9, 3,\n    31, 22, 41, 26, 21, 20, 5, 3,\n    14, 13, 10, 11, 16, 6, 5, 1,\n    9, 8, 7, 8, 4, 4, 2, 0\n];\n\nTables$1.t11HB = [\n    3, 4, 10, 24, 34, 33, 21, 15,\n    5, 3, 4, 10, 32, 17, 11, 10,\n    11, 7, 13, 18, 30, 31, 20, 5,\n    25, 11, 19, 59, 27, 18, 12, 5,\n    35, 33, 31, 58, 30, 16, 7, 5,\n    28, 26, 32, 19, 17, 15, 8, 14,\n    14, 12, 9, 13, 14, 9, 4, 1,\n    11, 4, 6, 6, 6, 3, 2, 0\n];\n\nTables$1.t12HB = [\n    9, 6, 16, 33, 41, 39, 38, 26,\n    7, 5, 6, 9, 23, 16, 26, 11,\n    17, 7, 11, 14, 21, 30, 10, 7,\n    17, 10, 15, 12, 18, 28, 14, 5,\n    32, 13, 22, 19, 18, 16, 9, 5,\n    40, 17, 31, 29, 17, 13, 4, 2,\n    27, 12, 11, 15, 10, 7, 4, 1,\n    27, 12, 8, 12, 6, 3, 1, 0\n];\n\nTables$1.t13HB = [\n    1, 5, 14, 21, 34, 51, 46, 71, 42, 52, 68, 52, 67, 44, 43, 19,\n    3, 4, 12, 19, 31, 26, 44, 33, 31, 24, 32, 24, 31, 35, 22, 14,\n    15, 13, 23, 36, 59, 49, 77, 65, 29, 40, 30, 40, 27, 33, 42, 16,\n    22, 20, 37, 61, 56, 79, 73, 64, 43, 76, 56, 37, 26, 31, 25, 14,\n    35, 16, 60, 57, 97, 75, 114, 91, 54, 73, 55, 41, 48, 53, 23, 24,\n    58, 27, 50, 96, 76, 70, 93, 84, 77, 58, 79, 29, 74, 49, 41, 17,\n    47, 45, 78, 74, 115, 94, 90, 79, 69, 83, 71, 50, 59, 38, 36, 15,\n    72, 34, 56, 95, 92, 85, 91, 90, 86, 73, 77, 65, 51, 44, 43, 42,\n    43, 20, 30, 44, 55, 78, 72, 87, 78, 61, 46, 54, 37, 30, 20, 16,\n    53, 25, 41, 37, 44, 59, 54, 81, 66, 76, 57, 54, 37, 18, 39, 11,\n    35, 33, 31, 57, 42, 82, 72, 80, 47, 58, 55, 21, 22, 26, 38, 22,\n    53, 25, 23, 38, 70, 60, 51, 36, 55, 26, 34, 23, 27, 14, 9, 7,\n    34, 32, 28, 39, 49, 75, 30, 52, 48, 40, 52, 28, 18, 17, 9, 5,\n    45, 21, 34, 64, 56, 50, 49, 45, 31, 19, 12, 15, 10, 7, 6, 3,\n    48, 23, 20, 39, 36, 35, 53, 21, 16, 23, 13, 10, 6, 1, 4, 2,\n    16, 15, 17, 27, 25, 20, 29, 11, 17, 12, 16, 8, 1, 1, 0, 1\n];\n\nTables$1.t15HB = [\n    7, 12, 18, 53, 47, 76, 124, 108, 89, 123, 108, 119, 107, 81, 122, 63,\n    13, 5, 16, 27, 46, 36, 61, 51, 42, 70, 52, 83, 65, 41, 59, 36,\n    19, 17, 15, 24, 41, 34, 59, 48, 40, 64, 50, 78, 62, 80, 56, 33,\n    29, 28, 25, 43, 39, 63, 55, 93, 76, 59, 93, 72, 54, 75, 50, 29,\n    52, 22, 42, 40, 67, 57, 95, 79, 72, 57, 89, 69, 49, 66, 46, 27,\n    77, 37, 35, 66, 58, 52, 91, 74, 62, 48, 79, 63, 90, 62, 40, 38,\n    125, 32, 60, 56, 50, 92, 78, 65, 55, 87, 71, 51, 73, 51, 70, 30,\n    109, 53, 49, 94, 88, 75, 66, 122, 91, 73, 56, 42, 64, 44, 21, 25,\n    90, 43, 41, 77, 73, 63, 56, 92, 77, 66, 47, 67, 48, 53, 36, 20,\n    71, 34, 67, 60, 58, 49, 88, 76, 67, 106, 71, 54, 38, 39, 23, 15,\n    109, 53, 51, 47, 90, 82, 58, 57, 48, 72, 57, 41, 23, 27, 62, 9,\n    86, 42, 40, 37, 70, 64, 52, 43, 70, 55, 42, 25, 29, 18, 11, 11,\n    118, 68, 30, 55, 50, 46, 74, 65, 49, 39, 24, 16, 22, 13, 14, 7,\n    91, 44, 39, 38, 34, 63, 52, 45, 31, 52, 28, 19, 14, 8, 9, 3,\n    123, 60, 58, 53, 47, 43, 32, 22, 37, 24, 17, 12, 15, 10, 2, 1,\n    71, 37, 34, 30, 28, 20, 17, 26, 21, 16, 10, 6, 8, 6, 2, 0\n];\n\nTables$1.t16HB = [\n    1, 5, 14, 44, 74, 63, 110, 93, 172, 149, 138, 242, 225, 195, 376, 17,\n    3, 4, 12, 20, 35, 62, 53, 47, 83, 75, 68, 119, 201, 107, 207, 9,\n    15, 13, 23, 38, 67, 58, 103, 90, 161, 72, 127, 117, 110, 209, 206, 16,\n    45, 21, 39, 69, 64, 114, 99, 87, 158, 140, 252, 212, 199, 387, 365, 26,\n    75, 36, 68, 65, 115, 101, 179, 164, 155, 264, 246, 226, 395, 382, 362, 9,\n    66, 30, 59, 56, 102, 185, 173, 265, 142, 253, 232, 400, 388, 378, 445, 16,\n    111, 54, 52, 100, 184, 178, 160, 133, 257, 244, 228, 217, 385, 366, 715, 10,\n    98, 48, 91, 88, 165, 157, 148, 261, 248, 407, 397, 372, 380, 889, 884, 8,\n    85, 84, 81, 159, 156, 143, 260, 249, 427, 401, 392, 383, 727, 713, 708, 7,\n    154, 76, 73, 141, 131, 256, 245, 426, 406, 394, 384, 735, 359, 710, 352, 11,\n    139, 129, 67, 125, 247, 233, 229, 219, 393, 743, 737, 720, 885, 882, 439, 4,\n    243, 120, 118, 115, 227, 223, 396, 746, 742, 736, 721, 712, 706, 223, 436, 6,\n    202, 224, 222, 218, 216, 389, 386, 381, 364, 888, 443, 707, 440, 437, 1728, 4,\n    747, 211, 210, 208, 370, 379, 734, 723, 714, 1735, 883, 877, 876, 3459, 865, 2,\n    377, 369, 102, 187, 726, 722, 358, 711, 709, 866, 1734, 871, 3458, 870, 434, 0,\n    12, 10, 7, 11, 10, 17, 11, 9, 13, 12, 10, 7, 5, 3, 1, 3\n];\n\nTables$1.t24HB = [\n    15, 13, 46, 80, 146, 262, 248, 434, 426, 669, 653, 649, 621, 517, 1032, 88,\n    14, 12, 21, 38, 71, 130, 122, 216, 209, 198, 327, 345, 319, 297, 279, 42,\n    47, 22, 41, 74, 68, 128, 120, 221, 207, 194, 182, 340, 315, 295, 541, 18,\n    81, 39, 75, 70, 134, 125, 116, 220, 204, 190, 178, 325, 311, 293, 271, 16,\n    147, 72, 69, 135, 127, 118, 112, 210, 200, 188, 352, 323, 306, 285, 540, 14,\n    263, 66, 129, 126, 119, 114, 214, 202, 192, 180, 341, 317, 301, 281, 262, 12,\n    249, 123, 121, 117, 113, 215, 206, 195, 185, 347, 330, 308, 291, 272, 520, 10,\n    435, 115, 111, 109, 211, 203, 196, 187, 353, 332, 313, 298, 283, 531, 381, 17,\n    427, 212, 208, 205, 201, 193, 186, 177, 169, 320, 303, 286, 268, 514, 377, 16,\n    335, 199, 197, 191, 189, 181, 174, 333, 321, 305, 289, 275, 521, 379, 371, 11,\n    668, 184, 183, 179, 175, 344, 331, 314, 304, 290, 277, 530, 383, 373, 366, 10,\n    652, 346, 171, 168, 164, 318, 309, 299, 287, 276, 263, 513, 375, 368, 362, 6,\n    648, 322, 316, 312, 307, 302, 292, 284, 269, 261, 512, 376, 370, 364, 359, 4,\n    620, 300, 296, 294, 288, 282, 273, 266, 515, 380, 374, 369, 365, 361, 357, 2,\n    1033, 280, 278, 274, 267, 264, 259, 382, 378, 372, 367, 363, 360, 358, 356, 0,\n    43, 20, 19, 17, 15, 13, 11, 9, 7, 6, 4, 7, 5, 3, 1, 3\n];\n\nTables$1.t32HB = [\n    1 << 0, 5 << 1, 4 << 1, 5 << 2, 6 << 1, 5 << 2, 4 << 2, 4 << 3,\n    7 << 1, 3 << 2, 6 << 2, 0 << 3, 7 << 2, 2 << 3, 3 << 3, 1 << 4\n];\n\nTables$1.t33HB = [\n    15 << 0, 14 << 1, 13 << 1, 12 << 2, 11 << 1, 10 << 2, 9 << 2, 8 << 3,\n    7 << 1, 6 << 2, 5 << 2, 4 << 3, 3 << 2, 2 << 3, 1 << 3, 0 << 4\n];\n\nTables$1.t1l = [\n    1, 4,\n    3, 5\n];\n\nTables$1.t2l = [\n    1, 4, 7,\n    4, 5, 7,\n    6, 7, 8\n];\n\nTables$1.t3l = [\n    2, 3, 7,\n    4, 4, 7,\n    6, 7, 8\n];\n\nTables$1.t5l = [\n    1, 4, 7, 8,\n    4, 5, 8, 9,\n    7, 8, 9, 10,\n    8, 8, 9, 10\n];\n\nTables$1.t6l = [\n    3, 4, 6, 8,\n    4, 4, 6, 7,\n    5, 6, 7, 8,\n    7, 7, 8, 9\n];\n\nTables$1.t7l = [\n    1, 4, 7, 9, 9, 10,\n    4, 6, 8, 9, 9, 10,\n    7, 7, 9, 10, 10, 11,\n    8, 9, 10, 11, 11, 11,\n    8, 9, 10, 11, 11, 12,\n    9, 10, 11, 12, 12, 12\n];\n\nTables$1.t8l = [\n    2, 4, 7, 9, 9, 10,\n    4, 4, 6, 10, 10, 10,\n    7, 6, 8, 10, 10, 11,\n    9, 10, 10, 11, 11, 12,\n    9, 9, 10, 11, 12, 12,\n    10, 10, 11, 11, 13, 13\n];\n\nTables$1.t9l = [\n    3, 4, 6, 7, 9, 10,\n    4, 5, 6, 7, 8, 10,\n    5, 6, 7, 8, 9, 10,\n    7, 7, 8, 9, 9, 10,\n    8, 8, 9, 9, 10, 11,\n    9, 9, 10, 10, 11, 11\n];\n\nTables$1.t10l = [\n    1, 4, 7, 9, 10, 10, 10, 11,\n    4, 6, 8, 9, 10, 11, 10, 10,\n    7, 8, 9, 10, 11, 12, 11, 11,\n    8, 9, 10, 11, 12, 12, 11, 12,\n    9, 10, 11, 12, 12, 12, 12, 12,\n    10, 11, 12, 12, 13, 13, 12, 13,\n    9, 10, 11, 12, 12, 12, 13, 13,\n    10, 10, 11, 12, 12, 13, 13, 13\n];\n\nTables$1.t11l = [\n    2, 4, 6, 8, 9, 10, 9, 10,\n    4, 5, 6, 8, 10, 10, 9, 10,\n    6, 7, 8, 9, 10, 11, 10, 10,\n    8, 8, 9, 11, 10, 12, 10, 11,\n    9, 10, 10, 11, 11, 12, 11, 12,\n    9, 10, 11, 12, 12, 13, 12, 13,\n    9, 9, 9, 10, 11, 12, 12, 12,\n    9, 9, 10, 11, 12, 12, 12, 12\n];\n\nTables$1.t12l = [\n    4, 4, 6, 8, 9, 10, 10, 10,\n    4, 5, 6, 7, 9, 9, 10, 10,\n    6, 6, 7, 8, 9, 10, 9, 10,\n    7, 7, 8, 8, 9, 10, 10, 10,\n    8, 8, 9, 9, 10, 10, 10, 11,\n    9, 9, 10, 10, 10, 11, 10, 11,\n    9, 9, 9, 10, 10, 11, 11, 12,\n    10, 10, 10, 11, 11, 11, 11, 12\n];\n\nTables$1.t13l = [\n    1, 5, 7, 8, 9, 10, 10, 11, 10, 11, 12, 12, 13, 13, 14, 14,\n    4, 6, 8, 9, 10, 10, 11, 11, 11, 11, 12, 12, 13, 14, 14, 14,\n    7, 8, 9, 10, 11, 11, 12, 12, 11, 12, 12, 13, 13, 14, 15, 15,\n    8, 9, 10, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 15, 15,\n    9, 9, 11, 11, 12, 12, 13, 13, 12, 13, 13, 14, 14, 15, 15, 16,\n    10, 10, 11, 12, 12, 12, 13, 13, 13, 13, 14, 13, 15, 15, 16, 16,\n    10, 11, 12, 12, 13, 13, 13, 13, 13, 14, 14, 14, 15, 15, 16, 16,\n    11, 11, 12, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 16, 18, 18,\n    10, 10, 11, 12, 12, 13, 13, 14, 14, 14, 14, 15, 15, 16, 17, 17,\n    11, 11, 12, 12, 13, 13, 13, 15, 14, 15, 15, 16, 16, 16, 18, 17,\n    11, 12, 12, 13, 13, 14, 14, 15, 14, 15, 16, 15, 16, 17, 18, 19,\n    12, 12, 12, 13, 14, 14, 14, 14, 15, 15, 15, 16, 17, 17, 17, 18,\n    12, 13, 13, 14, 14, 15, 14, 15, 16, 16, 17, 17, 17, 18, 18, 18,\n    13, 13, 14, 15, 15, 15, 16, 16, 16, 16, 16, 17, 18, 17, 18, 18,\n    14, 14, 14, 15, 15, 15, 17, 16, 16, 19, 17, 17, 17, 19, 18, 18,\n    13, 14, 15, 16, 16, 16, 17, 16, 17, 17, 18, 18, 21, 20, 21, 18\n];\n\nTables$1.t15l = [\n    3, 5, 6, 8, 8, 9, 10, 10, 10, 11, 11, 12, 12, 12, 13, 14,\n    5, 5, 7, 8, 9, 9, 10, 10, 10, 11, 11, 12, 12, 12, 13, 13,\n    6, 7, 7, 8, 9, 9, 10, 10, 10, 11, 11, 12, 12, 13, 13, 13,\n    7, 8, 8, 9, 9, 10, 10, 11, 11, 11, 12, 12, 12, 13, 13, 13,\n    8, 8, 9, 9, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 13,\n    9, 9, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 13, 13, 13, 14,\n    10, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 14, 14,\n    10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 14,\n    10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 14, 14, 14,\n    10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14,\n    11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 14, 15, 14,\n    11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 15,\n    12, 12, 11, 12, 12, 12, 13, 13, 13, 13, 13, 13, 14, 14, 15, 15,\n    12, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15,\n    13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 14, 15,\n    13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15, 15, 15\n];\n\nTables$1.t16_5l = [\n    1, 5, 7, 9, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 14, 11,\n    4, 6, 8, 9, 10, 11, 11, 11, 12, 12, 12, 13, 14, 13, 14, 11,\n    7, 8, 9, 10, 11, 11, 12, 12, 13, 12, 13, 13, 13, 14, 14, 12,\n    9, 9, 10, 11, 11, 12, 12, 12, 13, 13, 14, 14, 14, 15, 15, 13,\n    10, 10, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 12,\n    10, 10, 11, 11, 12, 13, 13, 14, 13, 14, 14, 15, 15, 15, 16, 13,\n    11, 11, 11, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 16, 13,\n    11, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 17, 17, 13,\n    11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 13,\n    12, 12, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 15, 16, 15, 14,\n    12, 13, 12, 13, 14, 14, 14, 14, 15, 16, 16, 16, 17, 17, 16, 13,\n    13, 13, 13, 13, 14, 14, 15, 16, 16, 16, 16, 16, 16, 15, 16, 14,\n    13, 14, 14, 14, 14, 15, 15, 15, 15, 17, 16, 16, 16, 16, 18, 14,\n    15, 14, 14, 14, 15, 15, 16, 16, 16, 18, 17, 17, 17, 19, 17, 14,\n    14, 15, 13, 14, 16, 16, 15, 16, 16, 17, 18, 17, 19, 17, 16, 14,\n    11, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 12\n];\n\nTables$1.t16l = [\n    1, 5, 7, 9, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 14, 10,\n    4, 6, 8, 9, 10, 11, 11, 11, 12, 12, 12, 13, 14, 13, 14, 10,\n    7, 8, 9, 10, 11, 11, 12, 12, 13, 12, 13, 13, 13, 14, 14, 11,\n    9, 9, 10, 11, 11, 12, 12, 12, 13, 13, 14, 14, 14, 15, 15, 12,\n    10, 10, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 11,\n    10, 10, 11, 11, 12, 13, 13, 14, 13, 14, 14, 15, 15, 15, 16, 12,\n    11, 11, 11, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 16, 12,\n    11, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 17, 17, 12,\n    11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 12,\n    12, 12, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 15, 16, 15, 13,\n    12, 13, 12, 13, 14, 14, 14, 14, 15, 16, 16, 16, 17, 17, 16, 12,\n    13, 13, 13, 13, 14, 14, 15, 16, 16, 16, 16, 16, 16, 15, 16, 13,\n    13, 14, 14, 14, 14, 15, 15, 15, 15, 17, 16, 16, 16, 16, 18, 13,\n    15, 14, 14, 14, 15, 15, 16, 16, 16, 18, 17, 17, 17, 19, 17, 13,\n    14, 15, 13, 14, 16, 16, 15, 16, 16, 17, 18, 17, 19, 17, 16, 13,\n    10, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 10\n];\n\nTables$1.t24l = [\n    4, 5, 7, 8, 9, 10, 10, 11, 11, 12, 12, 12, 12, 12, 13, 10,\n    5, 6, 7, 8, 9, 10, 10, 11, 11, 11, 12, 12, 12, 12, 12, 10,\n    7, 7, 8, 9, 9, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 9,\n    8, 8, 9, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 9,\n    9, 9, 9, 10, 10, 10, 10, 11, 11, 11, 12, 12, 12, 12, 13, 9,\n    10, 9, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 9,\n    10, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 9,\n    11, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 10,\n    11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 10,\n    11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 10,\n    12, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 10,\n    12, 12, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 10,\n    12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 10,\n    12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 10,\n    13, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 10,\n    9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 6\n];\n\nTables$1.t32l = [\n    1 + 0, 4 + 1, 4 + 1, 5 + 2, 4 + 1, 6 + 2, 5 + 2, 6 + 3,\n    4 + 1, 5 + 2, 5 + 2, 6 + 3, 5 + 2, 6 + 3, 6 + 3, 6 + 4\n];\n\nTables$1.t33l = [\n    4 + 0, 4 + 1, 4 + 1, 4 + 2, 4 + 1, 4 + 2, 4 + 2, 4 + 3,\n    4 + 1, 4 + 2, 4 + 2, 4 + 3, 4 + 2, 4 + 3, 4 + 3, 4 + 4\n];\n\nTables$1.ht = [\n    /* xlen, linmax, table, hlen */\n    new HuffCodeTab(0, 0, null, null),\n    new HuffCodeTab(2, 0, Tables$1.t1HB, Tables$1.t1l),\n    new HuffCodeTab(3, 0, Tables$1.t2HB, Tables$1.t2l),\n    new HuffCodeTab(3, 0, Tables$1.t3HB, Tables$1.t3l),\n    new HuffCodeTab(0, 0, null, null), /* Apparently not used */\n    new HuffCodeTab(4, 0, Tables$1.t5HB, Tables$1.t5l),\n    new HuffCodeTab(4, 0, Tables$1.t6HB, Tables$1.t6l),\n    new HuffCodeTab(6, 0, Tables$1.t7HB, Tables$1.t7l),\n    new HuffCodeTab(6, 0, Tables$1.t8HB, Tables$1.t8l),\n    new HuffCodeTab(6, 0, Tables$1.t9HB, Tables$1.t9l),\n    new HuffCodeTab(8, 0, Tables$1.t10HB, Tables$1.t10l),\n    new HuffCodeTab(8, 0, Tables$1.t11HB, Tables$1.t11l),\n    new HuffCodeTab(8, 0, Tables$1.t12HB, Tables$1.t12l),\n    new HuffCodeTab(16, 0, Tables$1.t13HB, Tables$1.t13l),\n    new HuffCodeTab(0, 0, null, Tables$1.t16_5l), /* Apparently not used */\n    new HuffCodeTab(16, 0, Tables$1.t15HB, Tables$1.t15l),\n\n    new HuffCodeTab(1, 1, Tables$1.t16HB, Tables$1.t16l),\n    new HuffCodeTab(2, 3, Tables$1.t16HB, Tables$1.t16l),\n    new HuffCodeTab(3, 7, Tables$1.t16HB, Tables$1.t16l),\n    new HuffCodeTab(4, 15, Tables$1.t16HB, Tables$1.t16l),\n    new HuffCodeTab(6, 63, Tables$1.t16HB, Tables$1.t16l),\n    new HuffCodeTab(8, 255, Tables$1.t16HB, Tables$1.t16l),\n    new HuffCodeTab(10, 1023, Tables$1.t16HB, Tables$1.t16l),\n    new HuffCodeTab(13, 8191, Tables$1.t16HB, Tables$1.t16l),\n\n    new HuffCodeTab(4, 15, Tables$1.t24HB, Tables$1.t24l),\n    new HuffCodeTab(5, 31, Tables$1.t24HB, Tables$1.t24l),\n    new HuffCodeTab(6, 63, Tables$1.t24HB, Tables$1.t24l),\n    new HuffCodeTab(7, 127, Tables$1.t24HB, Tables$1.t24l),\n    new HuffCodeTab(8, 255, Tables$1.t24HB, Tables$1.t24l),\n    new HuffCodeTab(9, 511, Tables$1.t24HB, Tables$1.t24l),\n    new HuffCodeTab(11, 2047, Tables$1.t24HB, Tables$1.t24l),\n    new HuffCodeTab(13, 8191, Tables$1.t24HB, Tables$1.t24l),\n\n    new HuffCodeTab(0, 0, Tables$1.t32HB, Tables$1.t32l),\n    new HuffCodeTab(0, 0, Tables$1.t33HB, Tables$1.t33l),\n];\n\n/**\n * <CODE>\n *  for (i = 0; i < 16*16; i++) [\n *      largetbl[i] = ((ht[16].hlen[i]) << 16) + ht[24].hlen[i];\n *  ]\n * </CODE>\n *\n */\nTables$1.largetbl = [\n    0x010004, 0x050005, 0x070007, 0x090008, 0x0a0009, 0x0a000a, 0x0b000a, 0x0b000b,\n    0x0c000b, 0x0c000c, 0x0c000c, 0x0d000c, 0x0d000c, 0x0d000c, 0x0e000d, 0x0a000a,\n    0x040005, 0x060006, 0x080007, 0x090008, 0x0a0009, 0x0b000a, 0x0b000a, 0x0b000b,\n    0x0c000b, 0x0c000b, 0x0c000c, 0x0d000c, 0x0e000c, 0x0d000c, 0x0e000c, 0x0a000a,\n    0x070007, 0x080007, 0x090008, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000b,\n    0x0d000b, 0x0c000b, 0x0d000b, 0x0d000c, 0x0d000c, 0x0e000c, 0x0e000d, 0x0b0009,\n    0x090008, 0x090008, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000a, 0x0c000b,\n    0x0d000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0c0009,\n    0x0a0009, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000a, 0x0d000a, 0x0d000b,\n    0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000d, 0x0b0009,\n    0x0a000a, 0x0a0009, 0x0b000a, 0x0b000a, 0x0c000a, 0x0d000a, 0x0d000b, 0x0e000b,\n    0x0d000b, 0x0e000b, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x0c0009,\n    0x0b000a, 0x0b000a, 0x0b000a, 0x0c000a, 0x0d000a, 0x0d000b, 0x0d000b, 0x0d000b,\n    0x0e000b, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x10000d, 0x0c0009,\n    0x0b000b, 0x0b000a, 0x0c000a, 0x0c000a, 0x0d000b, 0x0d000b, 0x0d000b, 0x0e000b,\n    0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x11000d, 0x11000d, 0x0c000a,\n    0x0b000b, 0x0c000b, 0x0c000b, 0x0d000b, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000b,\n    0x0f000b, 0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x10000d, 0x10000d, 0x0c000a,\n    0x0c000b, 0x0c000b, 0x0c000b, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000b, 0x0f000c,\n    0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x0f000d, 0x10000d, 0x0f000d, 0x0d000a,\n    0x0c000c, 0x0d000b, 0x0c000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0e000c,\n    0x0f000c, 0x10000c, 0x10000c, 0x10000d, 0x11000d, 0x11000d, 0x10000d, 0x0c000a,\n    0x0d000c, 0x0d000c, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0f000c, 0x10000c,\n    0x10000c, 0x10000c, 0x10000c, 0x10000d, 0x10000d, 0x0f000d, 0x10000d, 0x0d000a,\n    0x0d000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c,\n    0x0f000c, 0x11000c, 0x10000d, 0x10000d, 0x10000d, 0x10000d, 0x12000d, 0x0d000a,\n    0x0f000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x10000c, 0x10000c,\n    0x10000d, 0x12000d, 0x11000d, 0x11000d, 0x11000d, 0x13000d, 0x11000d, 0x0d000a,\n    0x0e000d, 0x0f000c, 0x0d000c, 0x0e000c, 0x10000c, 0x10000c, 0x0f000c, 0x10000d,\n    0x10000d, 0x11000d, 0x12000d, 0x11000d, 0x13000d, 0x11000d, 0x10000d, 0x0d000a,\n    0x0a0009, 0x0a0009, 0x0a0009, 0x0b0009, 0x0b0009, 0x0c0009, 0x0c0009, 0x0c0009,\n    0x0d0009, 0x0d0009, 0x0d0009, 0x0d000a, 0x0d000a, 0x0d000a, 0x0d000a, 0x0a0006\n];\n/**\n * <CODE>\n *  for (i = 0; i < 3*3; i++) [\n *      table23[i] = ((ht[2].hlen[i]) << 16) + ht[3].hlen[i];\n *  ]\n * </CODE>\n *\n */\nTables$1.table23 = [\n    0x010002, 0x040003, 0x070007,\n    0x040004, 0x050004, 0x070007,\n    0x060006, 0x070007, 0x080008\n];\n\n/**\n * <CODE>\n *  for (i = 0; i < 4*4; i++) [\n *       table56[i] = ((ht[5].hlen[i]) << 16) + ht[6].hlen[i];\n *   ]\n * </CODE>\n *\n */\nTables$1.table56 = [\n    0x010003, 0x040004, 0x070006, 0x080008, 0x040004, 0x050004, 0x080006, 0x090007,\n    0x070005, 0x080006, 0x090007, 0x0a0008, 0x080007, 0x080007, 0x090008, 0x0a0009\n];\n\nTables$1.bitrate_table = [\n    [0, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160, -1], /* MPEG 2 */\n    [0, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, -1], /* MPEG 1 */\n    [0, 8, 16, 24, 32, 40, 48, 56, 64, -1, -1, -1, -1, -1, -1, -1], /* MPEG 2.5 */\n];\n\n/**\n * MPEG 2, MPEG 1, MPEG 2.5.\n */\nTables$1.samplerate_table = [\n    [22050, 24000, 16000, -1],\n    [44100, 48000, 32000, -1],\n    [11025, 12000, 8000, -1],\n];\n\n/**\n * This is the scfsi_band table from 2.4.2.7 of the IS.\n */\nTables$1.scfsi_band = [0, 6, 11, 16, 21];\n\nvar Tables_1 = Tables$1;\n\nvar VbrMode$19 = common.VbrMode;\nvar Float$19 = common.Float;\nvar Util$19 = common.Util;\nvar new_float$19 = common.new_float;\nvar new_int$19 = common.new_int;\nvar assert$19 = common.assert;\n\n\n\n\n\nQuantizePVT$1.Q_MAX = (256 + 1);\nQuantizePVT$1.Q_MAX2 = 116;\nQuantizePVT$1.LARGE_BITS = 100000;\nQuantizePVT$1.IXMAX_VAL = 8206;\n\nfunction QuantizePVT$1() {\n\n    var tak = null;\n    var rv = null;\n    var psy = null;\n\n    this.setModules = function (_tk, _rv, _psy) {\n        tak = _tk;\n        rv = _rv;\n        psy = _psy;\n    };\n\n    function POW20(x) {\n        assert$19(0 <= (x + QuantizePVT$1.Q_MAX2) && x < QuantizePVT$1.Q_MAX);\n        return pow20[x + QuantizePVT$1.Q_MAX2];\n    }\n\n    this.IPOW20 = function (x) {\n        assert$19(0 <= x && x < QuantizePVT$1.Q_MAX);\n        return ipow20[x];\n    };\n\n    /**\n     * smallest such that 1.0+DBL_EPSILON != 1.0\n     */\n    var DBL_EPSILON = 2.2204460492503131e-016;\n\n    /**\n     * ix always <= 8191+15. see count_bits()\n     */\n    var IXMAX_VAL = QuantizePVT$1.IXMAX_VAL;\n\n    var PRECALC_SIZE = (IXMAX_VAL + 2);\n\n    var Q_MAX = QuantizePVT$1.Q_MAX;\n\n\n    /**\n     * <CODE>\n     * minimum possible number of\n     * -cod_info.global_gain + ((scalefac[] + (cod_info.preflag ? pretab[sfb] : 0))\n     * << (cod_info.scalefac_scale + 1)) + cod_info.subblock_gain[cod_info.window[sfb]] * 8;\n     *\n     * for long block, 0+((15+3)<<2) = 18*4 = 72\n     * for short block, 0+(15<<2)+7*8 = 15*4+56 = 116\n     * </CODE>\n     */\n    var Q_MAX2 = QuantizePVT$1.Q_MAX2;\n\n    var LARGE_BITS = QuantizePVT$1.LARGE_BITS;\n\n\n    /**\n     * Assuming dynamic range=96dB, this value should be 92\n     */\n    var NSATHSCALE = 100;\n\n    /**\n     * The following table is used to implement the scalefactor partitioning for\n     * MPEG2 as described in section 2.4.3.2 of the IS. The indexing corresponds\n     * to the way the tables are presented in the IS:\n     *\n     * [table_number][row_in_table][column of nr_of_sfb]\n     */\n    this.nr_of_sfb_block = [\n        [[6, 5, 5, 5], [9, 9, 9, 9], [6, 9, 9, 9]],\n        [[6, 5, 7, 3], [9, 9, 12, 6], [6, 9, 12, 6]],\n        [[11, 10, 0, 0], [18, 18, 0, 0], [15, 18, 0, 0]],\n        [[7, 7, 7, 0], [12, 12, 12, 0], [6, 15, 12, 0]],\n        [[6, 6, 6, 3], [12, 9, 9, 6], [6, 12, 9, 6]],\n        [[8, 8, 5, 0], [15, 12, 9, 0], [6, 18, 9, 0]]];\n\n    /**\n     * Table B.6: layer3 preemphasis\n     */\n    var pretab = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,\n        2, 2, 3, 3, 3, 2, 0];\n    this.pretab = pretab;\n\n    /**\n     * Here are MPEG1 Table B.8 and MPEG2 Table B.1 -- Layer III scalefactor\n     * bands. <BR>\n     * Index into this using a method such as:<BR>\n     * idx = fr_ps.header.sampling_frequency + (fr_ps.header.version * 3)\n     */\n    this.sfBandIndex = [\n        // Table B.2.b: 22.05 kHz\n        new ScaleFac_1([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0, 4, 8, 12, 18, 24, 32, 42, 56, 74, 100, 132, 174, 192]\n            , [0, 0, 0, 0, 0, 0, 0] //  sfb21 pseudo sub bands\n            , [0, 0, 0, 0, 0, 0, 0] //  sfb12 pseudo sub bands\n        ),\n        /* Table B.2.c: 24 kHz */ /* docs: 332. mpg123(broken): 330 */\n        new ScaleFac_1([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 114, 136, 162, 194, 232, 278, 332, 394, 464,\n                540, 576],\n            [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 136, 180, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.2.a: 16 kHz */\n        new ScaleFac_1([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 134, 174, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.8.b: 44.1 kHz */\n        new ScaleFac_1([0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 52, 62, 74, 90, 110, 134, 162, 196, 238, 288, 342, 418,\n                576],\n            [0, 4, 8, 12, 16, 22, 30, 40, 52, 66, 84, 106, 136, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.8.c: 48 kHz */\n        new ScaleFac_1([0, 4, 8, 12, 16, 20, 24, 30, 36, 42, 50, 60, 72, 88, 106, 128, 156, 190, 230, 276, 330, 384,\n                576],\n            [0, 4, 8, 12, 16, 22, 28, 38, 50, 64, 80, 100, 126, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.8.a: 32 kHz */\n        new ScaleFac_1([0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 54, 66, 82, 102, 126, 156, 194, 240, 296, 364, 448, 550,\n                576],\n            [0, 4, 8, 12, 16, 22, 30, 42, 58, 78, 104, 138, 180, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* MPEG-2.5 11.025 kHz */\n        new ScaleFac_1([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0 / 3, 12 / 3, 24 / 3, 36 / 3, 54 / 3, 78 / 3, 108 / 3, 144 / 3, 186 / 3, 240 / 3, 312 / 3,\n                402 / 3, 522 / 3, 576 / 3]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* MPEG-2.5 12 kHz */\n        new ScaleFac_1([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0 / 3, 12 / 3, 24 / 3, 36 / 3, 54 / 3, 78 / 3, 108 / 3, 144 / 3, 186 / 3, 240 / 3, 312 / 3,\n                402 / 3, 522 / 3, 576 / 3]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* MPEG-2.5 8 kHz */\n        new ScaleFac_1([0, 12, 24, 36, 48, 60, 72, 88, 108, 132, 160, 192, 232, 280, 336, 400, 476, 566, 568, 570,\n                572, 574, 576],\n            [0 / 3, 24 / 3, 48 / 3, 72 / 3, 108 / 3, 156 / 3, 216 / 3, 288 / 3, 372 / 3, 480 / 3, 486 / 3,\n                492 / 3, 498 / 3, 576 / 3]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        )\n    ];\n\n    var pow20 = new_float$19(Q_MAX + Q_MAX2 + 1);\n    var ipow20 = new_float$19(Q_MAX);\n    var pow43 = new_float$19(PRECALC_SIZE);\n\n    var adj43 = new_float$19(PRECALC_SIZE);\n    this.adj43 = adj43;\n\n    /**\n     * <PRE>\n     * compute the ATH for each scalefactor band cd range: 0..96db\n     *\n     * Input: 3.3kHz signal 32767 amplitude (3.3kHz is where ATH is smallest =\n     * -5db) longblocks: sfb=12 en0/bw=-11db max_en0 = 1.3db shortblocks: sfb=5\n     * -9db 0db\n     *\n     * Input: 1 1 1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 (repeated) longblocks: amp=1\n     * sfb=12 en0/bw=-103 db max_en0 = -92db amp=32767 sfb=12 -12 db -1.4db\n     *\n     * Input: 1 1 1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 (repeated) shortblocks: amp=1\n     * sfb=5 en0/bw= -99 -86 amp=32767 sfb=5 -9 db 4db\n     *\n     *\n     * MAX energy of largest wave at 3.3kHz = 1db AVE energy of largest wave at\n     * 3.3kHz = -11db Let's take AVE: -11db = maximum signal in sfb=12. Dynamic\n     * range of CD: 96db. Therefor energy of smallest audible wave in sfb=12 =\n     * -11 - 96 = -107db = ATH at 3.3kHz.\n     *\n     * ATH formula for this wave: -5db. To adjust to LAME scaling, we need ATH =\n     * ATH_formula - 103 (db) ATH = ATH * 2.5e-10 (ener)\n     * </PRE>\n     */\n    function ATHmdct(gfp, f) {\n        var ath = psy.ATHformula(f, gfp);\n\n        ath -= NSATHSCALE;\n\n        /* modify the MDCT scaling for the ATH and convert to energy */\n        ath = Math.pow(10.0, ath / 10.0 + gfp.ATHlower);\n        return ath;\n    }\n\n    function compute_ath(gfp) {\n        var ATH_l = gfp.internal_flags.ATH.l;\n        var ATH_psfb21 = gfp.internal_flags.ATH.psfb21;\n        var ATH_s = gfp.internal_flags.ATH.s;\n        var ATH_psfb12 = gfp.internal_flags.ATH.psfb12;\n        var gfc = gfp.internal_flags;\n        var samp_freq = gfp.out_samplerate;\n\n        for (var sfb = 0; sfb < Encoder_1.SBMAX_l; sfb++) {\n            var start = gfc.scalefac_band.l[sfb];\n            var end = gfc.scalefac_band.l[sfb + 1];\n            ATH_l[sfb] = Float$19.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 576);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_l[sfb] = Math.min(ATH_l[sfb], ATH_f);\n            }\n        }\n\n        for (var sfb = 0; sfb < Encoder_1.PSFB21; sfb++) {\n            var start = gfc.scalefac_band.psfb21[sfb];\n            var end = gfc.scalefac_band.psfb21[sfb + 1];\n            ATH_psfb21[sfb] = Float$19.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 576);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_psfb21[sfb] = Math.min(ATH_psfb21[sfb], ATH_f);\n            }\n        }\n\n        for (var sfb = 0; sfb < Encoder_1.SBMAX_s; sfb++) {\n            var start = gfc.scalefac_band.s[sfb];\n            var end = gfc.scalefac_band.s[sfb + 1];\n            ATH_s[sfb] = Float$19.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 192);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_s[sfb] = Math.min(ATH_s[sfb], ATH_f);\n            }\n            ATH_s[sfb] *= (gfc.scalefac_band.s[sfb + 1] - gfc.scalefac_band.s[sfb]);\n        }\n\n        for (var sfb = 0; sfb < Encoder_1.PSFB12; sfb++) {\n            var start = gfc.scalefac_band.psfb12[sfb];\n            var end = gfc.scalefac_band.psfb12[sfb + 1];\n            ATH_psfb12[sfb] = Float$19.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 192);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_psfb12[sfb] = Math.min(ATH_psfb12[sfb], ATH_f);\n            }\n            /* not sure about the following */\n            ATH_psfb12[sfb] *= (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12]);\n        }\n\n        /*\n         * no-ATH mode: reduce ATH to -200 dB\n         */\n        if (gfp.noATH) {\n            for (var sfb = 0; sfb < Encoder_1.SBMAX_l; sfb++) {\n                ATH_l[sfb] = 1E-20;\n            }\n            for (var sfb = 0; sfb < Encoder_1.PSFB21; sfb++) {\n                ATH_psfb21[sfb] = 1E-20;\n            }\n            for (var sfb = 0; sfb < Encoder_1.SBMAX_s; sfb++) {\n                ATH_s[sfb] = 1E-20;\n            }\n            for (var sfb = 0; sfb < Encoder_1.PSFB12; sfb++) {\n                ATH_psfb12[sfb] = 1E-20;\n            }\n        }\n\n        /*\n         * work in progress, don't rely on it too much\n         */\n        gfc.ATH.floor = 10. * Math.log10(ATHmdct(gfp, -1.));\n    }\n\n    /**\n     * initialization for iteration_loop\n     */\n    this.iteration_init = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var l3_side = gfc.l3_side;\n        var i;\n\n        if (gfc.iteration_init_init == 0) {\n            gfc.iteration_init_init = 1;\n\n            l3_side.main_data_begin = 0;\n            compute_ath(gfp);\n\n            pow43[0] = 0.0;\n            for (i = 1; i < PRECALC_SIZE; i++)\n                pow43[i] = Math.pow(i, 4.0 / 3.0);\n\n            for (i = 0; i < PRECALC_SIZE - 1; i++)\n                adj43[i] = ((i + 1) - Math.pow(\n                    0.5 * (pow43[i] + pow43[i + 1]), 0.75));\n            adj43[i] = 0.5;\n\n            for (i = 0; i < Q_MAX; i++)\n                ipow20[i] = Math.pow(2.0, (i - 210) * -0.1875);\n            for (i = 0; i <= Q_MAX + Q_MAX2; i++)\n                pow20[i] = Math.pow(2.0, (i - 210 - Q_MAX2) * 0.25);\n\n            tak.huffman_init(gfc);\n\n            {\n                var bass, alto, treble, sfb21;\n\n                i = (gfp.exp_nspsytune >> 2) & 63;\n                if (i >= 32)\n                    i -= 64;\n                bass = Math.pow(10, i / 4.0 / 10.0);\n\n                i = (gfp.exp_nspsytune >> 8) & 63;\n                if (i >= 32)\n                    i -= 64;\n                alto = Math.pow(10, i / 4.0 / 10.0);\n\n                i = (gfp.exp_nspsytune >> 14) & 63;\n                if (i >= 32)\n                    i -= 64;\n                treble = Math.pow(10, i / 4.0 / 10.0);\n\n                /*\n                 * to be compatible with Naoki's original code, the next 6 bits\n                 * define only the amount of changing treble for sfb21\n                 */\n                i = (gfp.exp_nspsytune >> 20) & 63;\n                if (i >= 32)\n                    i -= 64;\n                sfb21 = treble * Math.pow(10, i / 4.0 / 10.0);\n                for (i = 0; i < Encoder_1.SBMAX_l; i++) {\n                    var f;\n                    if (i <= 6)\n                        f = bass;\n                    else if (i <= 13)\n                        f = alto;\n                    else if (i <= 20)\n                        f = treble;\n                    else\n                        f = sfb21;\n\n                    gfc.nsPsy.longfact[i] = f;\n                }\n                for (i = 0; i < Encoder_1.SBMAX_s; i++) {\n                    var f;\n                    if (i <= 5)\n                        f = bass;\n                    else if (i <= 10)\n                        f = alto;\n                    else if (i <= 11)\n                        f = treble;\n                    else\n                        f = sfb21;\n\n                    gfc.nsPsy.shortfact[i] = f;\n                }\n            }\n        }\n    };\n\n    /**\n     * allocate bits among 2 channels based on PE<BR>\n     * mt 6/99<BR>\n     * bugfixes rh 8/01: often allocated more than the allowed 4095 bits\n     */\n    this.on_pe = function (gfp, pe,\n                           targ_bits, mean_bits, gr, cbr) {\n        var gfc = gfp.internal_flags;\n        var tbits = 0, bits;\n        var add_bits = new_int$19(2);\n        var ch;\n\n        /* allocate targ_bits for granule */\n        var mb = new MeanBits_1(tbits);\n        var extra_bits = rv.ResvMaxBits(gfp, mean_bits, mb, cbr);\n        tbits = mb.bits;\n        /* maximum allowed bits for this granule */\n        var max_bits = tbits + extra_bits;\n        if (max_bits > LameInternalFlags_1.MAX_BITS_PER_GRANULE) {\n            // hard limit per granule\n            max_bits = LameInternalFlags_1.MAX_BITS_PER_GRANULE;\n        }\n        for (bits = 0, ch = 0; ch < gfc.channels_out; ++ch) {\n            /******************************************************************\n             * allocate bits for each channel\n             ******************************************************************/\n            targ_bits[ch] = Math.min(LameInternalFlags_1.MAX_BITS_PER_CHANNEL,\n                tbits / gfc.channels_out);\n\n            add_bits[ch] = 0 | (targ_bits[ch] * pe[gr][ch] / 700.0 - targ_bits[ch]);\n\n            /* at most increase bits by 1.5*average */\n            if (add_bits[ch] > mean_bits * 3 / 4)\n                add_bits[ch] = mean_bits * 3 / 4;\n            if (add_bits[ch] < 0)\n                add_bits[ch] = 0;\n\n            if (add_bits[ch] + targ_bits[ch] > LameInternalFlags_1.MAX_BITS_PER_CHANNEL)\n                add_bits[ch] = Math.max(0,\n                    LameInternalFlags_1.MAX_BITS_PER_CHANNEL - targ_bits[ch]);\n\n            bits += add_bits[ch];\n        }\n        if (bits > extra_bits) {\n            for (ch = 0; ch < gfc.channels_out; ++ch) {\n                add_bits[ch] = extra_bits * add_bits[ch] / bits;\n            }\n        }\n\n        for (ch = 0; ch < gfc.channels_out; ++ch) {\n            targ_bits[ch] += add_bits[ch];\n            extra_bits -= add_bits[ch];\n        }\n\n        for (bits = 0, ch = 0; ch < gfc.channels_out; ++ch) {\n            bits += targ_bits[ch];\n        }\n        if (bits > LameInternalFlags_1.MAX_BITS_PER_GRANULE) {\n            var sum = 0;\n            for (ch = 0; ch < gfc.channels_out; ++ch) {\n                targ_bits[ch] *= LameInternalFlags_1.MAX_BITS_PER_GRANULE;\n                targ_bits[ch] /= bits;\n                sum += targ_bits[ch];\n            }\n            assert$19(sum <= LameInternalFlags_1.MAX_BITS_PER_GRANULE);\n        }\n\n        return max_bits;\n    };\n\n    this.reduce_side = function (targ_bits, ms_ener_ratio, mean_bits, max_bits) {\n        assert$19(max_bits <= LameInternalFlags_1.MAX_BITS_PER_GRANULE);\n        assert$19(targ_bits[0] + targ_bits[1] <= LameInternalFlags_1.MAX_BITS_PER_GRANULE);\n\n        /*\n         * ms_ener_ratio = 0: allocate 66/33 mid/side fac=.33 ms_ener_ratio =.5:\n         * allocate 50/50 mid/side fac= 0\n         */\n        /* 75/25 split is fac=.5 */\n        var fac = .33 * (.5 - ms_ener_ratio) / .5;\n        if (fac < 0)\n            fac = 0;\n        if (fac > .5)\n            fac = .5;\n\n        /* number of bits to move from side channel to mid channel */\n        /* move_bits = fac*targ_bits[1]; */\n        var move_bits = 0 | (fac * .5 * (targ_bits[0] + targ_bits[1]));\n\n        if (move_bits > LameInternalFlags_1.MAX_BITS_PER_CHANNEL - targ_bits[0]) {\n            move_bits = LameInternalFlags_1.MAX_BITS_PER_CHANNEL - targ_bits[0];\n        }\n        if (move_bits < 0)\n            move_bits = 0;\n\n        if (targ_bits[1] >= 125) {\n            /* dont reduce side channel below 125 bits */\n            if (targ_bits[1] - move_bits > 125) {\n\n                /* if mid channel already has 2x more than average, dont bother */\n                /* mean_bits = bits per granule (for both channels) */\n                if (targ_bits[0] < mean_bits)\n                    targ_bits[0] += move_bits;\n                targ_bits[1] -= move_bits;\n            } else {\n                targ_bits[0] += targ_bits[1] - 125;\n                targ_bits[1] = 125;\n            }\n        }\n\n        move_bits = targ_bits[0] + targ_bits[1];\n        if (move_bits > max_bits) {\n            targ_bits[0] = (max_bits * targ_bits[0]) / move_bits;\n            targ_bits[1] = (max_bits * targ_bits[1]) / move_bits;\n        }\n        assert$19(targ_bits[0] <= LameInternalFlags_1.MAX_BITS_PER_CHANNEL);\n        assert$19(targ_bits[1] <= LameInternalFlags_1.MAX_BITS_PER_CHANNEL);\n        assert$19(targ_bits[0] + targ_bits[1] <= LameInternalFlags_1.MAX_BITS_PER_GRANULE);\n    };\n\n    /**\n     *  Robert Hegemann 2001-04-27:\n     *  this adjusts the ATH, keeping the original noise floor\n     *  affects the higher frequencies more than the lower ones\n     */\n    this.athAdjust = function (a, x, athFloor) {\n        /*\n         * work in progress\n         */\n        var o = 90.30873362;\n        var p = 94.82444863;\n        var u = Util$19.FAST_LOG10_X(x, 10.0);\n        var v = a * a;\n        var w = 0.0;\n        u -= athFloor;\n        /* undo scaling */\n        if (v > 1E-20)\n            w = 1. + Util$19.FAST_LOG10_X(v, 10.0 / o);\n        if (w < 0)\n            w = 0.;\n        u *= w;\n        u += athFloor + o - p;\n        /* redo scaling */\n\n        return Math.pow(10., 0.1 * u);\n    };\n\n    /**\n     * Calculate the allowed distortion for each scalefactor band, as determined\n     * by the psychoacoustic model. xmin(sb) = ratio(sb) * en(sb) / bw(sb)\n     *\n     * returns number of sfb's with energy > ATH\n     */\n    this.calc_xmin = function (gfp, ratio, cod_info, pxmin) {\n        var pxminPos = 0;\n        var gfc = gfp.internal_flags;\n        var gsfb, j = 0, ath_over = 0;\n        var ATH = gfc.ATH;\n        var xr = cod_info.xr;\n        var enable_athaa_fix = (gfp.VBR == VbrMode$19.vbr_mtrh) ? 1 : 0;\n        var masking_lower = gfc.masking_lower;\n\n        if (gfp.VBR == VbrMode$19.vbr_mtrh || gfp.VBR == VbrMode$19.vbr_mt) {\n            /* was already done in PSY-Model */\n            masking_lower = 1.0;\n        }\n\n        for (gsfb = 0; gsfb < cod_info.psy_lmax; gsfb++) {\n            var en0, xmin;\n            var rh1, rh2;\n            var width, l;\n\n            if (gfp.VBR == VbrMode$19.vbr_rh || gfp.VBR == VbrMode$19.vbr_mtrh)\n                xmin = athAdjust(ATH.adjust, ATH.l[gsfb], ATH.floor);\n            else\n                xmin = ATH.adjust * ATH.l[gsfb];\n\n            width = cod_info.width[gsfb];\n            rh1 = xmin / width;\n            rh2 = DBL_EPSILON;\n            l = width >> 1;\n            en0 = 0.0;\n            do {\n                var xa, xb;\n                xa = xr[j] * xr[j];\n                en0 += xa;\n                rh2 += (xa < rh1) ? xa : rh1;\n                j++;\n                xb = xr[j] * xr[j];\n                en0 += xb;\n                rh2 += (xb < rh1) ? xb : rh1;\n                j++;\n            } while (--l > 0);\n            if (en0 > xmin)\n                ath_over++;\n\n            if (gsfb == Encoder_1.SBPSY_l) {\n                var x = xmin * gfc.nsPsy.longfact[gsfb];\n                if (rh2 < x) {\n                    rh2 = x;\n                }\n            }\n            if (enable_athaa_fix != 0) {\n                xmin = rh2;\n            }\n            if (!gfp.ATHonly) {\n                var e = ratio.en.l[gsfb];\n                if (e > 0.0) {\n                    var x;\n                    x = en0 * ratio.thm.l[gsfb] * masking_lower / e;\n                    if (enable_athaa_fix != 0)\n                        x *= gfc.nsPsy.longfact[gsfb];\n                    if (xmin < x)\n                        xmin = x;\n                }\n            }\n            if (enable_athaa_fix != 0)\n                pxmin[pxminPos++] = xmin;\n            else\n                pxmin[pxminPos++] = xmin * gfc.nsPsy.longfact[gsfb];\n        }\n        /* end of long block loop */\n\n        /* use this function to determine the highest non-zero coeff */\n        var max_nonzero = 575;\n        if (cod_info.block_type != Encoder_1.SHORT_TYPE) {\n            // NORM, START or STOP type, but not SHORT\n            var k = 576;\n            while (k-- != 0 && BitStream.EQ(xr[k], 0)) {\n                max_nonzero = k;\n            }\n        }\n        cod_info.max_nonzero_coeff = max_nonzero;\n\n        for (var sfb = cod_info.sfb_smin; gsfb < cod_info.psymax; sfb++, gsfb += 3) {\n            var width, b;\n            var tmpATH;\n            if (gfp.VBR == VbrMode$19.vbr_rh || gfp.VBR == VbrMode$19.vbr_mtrh)\n                tmpATH = athAdjust(ATH.adjust, ATH.s[sfb], ATH.floor);\n            else\n                tmpATH = ATH.adjust * ATH.s[sfb];\n\n            width = cod_info.width[gsfb];\n            for (b = 0; b < 3; b++) {\n                var en0 = 0.0, xmin;\n                var rh1, rh2;\n                var l = width >> 1;\n\n                rh1 = tmpATH / width;\n                rh2 = DBL_EPSILON;\n                do {\n                    var xa, xb;\n                    xa = xr[j] * xr[j];\n                    en0 += xa;\n                    rh2 += (xa < rh1) ? xa : rh1;\n                    j++;\n                    xb = xr[j] * xr[j];\n                    en0 += xb;\n                    rh2 += (xb < rh1) ? xb : rh1;\n                    j++;\n                } while (--l > 0);\n                if (en0 > tmpATH)\n                    ath_over++;\n                if (sfb == Encoder_1.SBPSY_s) {\n                    var x = tmpATH * gfc.nsPsy.shortfact[sfb];\n                    if (rh2 < x) {\n                        rh2 = x;\n                    }\n                }\n                if (enable_athaa_fix != 0)\n                    xmin = rh2;\n                else\n                    xmin = tmpATH;\n\n                if (!gfp.ATHonly && !gfp.ATHshort) {\n                    var e = ratio.en.s[sfb][b];\n                    if (e > 0.0) {\n                        var x;\n                        x = en0 * ratio.thm.s[sfb][b] * masking_lower / e;\n                        if (enable_athaa_fix != 0)\n                            x *= gfc.nsPsy.shortfact[sfb];\n                        if (xmin < x)\n                            xmin = x;\n                    }\n                }\n                if (enable_athaa_fix != 0)\n                    pxmin[pxminPos++] = xmin;\n                else\n                    pxmin[pxminPos++] = xmin * gfc.nsPsy.shortfact[sfb];\n            }\n            /* b */\n            if (gfp.useTemporal) {\n                if (pxmin[pxminPos - 3] > pxmin[pxminPos - 3 + 1])\n                    pxmin[pxminPos - 3 + 1] += (pxmin[pxminPos - 3] - pxmin[pxminPos - 3 + 1])\n                        * gfc.decay;\n                if (pxmin[pxminPos - 3 + 1] > pxmin[pxminPos - 3 + 2])\n                    pxmin[pxminPos - 3 + 2] += (pxmin[pxminPos - 3 + 1] - pxmin[pxminPos - 3 + 2])\n                        * gfc.decay;\n            }\n        }\n        /* end of short block sfb loop */\n\n        return ath_over;\n    };\n\n    function StartLine(j) {\n        this.s = j;\n    }\n\n    this.calc_noise_core = function (cod_info, startline, l, step) {\n        var noise = 0;\n        var j = startline.s;\n        var ix = cod_info.l3_enc;\n\n        if (j > cod_info.count1) {\n            while ((l--) != 0) {\n                var temp;\n                temp = cod_info.xr[j];\n                j++;\n                noise += temp * temp;\n                temp = cod_info.xr[j];\n                j++;\n                noise += temp * temp;\n            }\n        } else if (j > cod_info.big_values) {\n            var ix01 = new_float$19(2);\n            ix01[0] = 0;\n            ix01[1] = step;\n            while ((l--) != 0) {\n                var temp;\n                temp = Math.abs(cod_info.xr[j]) - ix01[ix[j]];\n                j++;\n                noise += temp * temp;\n                temp = Math.abs(cod_info.xr[j]) - ix01[ix[j]];\n                j++;\n                noise += temp * temp;\n            }\n        } else {\n            while ((l--) != 0) {\n                var temp;\n                temp = Math.abs(cod_info.xr[j]) - pow43[ix[j]] * step;\n                j++;\n                noise += temp * temp;\n                temp = Math.abs(cod_info.xr[j]) - pow43[ix[j]] * step;\n                j++;\n                noise += temp * temp;\n            }\n        }\n\n        startline.s = j;\n        return noise;\n    };\n\n    /**\n     * <PRE>\n     * -oo dB  =>  -1.00\n     * - 6 dB  =>  -0.97\n     * - 3 dB  =>  -0.80\n     * - 2 dB  =>  -0.64\n     * - 1 dB  =>  -0.38\n     *   0 dB  =>   0.00\n     * + 1 dB  =>  +0.49\n     * + 2 dB  =>  +1.06\n     * + 3 dB  =>  +1.68\n     * + 6 dB  =>  +3.69\n     * +10 dB  =>  +6.45\n     * </PRE>\n     */\n    this.calc_noise = function (cod_info, l3_xmin, distort, res, prev_noise) {\n        var distortPos = 0;\n        var l3_xminPos = 0;\n        var sfb, l, over = 0;\n        var over_noise_db = 0;\n        /* 0 dB relative to masking */\n        var tot_noise_db = 0;\n        /* -200 dB relative to masking */\n        var max_noise = -20.0;\n        var j = 0;\n        var scalefac = cod_info.scalefac;\n        var scalefacPos = 0;\n\n        res.over_SSD = 0;\n\n        for (sfb = 0; sfb < cod_info.psymax; sfb++) {\n            var s = cod_info.global_gain\n                - (((scalefac[scalefacPos++]) + (cod_info.preflag != 0 ? pretab[sfb]\n                    : 0)) << (cod_info.scalefac_scale + 1))\n                - cod_info.subblock_gain[cod_info.window[sfb]] * 8;\n            var noise = 0.0;\n\n            if (prev_noise != null && (prev_noise.step[sfb] == s)) {\n\n                /* use previously computed values */\n                noise = prev_noise.noise[sfb];\n                j += cod_info.width[sfb];\n                distort[distortPos++] = noise / l3_xmin[l3_xminPos++];\n\n                noise = prev_noise.noise_log[sfb];\n\n            } else {\n                var step = POW20(s);\n                l = cod_info.width[sfb] >> 1;\n\n                if ((j + cod_info.width[sfb]) > cod_info.max_nonzero_coeff) {\n                    var usefullsize;\n                    usefullsize = cod_info.max_nonzero_coeff - j + 1;\n\n                    if (usefullsize > 0)\n                        l = usefullsize >> 1;\n                    else\n                        l = 0;\n                }\n\n                var sl = new StartLine(j);\n                noise = this.calc_noise_core(cod_info, sl, l, step);\n                j = sl.s;\n\n                if (prev_noise != null) {\n                    /* save noise values */\n                    prev_noise.step[sfb] = s;\n                    prev_noise.noise[sfb] = noise;\n                }\n\n                noise = distort[distortPos++] = noise / l3_xmin[l3_xminPos++];\n\n                /* multiplying here is adding in dB, but can overflow */\n                noise = Util$19.FAST_LOG10(Math.max(noise, 1E-20));\n\n                if (prev_noise != null) {\n                    /* save noise values */\n                    prev_noise.noise_log[sfb] = noise;\n                }\n            }\n\n            if (prev_noise != null) {\n                /* save noise values */\n                prev_noise.global_gain = cod_info.global_gain;\n            }\n\n            tot_noise_db += noise;\n\n            if (noise > 0.0) {\n                var tmp;\n\n                tmp = Math.max(0 | (noise * 10 + .5), 1);\n                res.over_SSD += tmp * tmp;\n\n                over++;\n                /* multiplying here is adding in dB -but can overflow */\n                /* over_noise *= noise; */\n                over_noise_db += noise;\n            }\n            max_noise = Math.max(max_noise, noise);\n\n        }\n\n        res.over_count = over;\n        res.tot_noise = tot_noise_db;\n        res.over_noise = over_noise_db;\n        res.max_noise = max_noise;\n\n        return over;\n    };\n\n    /**\n     * updates plotting data\n     *\n     * Mark Taylor 2000-??-??\n     *\n     * Robert Hegemann: moved noise/distortion calc into it\n     */\n    this.set_pinfo = function (gfp, cod_info, ratio, gr, ch) {\n        var gfc = gfp.internal_flags;\n        var sfb, sfb2;\n        var l;\n        var en0, en1;\n        var ifqstep = (cod_info.scalefac_scale == 0) ? .5 : 1.0;\n        var scalefac = cod_info.scalefac;\n\n        var l3_xmin = new_float$19(L3Side.SFBMAX);\n        var xfsf = new_float$19(L3Side.SFBMAX);\n        var noise = new CalcNoiseResult();\n\n        calc_xmin(gfp, ratio, cod_info, l3_xmin);\n        calc_noise(cod_info, l3_xmin, xfsf, noise, null);\n\n        var j = 0;\n        sfb2 = cod_info.sfb_lmax;\n        if (cod_info.block_type != Encoder_1.SHORT_TYPE\n            && 0 == cod_info.mixed_block_flag)\n            sfb2 = 22;\n        for (sfb = 0; sfb < sfb2; sfb++) {\n            var start = gfc.scalefac_band.l[sfb];\n            var end = gfc.scalefac_band.l[sfb + 1];\n            var bw = end - start;\n            for (en0 = 0.0; j < end; j++)\n                en0 += cod_info.xr[j] * cod_info.xr[j];\n            en0 /= bw;\n            /* convert to MDCT units */\n            /* scaling so it shows up on FFT plot */\n            en1 = 1e15;\n            gfc.pinfo.en[gr][ch][sfb] = en1 * en0;\n            gfc.pinfo.xfsf[gr][ch][sfb] = en1 * l3_xmin[sfb] * xfsf[sfb] / bw;\n\n            if (ratio.en.l[sfb] > 0 && !gfp.ATHonly)\n                en0 = en0 / ratio.en.l[sfb];\n            else\n                en0 = 0.0;\n\n            gfc.pinfo.thr[gr][ch][sfb] = en1\n                * Math.max(en0 * ratio.thm.l[sfb], gfc.ATH.l[sfb]);\n\n            /* there is no scalefactor bands >= SBPSY_l */\n            gfc.pinfo.LAMEsfb[gr][ch][sfb] = 0;\n            if (cod_info.preflag != 0 && sfb >= 11)\n                gfc.pinfo.LAMEsfb[gr][ch][sfb] = -ifqstep * pretab[sfb];\n\n            if (sfb < Encoder_1.SBPSY_l) {\n                /* scfsi should be decoded by caller side */\n                assert$19(scalefac[sfb] >= 0);\n                gfc.pinfo.LAMEsfb[gr][ch][sfb] -= ifqstep * scalefac[sfb];\n            }\n        }\n        /* for sfb */\n\n        if (cod_info.block_type == Encoder_1.SHORT_TYPE) {\n            sfb2 = sfb;\n            for (sfb = cod_info.sfb_smin; sfb < Encoder_1.SBMAX_s; sfb++) {\n                var start = gfc.scalefac_band.s[sfb];\n                var end = gfc.scalefac_band.s[sfb + 1];\n                var bw = end - start;\n                for (var i = 0; i < 3; i++) {\n                    for (en0 = 0.0, l = start; l < end; l++) {\n                        en0 += cod_info.xr[j] * cod_info.xr[j];\n                        j++;\n                    }\n                    en0 = Math.max(en0 / bw, 1e-20);\n                    /* convert to MDCT units */\n                    /* scaling so it shows up on FFT plot */\n                    en1 = 1e15;\n\n                    gfc.pinfo.en_s[gr][ch][3 * sfb + i] = en1 * en0;\n                    gfc.pinfo.xfsf_s[gr][ch][3 * sfb + i] = en1 * l3_xmin[sfb2]\n                        * xfsf[sfb2] / bw;\n                    if (ratio.en.s[sfb][i] > 0)\n                        en0 = en0 / ratio.en.s[sfb][i];\n                    else\n                        en0 = 0.0;\n                    if (gfp.ATHonly || gfp.ATHshort)\n                        en0 = 0;\n\n                    gfc.pinfo.thr_s[gr][ch][3 * sfb + i] = en1\n                        * Math.max(en0 * ratio.thm.s[sfb][i],\n                            gfc.ATH.s[sfb]);\n\n                    /* there is no scalefactor bands >= SBPSY_s */\n                    gfc.pinfo.LAMEsfb_s[gr][ch][3 * sfb + i] = -2.0\n                        * cod_info.subblock_gain[i];\n                    if (sfb < Encoder_1.SBPSY_s) {\n                        gfc.pinfo.LAMEsfb_s[gr][ch][3 * sfb + i] -= ifqstep\n                            * scalefac[sfb2];\n                    }\n                    sfb2++;\n                }\n            }\n        }\n        /* block type short */\n        gfc.pinfo.LAMEqss[gr][ch] = cod_info.global_gain;\n        gfc.pinfo.LAMEmainbits[gr][ch] = cod_info.part2_3_length\n            + cod_info.part2_length;\n        gfc.pinfo.LAMEsfbits[gr][ch] = cod_info.part2_length;\n\n        gfc.pinfo.over[gr][ch] = noise.over_count;\n        gfc.pinfo.max_noise[gr][ch] = noise.max_noise * 10.0;\n        gfc.pinfo.over_noise[gr][ch] = noise.over_noise * 10.0;\n        gfc.pinfo.tot_noise[gr][ch] = noise.tot_noise * 10.0;\n        gfc.pinfo.over_SSD[gr][ch] = noise.over_SSD;\n    };\n\n    /**\n     * updates plotting data for a whole frame\n     *\n     * Robert Hegemann 2000-10-21\n     */\n    \n\n}\n\nvar QuantizePVT_1 = QuantizePVT$1;\n\n/*\n *\tMP3 huffman table selecting and bit counting\n *\n *\tCopyright (c) 1999-2005 Takehiro TOMINAGA\n *\tCopyright (c) 2002-2005 Gabriel Bouvigne\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\t See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: Takehiro.java,v 1.26 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n//import java.util.Arrays;\n\nvar System$18 = common.System;\nvar Arrays$18 = common.Arrays;\nvar new_int$18 = common.new_int;\nvar assert$18 = common.assert;\n\n\n\n\n\n\n\nfunction Takehiro$1() {\n\n    var qupvt = null;\n    this.qupvt = null;\n\n    this.setModules = function (_qupvt) {\n        this.qupvt = _qupvt;\n        qupvt = _qupvt;\n    };\n\n    function Bits(b) {\n        this.bits = 0 | b;\n    }\n\n    var subdv_table = [[0, 0], /* 0 bands */\n        [0, 0], /* 1 bands */\n        [0, 0], /* 2 bands */\n        [0, 0], /* 3 bands */\n        [0, 0], /* 4 bands */\n        [0, 1], /* 5 bands */\n        [1, 1], /* 6 bands */\n        [1, 1], /* 7 bands */\n        [1, 2], /* 8 bands */\n        [2, 2], /* 9 bands */\n        [2, 3], /* 10 bands */\n        [2, 3], /* 11 bands */\n        [3, 4], /* 12 bands */\n        [3, 4], /* 13 bands */\n        [3, 4], /* 14 bands */\n        [4, 5], /* 15 bands */\n        [4, 5], /* 16 bands */\n        [4, 6], /* 17 bands */\n        [5, 6], /* 18 bands */\n        [5, 6], /* 19 bands */\n        [5, 7], /* 20 bands */\n        [6, 7], /* 21 bands */\n        [6, 7], /* 22 bands */\n    ];\n\n    /**\n     * nonlinear quantization of xr More accurate formula than the ISO formula.\n     * Takes into account the fact that we are quantizing xr . ix, but we want\n     * ix^4/3 to be as close as possible to x^4/3. (taking the nearest int would\n     * mean ix is as close as possible to xr, which is different.)\n     *\n     * From Segher Boessenkool <segher@eastsite.nl> 11/1999\n     *\n     * 09/2000: ASM code removed in favor of IEEE754 hack by Takehiro Tominaga.\n     * If you need the ASM code, check CVS circa Aug 2000.\n     *\n     * 01/2004: Optimizations by Gabriel Bouvigne\n     */\n    function quantize_lines_xrpow_01(l, istep, xr, xrPos, ix, ixPos) {\n        var compareval0 = (1.0 - 0.4054) / istep;\n\n        assert$18(l > 0);\n        l = l >> 1;\n        while ((l--) != 0) {\n            ix[ixPos++] = (compareval0 > xr[xrPos++]) ? 0 : 1;\n            ix[ixPos++] = (compareval0 > xr[xrPos++]) ? 0 : 1;\n        }\n    }\n\n    /**\n     * XRPOW_FTOI is a macro to convert floats to ints.<BR>\n     * if XRPOW_FTOI(x) = nearest_int(x), then QUANTFAC(x)=adj43asm[x]<BR>\n     * ROUNDFAC= -0.0946<BR>\n     *\n     * if XRPOW_FTOI(x) = floor(x), then QUANTFAC(x)=asj43[x]<BR>\n     * ROUNDFAC=0.4054<BR>\n     *\n     * Note: using floor() or 0| is extremely slow. On machines where the\n     * TAKEHIRO_IEEE754_HACK code above does not work, it is worthwile to write\n     * some ASM for XRPOW_FTOI().\n     */\n    function quantize_lines_xrpow(l, istep, xr, xrPos, ix, ixPos) {\n        assert$18(l > 0);\n\n        l = l >> 1;\n        var remaining = l % 2;\n        l = l >> 1;\n        while (l-- != 0) {\n            var x0, x1, x2, x3;\n            var rx0, rx1, rx2, rx3;\n\n            x0 = xr[xrPos++] * istep;\n            x1 = xr[xrPos++] * istep;\n            rx0 = 0 | x0;\n            x2 = xr[xrPos++] * istep;\n            rx1 = 0 | x1;\n            x3 = xr[xrPos++] * istep;\n            rx2 = 0 | x2;\n            x0 += qupvt.adj43[rx0];\n            rx3 = 0 | x3;\n            x1 += qupvt.adj43[rx1];\n            ix[ixPos++] = 0 | x0;\n            x2 += qupvt.adj43[rx2];\n            ix[ixPos++] = 0 | x1;\n            x3 += qupvt.adj43[rx3];\n            ix[ixPos++] = 0 | x2;\n            ix[ixPos++] = 0 | x3;\n        }\n        if (remaining != 0) {\n            var x0, x1;\n            var rx0, rx1;\n\n            x0 = xr[xrPos++] * istep;\n            x1 = xr[xrPos++] * istep;\n            rx0 = 0 | x0;\n            rx1 = 0 | x1;\n            x0 += qupvt.adj43[rx0];\n            x1 += qupvt.adj43[rx1];\n            ix[ixPos++] = 0 | x0;\n            ix[ixPos++] = 0 | x1;\n        }\n    }\n\n    /**\n     * Quantization function This function will select which lines to quantize\n     * and call the proper quantization function\n     */\n    function quantize_xrpow(xp, pi, istep, codInfo, prevNoise) {\n        /* quantize on xr^(3/4) instead of xr */\n        var sfb;\n        var sfbmax;\n        var j = 0;\n        var prev_data_use;\n        var accumulate = 0;\n        var accumulate01 = 0;\n        var xpPos = 0;\n        var iData = pi;\n        var iDataPos = 0;\n        var acc_iData = iData;\n        var acc_iDataPos = 0;\n        var acc_xp = xp;\n        var acc_xpPos = 0;\n\n        /*\n         * Reusing previously computed data does not seems to work if global\n         * gain is changed. Finding why it behaves this way would allow to use a\n         * cache of previously computed values (let's 10 cached values per sfb)\n         * that would probably provide a noticeable speedup\n         */\n        prev_data_use = (prevNoise != null && (codInfo.global_gain == prevNoise.global_gain));\n\n        if (codInfo.block_type == Encoder_1.SHORT_TYPE)\n            sfbmax = 38;\n        else\n            sfbmax = 21;\n\n        for (sfb = 0; sfb <= sfbmax; sfb++) {\n            var step = -1;\n\n            if (prev_data_use || codInfo.block_type == Encoder_1.NORM_TYPE) {\n                step = codInfo.global_gain\n                    - ((codInfo.scalefac[sfb] + (codInfo.preflag != 0 ? qupvt.pretab[sfb]\n                        : 0)) << (codInfo.scalefac_scale + 1))\n                    - codInfo.subblock_gain[codInfo.window[sfb]] * 8;\n            }\n            assert$18(codInfo.width[sfb] >= 0);\n            if (prev_data_use && (prevNoise.step[sfb] == step)) {\n                /*\n                 * do not recompute this part, but compute accumulated lines\n                 */\n                if (accumulate != 0) {\n                    quantize_lines_xrpow(accumulate, istep, acc_xp, acc_xpPos,\n                        acc_iData, acc_iDataPos);\n                    accumulate = 0;\n                }\n                if (accumulate01 != 0) {\n                    quantize_lines_xrpow_01(accumulate01, istep, acc_xp,\n                        acc_xpPos, acc_iData, acc_iDataPos);\n                    accumulate01 = 0;\n                }\n            } else { /* should compute this part */\n                var l = codInfo.width[sfb];\n\n                if ((j + codInfo.width[sfb]) > codInfo.max_nonzero_coeff) {\n                    /* do not compute upper zero part */\n                    var usefullsize;\n                    usefullsize = codInfo.max_nonzero_coeff - j + 1;\n                    Arrays$18.fill(pi, codInfo.max_nonzero_coeff, 576, 0);\n                    l = usefullsize;\n\n                    if (l < 0) {\n                        l = 0;\n                    }\n\n                    /* no need to compute higher sfb values */\n                    sfb = sfbmax + 1;\n                }\n\n                /* accumulate lines to quantize */\n                if (0 == accumulate && 0 == accumulate01) {\n                    acc_iData = iData;\n                    acc_iDataPos = iDataPos;\n                    acc_xp = xp;\n                    acc_xpPos = xpPos;\n                }\n                if (prevNoise != null && prevNoise.sfb_count1 > 0\n                    && sfb >= prevNoise.sfb_count1\n                    && prevNoise.step[sfb] > 0\n                    && step >= prevNoise.step[sfb]) {\n\n                    if (accumulate != 0) {\n                        quantize_lines_xrpow(accumulate, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate = 0;\n                        acc_iData = iData;\n                        acc_iDataPos = iDataPos;\n                        acc_xp = xp;\n                        acc_xpPos = xpPos;\n                    }\n                    accumulate01 += l;\n                } else {\n                    if (accumulate01 != 0) {\n                        quantize_lines_xrpow_01(accumulate01, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate01 = 0;\n                        acc_iData = iData;\n                        acc_iDataPos = iDataPos;\n                        acc_xp = xp;\n                        acc_xpPos = xpPos;\n                    }\n                    accumulate += l;\n                }\n\n                if (l <= 0) {\n                    /*\n                     * rh: 20040215 may happen due to \"prev_data_use\"\n                     * optimization\n                     */\n                    if (accumulate01 != 0) {\n                        quantize_lines_xrpow_01(accumulate01, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate01 = 0;\n                    }\n                    if (accumulate != 0) {\n                        quantize_lines_xrpow(accumulate, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate = 0;\n                    }\n\n                    break;\n                    /* ends for-loop */\n                }\n            }\n            if (sfb <= sfbmax) {\n                iDataPos += codInfo.width[sfb];\n                xpPos += codInfo.width[sfb];\n                j += codInfo.width[sfb];\n            }\n        }\n        if (accumulate != 0) { /* last data part */\n            quantize_lines_xrpow(accumulate, istep, acc_xp, acc_xpPos,\n                acc_iData, acc_iDataPos);\n            accumulate = 0;\n        }\n        if (accumulate01 != 0) { /* last data part */\n            quantize_lines_xrpow_01(accumulate01, istep, acc_xp, acc_xpPos,\n                acc_iData, acc_iDataPos);\n            accumulate01 = 0;\n        }\n\n    }\n\n    /**\n     * ix_max\n     */\n    function ix_max(ix, ixPos, endPos) {\n        var max1 = 0, max2 = 0;\n\n        do {\n            var x1 = ix[ixPos++];\n            var x2 = ix[ixPos++];\n            if (max1 < x1)\n                max1 = x1;\n\n            if (max2 < x2)\n                max2 = x2;\n        } while (ixPos < endPos);\n        if (max1 < max2)\n            max1 = max2;\n        return max1;\n    }\n\n    function count_bit_ESC(ix, ixPos, end, t1, t2, s) {\n        /* ESC-table is used */\n        var linbits = Tables_1.ht[t1].xlen * 65536 + Tables_1.ht[t2].xlen;\n        var sum = 0, sum2;\n\n        do {\n            var x = ix[ixPos++];\n            var y = ix[ixPos++];\n\n            if (x != 0) {\n                if (x > 14) {\n                    x = 15;\n                    sum += linbits;\n                }\n                x *= 16;\n            }\n\n            if (y != 0) {\n                if (y > 14) {\n                    y = 15;\n                    sum += linbits;\n                }\n                x += y;\n            }\n\n            sum += Tables_1.largetbl[x];\n        } while (ixPos < end);\n\n        sum2 = sum & 0xffff;\n        sum >>= 16;\n\n        if (sum > sum2) {\n            sum = sum2;\n            t1 = t2;\n        }\n\n        s.bits += sum;\n        return t1;\n    }\n\n    function count_bit_noESC(ix, ixPos, end, s) {\n        /* No ESC-words */\n        var sum1 = 0;\n        var hlen1 = Tables_1.ht[1].hlen;\n\n        do {\n            var x = ix[ixPos + 0] * 2 + ix[ixPos + 1];\n            ixPos += 2;\n            sum1 += hlen1[x];\n        } while (ixPos < end);\n\n        s.bits += sum1;\n        return 1;\n    }\n\n    function count_bit_noESC_from2(ix, ixPos, end, t1, s) {\n        /* No ESC-words */\n        var sum = 0, sum2;\n        var xlen = Tables_1.ht[t1].xlen;\n        var hlen;\n        if (t1 == 2)\n            hlen = Tables_1.table23;\n        else\n            hlen = Tables_1.table56;\n\n        do {\n            var x = ix[ixPos + 0] * xlen + ix[ixPos + 1];\n            ixPos += 2;\n            sum += hlen[x];\n        } while (ixPos < end);\n\n        sum2 = sum & 0xffff;\n        sum >>= 16;\n\n        if (sum > sum2) {\n            sum = sum2;\n            t1++;\n        }\n\n        s.bits += sum;\n        return t1;\n    }\n\n    function count_bit_noESC_from3(ix, ixPos, end, t1, s) {\n        /* No ESC-words */\n        var sum1 = 0;\n        var sum2 = 0;\n        var sum3 = 0;\n        var xlen = Tables_1.ht[t1].xlen;\n        var hlen1 = Tables_1.ht[t1].hlen;\n        var hlen2 = Tables_1.ht[t1 + 1].hlen;\n        var hlen3 = Tables_1.ht[t1 + 2].hlen;\n\n        do {\n            var x = ix[ixPos + 0] * xlen + ix[ixPos + 1];\n            ixPos += 2;\n            sum1 += hlen1[x];\n            sum2 += hlen2[x];\n            sum3 += hlen3[x];\n        } while (ixPos < end);\n        var t = t1;\n        if (sum1 > sum2) {\n            sum1 = sum2;\n            t++;\n        }\n        if (sum1 > sum3) {\n            sum1 = sum3;\n            t = t1 + 2;\n        }\n        s.bits += sum1;\n\n        return t;\n    }\n\n    /*************************************************************************/\n    /* choose table */\n    /*************************************************************************/\n\n    var huf_tbl_noESC = [1, 2, 5, 7, 7, 10, 10, 13, 13,\n        13, 13, 13, 13, 13, 13];\n\n    /**\n     * Choose the Huffman table that will encode ix[begin..end] with the fewest\n     * bits.\n     *\n     * Note: This code contains knowledge about the sizes and characteristics of\n     * the Huffman tables as defined in the IS (Table B.7), and will not work\n     * with any arbitrary tables.\n     */\n    function choose_table(ix, ixPos, endPos, s) {\n        var max = ix_max(ix, ixPos, endPos);\n\n        switch (max) {\n            case 0:\n                return max;\n\n            case 1:\n                return count_bit_noESC(ix, ixPos, endPos, s);\n\n            case 2:\n            case 3:\n                return count_bit_noESC_from2(ix, ixPos, endPos,\n                    huf_tbl_noESC[max - 1], s);\n\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n                return count_bit_noESC_from3(ix, ixPos, endPos,\n                    huf_tbl_noESC[max - 1], s);\n\n            default:\n                /* try tables with linbits */\n                if (max > QuantizePVT_1.IXMAX_VAL) {\n                    s.bits = QuantizePVT_1.LARGE_BITS;\n                    return -1;\n                }\n                max -= 15;\n                var choice2;\n                for (choice2 = 24; choice2 < 32; choice2++) {\n                    if (Tables_1.ht[choice2].linmax >= max) {\n                        break;\n                    }\n                }\n                var choice;\n                for (choice = choice2 - 8; choice < 24; choice++) {\n                    if (Tables_1.ht[choice].linmax >= max) {\n                        break;\n                    }\n                }\n                return count_bit_ESC(ix, ixPos, endPos, choice, choice2, s);\n        }\n    }\n\n    /**\n     * count_bit\n     */\n    this.noquant_count_bits = function (gfc, gi, prev_noise) {\n        var ix = gi.l3_enc;\n        var i = Math.min(576, ((gi.max_nonzero_coeff + 2) >> 1) << 1);\n\n        if (prev_noise != null)\n            prev_noise.sfb_count1 = 0;\n\n        /* Determine count1 region */\n        for (; i > 1; i -= 2)\n            if ((ix[i - 1] | ix[i - 2]) != 0)\n                break;\n        gi.count1 = i;\n\n        /* Determines the number of bits to encode the quadruples. */\n        var a1 = 0;\n        var a2 = 0;\n        for (; i > 3; i -= 4) {\n            var p;\n            /* hack to check if all values <= 1 */\n            //throw \"TODO: HACK         if ((((long) ix[i - 1] | (long) ix[i - 2] | (long) ix[i - 3] | (long) ix[i - 4]) & 0xffffffffL) > 1L        \"\n            //if (true) {\n            if (((ix[i - 1] | ix[i - 2] | ix[i - 3] | ix[i - 4]) & 0x7fffffff) > 1) {\n                break;\n            }\n            p = ((ix[i - 4] * 2 + ix[i - 3]) * 2 + ix[i - 2]) * 2 + ix[i - 1];\n            a1 += Tables_1.t32l[p];\n            a2 += Tables_1.t33l[p];\n        }\n        var bits = a1;\n        gi.count1table_select = 0;\n        if (a1 > a2) {\n            bits = a2;\n            gi.count1table_select = 1;\n        }\n\n        gi.count1bits = bits;\n        gi.big_values = i;\n        if (i == 0)\n            return bits;\n\n        if (gi.block_type == Encoder_1.SHORT_TYPE) {\n            a1 = 3 * gfc.scalefac_band.s[3];\n            if (a1 > gi.big_values)\n                a1 = gi.big_values;\n            a2 = gi.big_values;\n\n        } else if (gi.block_type == Encoder_1.NORM_TYPE) {\n            assert$18(i <= 576);\n            /* bv_scf has 576 entries (0..575) */\n            a1 = gi.region0_count = gfc.bv_scf[i - 2];\n            a2 = gi.region1_count = gfc.bv_scf[i - 1];\n\n            assert$18(a1 + a2 + 2 < Encoder_1.SBPSY_l);\n            a2 = gfc.scalefac_band.l[a1 + a2 + 2];\n            a1 = gfc.scalefac_band.l[a1 + 1];\n            if (a2 < i) {\n                var bi = new Bits(bits);\n                gi.table_select[2] = choose_table(ix, a2, i, bi);\n                bits = bi.bits;\n            }\n        } else {\n            gi.region0_count = 7;\n            /* gi.region1_count = SBPSY_l - 7 - 1; */\n            gi.region1_count = Encoder_1.SBMAX_l - 1 - 7 - 1;\n            a1 = gfc.scalefac_band.l[7 + 1];\n            a2 = i;\n            if (a1 > a2) {\n                a1 = a2;\n            }\n        }\n\n        /* have to allow for the case when bigvalues < region0 < region1 */\n        /* (and region0, region1 are ignored) */\n        a1 = Math.min(a1, i);\n        a2 = Math.min(a2, i);\n\n        assert$18(a1 >= 0);\n        assert$18(a2 >= 0);\n\n        /* Count the number of bits necessary to code the bigvalues region. */\n        if (0 < a1) {\n            var bi = new Bits(bits);\n            gi.table_select[0] = choose_table(ix, 0, a1, bi);\n            bits = bi.bits;\n        }\n        if (a1 < a2) {\n            var bi = new Bits(bits);\n            gi.table_select[1] = choose_table(ix, a1, a2, bi);\n            bits = bi.bits;\n        }\n        if (gfc.use_best_huffman == 2) {\n            gi.part2_3_length = bits;\n            best_huffman_divide(gfc, gi);\n            bits = gi.part2_3_length;\n        }\n\n        if (prev_noise != null) {\n            if (gi.block_type == Encoder_1.NORM_TYPE) {\n                var sfb = 0;\n                while (gfc.scalefac_band.l[sfb] < gi.big_values) {\n                    sfb++;\n                }\n                prev_noise.sfb_count1 = sfb;\n            }\n        }\n\n        return bits;\n    };\n\n    this.count_bits = function (gfc, xr, gi, prev_noise) {\n        var ix = gi.l3_enc;\n\n        /* since quantize_xrpow uses table lookup, we need to check this first: */\n        var w = (QuantizePVT_1.IXMAX_VAL) / qupvt.IPOW20(gi.global_gain);\n\n        if (gi.xrpow_max > w)\n            return QuantizePVT_1.LARGE_BITS;\n\n        quantize_xrpow(xr, ix, qupvt.IPOW20(gi.global_gain), gi, prev_noise);\n\n        if ((gfc.substep_shaping & 2) != 0) {\n            var j = 0;\n            /* 0.634521682242439 = 0.5946*2**(.5*0.1875) */\n            var gain = gi.global_gain + gi.scalefac_scale;\n            var roundfac = 0.634521682242439 / qupvt.IPOW20(gain);\n            for (var sfb = 0; sfb < gi.sfbmax; sfb++) {\n                var width = gi.width[sfb];\n                assert$18(width >= 0);\n                if (0 == gfc.pseudohalf[sfb]) {\n                    j += width;\n                } else {\n                    var k;\n                    for (k = j, j += width; k < j; ++k) {\n                        ix[k] = (xr[k] >= roundfac) ? ix[k] : 0;\n                    }\n                }\n            }\n        }\n        return this.noquant_count_bits(gfc, gi, prev_noise);\n    };\n\n    /**\n     * re-calculate the best scalefac_compress using scfsi the saved bits are\n     * kept in the bit reservoir.\n     */\n    function recalc_divide_init(gfc, cod_info, ix, r01_bits, r01_div, r0_tbl, r1_tbl) {\n        var bigv = cod_info.big_values;\n\n        for (var r0 = 0; r0 <= 7 + 15; r0++) {\n            r01_bits[r0] = QuantizePVT_1.LARGE_BITS;\n        }\n\n        for (var r0 = 0; r0 < 16; r0++) {\n            var a1 = gfc.scalefac_band.l[r0 + 1];\n            if (a1 >= bigv)\n                break;\n            var r0bits = 0;\n            var bi = new Bits(r0bits);\n            var r0t = choose_table(ix, 0, a1, bi);\n            r0bits = bi.bits;\n\n            for (var r1 = 0; r1 < 8; r1++) {\n                var a2 = gfc.scalefac_band.l[r0 + r1 + 2];\n                if (a2 >= bigv)\n                    break;\n                var bits = r0bits;\n                bi = new Bits(bits);\n                var r1t = choose_table(ix, a1, a2, bi);\n                bits = bi.bits;\n                if (r01_bits[r0 + r1] > bits) {\n                    r01_bits[r0 + r1] = bits;\n                    r01_div[r0 + r1] = r0;\n                    r0_tbl[r0 + r1] = r0t;\n                    r1_tbl[r0 + r1] = r1t;\n                }\n            }\n        }\n    }\n\n    function recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div, r0_tbl, r1_tbl) {\n        var bigv = cod_info2.big_values;\n\n        for (var r2 = 2; r2 < Encoder_1.SBMAX_l + 1; r2++) {\n            var a2 = gfc.scalefac_band.l[r2];\n            if (a2 >= bigv)\n                break;\n            var bits = r01_bits[r2 - 2] + cod_info2.count1bits;\n            if (gi.part2_3_length <= bits)\n                break;\n\n            var bi = new Bits(bits);\n            var r2t = choose_table(ix, a2, bigv, bi);\n            bits = bi.bits;\n            if (gi.part2_3_length <= bits)\n                continue;\n\n            gi.assign(cod_info2);\n            gi.part2_3_length = bits;\n            gi.region0_count = r01_div[r2 - 2];\n            gi.region1_count = r2 - 2 - r01_div[r2 - 2];\n            gi.table_select[0] = r0_tbl[r2 - 2];\n            gi.table_select[1] = r1_tbl[r2 - 2];\n            gi.table_select[2] = r2t;\n        }\n    }\n\n    this.best_huffman_divide = function (gfc, gi) {\n        var cod_info2 = new GrInfo_1();\n        var ix = gi.l3_enc;\n        var r01_bits = new_int$18(7 + 15 + 1);\n        var r01_div = new_int$18(7 + 15 + 1);\n        var r0_tbl = new_int$18(7 + 15 + 1);\n        var r1_tbl = new_int$18(7 + 15 + 1);\n\n        /* SHORT BLOCK stuff fails for MPEG2 */\n        if (gi.block_type == Encoder_1.SHORT_TYPE && gfc.mode_gr == 1)\n            return;\n\n        cod_info2.assign(gi);\n        if (gi.block_type == Encoder_1.NORM_TYPE) {\n            recalc_divide_init(gfc, gi, ix, r01_bits, r01_div, r0_tbl, r1_tbl);\n            recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div,\n                r0_tbl, r1_tbl);\n        }\n        var i = cod_info2.big_values;\n        if (i == 0 || (ix[i - 2] | ix[i - 1]) > 1)\n            return;\n\n        i = gi.count1 + 2;\n        if (i > 576)\n            return;\n\n        /* Determines the number of bits to encode the quadruples. */\n        cod_info2.assign(gi);\n        cod_info2.count1 = i;\n        var a1 = 0;\n        var a2 = 0;\n\n        assert$18(i <= 576);\n\n        for (; i > cod_info2.big_values; i -= 4) {\n            var p = ((ix[i - 4] * 2 + ix[i - 3]) * 2 + ix[i - 2]) * 2\n                + ix[i - 1];\n            a1 += Tables_1.t32l[p];\n            a2 += Tables_1.t33l[p];\n        }\n        cod_info2.big_values = i;\n\n        cod_info2.count1table_select = 0;\n        if (a1 > a2) {\n            a1 = a2;\n            cod_info2.count1table_select = 1;\n        }\n\n        cod_info2.count1bits = a1;\n\n        if (cod_info2.block_type == Encoder_1.NORM_TYPE)\n            recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div,\n                r0_tbl, r1_tbl);\n        else {\n            /* Count the number of bits necessary to code the bigvalues region. */\n            cod_info2.part2_3_length = a1;\n            a1 = gfc.scalefac_band.l[7 + 1];\n            if (a1 > i) {\n                a1 = i;\n            }\n            if (a1 > 0) {\n                var bi = new Bits(cod_info2.part2_3_length);\n                cod_info2.table_select[0] = choose_table(ix, 0, a1, bi);\n                cod_info2.part2_3_length = bi.bits;\n            }\n            if (i > a1) {\n                var bi = new Bits(cod_info2.part2_3_length);\n                cod_info2.table_select[1] = choose_table(ix, a1, i, bi);\n                cod_info2.part2_3_length = bi.bits;\n            }\n            if (gi.part2_3_length > cod_info2.part2_3_length)\n                gi.assign(cod_info2);\n        }\n    };\n\n    var slen1_n = [1, 1, 1, 1, 8, 2, 2, 2, 4, 4, 4, 8, 8, 8, 16, 16];\n    var slen2_n = [1, 2, 4, 8, 1, 2, 4, 8, 2, 4, 8, 2, 4, 8, 4, 8];\n    var slen1_tab = [0, 0, 0, 0, 3, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4];\n    var slen2_tab = [0, 1, 2, 3, 0, 1, 2, 3, 1, 2, 3, 1, 2, 3, 2, 3];\n    Takehiro$1.slen1_tab = slen1_tab;\n    Takehiro$1.slen2_tab = slen2_tab;\n\n    function scfsi_calc(ch, l3_side) {\n        var sfb;\n        var gi = l3_side.tt[1][ch];\n        var g0 = l3_side.tt[0][ch];\n\n        for (var i = 0; i < Tables_1.scfsi_band.length - 1; i++) {\n            for (sfb = Tables_1.scfsi_band[i]; sfb < Tables_1.scfsi_band[i + 1]; sfb++) {\n                if (g0.scalefac[sfb] != gi.scalefac[sfb]\n                    && gi.scalefac[sfb] >= 0)\n                    break;\n            }\n            if (sfb == Tables_1.scfsi_band[i + 1]) {\n                for (sfb = Tables_1.scfsi_band[i]; sfb < Tables_1.scfsi_band[i + 1]; sfb++) {\n                    gi.scalefac[sfb] = -1;\n                }\n                l3_side.scfsi[ch][i] = 1;\n            }\n        }\n        var s1 = 0;\n        var c1 = 0;\n        for (sfb = 0; sfb < 11; sfb++) {\n            if (gi.scalefac[sfb] == -1)\n                continue;\n            c1++;\n            if (s1 < gi.scalefac[sfb])\n                s1 = gi.scalefac[sfb];\n        }\n        var s2 = 0;\n        var c2 = 0;\n        for (; sfb < Encoder_1.SBPSY_l; sfb++) {\n            if (gi.scalefac[sfb] == -1)\n                continue;\n            c2++;\n            if (s2 < gi.scalefac[sfb])\n                s2 = gi.scalefac[sfb];\n        }\n\n        for (var i = 0; i < 16; i++) {\n            if (s1 < slen1_n[i] && s2 < slen2_n[i]) {\n                var c = slen1_tab[i] * c1 + slen2_tab[i] * c2;\n                if (gi.part2_length > c) {\n                    gi.part2_length = c;\n                    gi.scalefac_compress = i;\n                }\n            }\n        }\n    }\n\n    /**\n     * Find the optimal way to store the scalefactors. Only call this routine\n     * after final scalefactors have been chosen and the channel/granule will\n     * not be re-encoded.\n     */\n    this.best_scalefac_store = function (gfc, gr, ch, l3_side) {\n        /* use scalefac_scale if we can */\n        var gi = l3_side.tt[gr][ch];\n        var sfb, i, j, l;\n        var recalc = 0;\n\n        /*\n         * remove scalefacs from bands with ix=0. This idea comes from the AAC\n         * ISO docs. added mt 3/00\n         */\n        /* check if l3_enc=0 */\n        j = 0;\n        for (sfb = 0; sfb < gi.sfbmax; sfb++) {\n            var width = gi.width[sfb];\n            assert$18(width >= 0);\n            j += width;\n            for (l = -width; l < 0; l++) {\n                if (gi.l3_enc[l + j] != 0)\n                    break;\n            }\n            if (l == 0)\n                gi.scalefac[sfb] = recalc = -2;\n            /* anything goes. */\n            /*\n             * only best_scalefac_store and calc_scfsi know--and only they\n             * should know--about the magic number -2.\n             */\n        }\n\n        if (0 == gi.scalefac_scale && 0 == gi.preflag) {\n            var s = 0;\n            for (sfb = 0; sfb < gi.sfbmax; sfb++)\n                if (gi.scalefac[sfb] > 0)\n                    s |= gi.scalefac[sfb];\n\n            if (0 == (s & 1) && s != 0) {\n                for (sfb = 0; sfb < gi.sfbmax; sfb++)\n                    if (gi.scalefac[sfb] > 0)\n                        gi.scalefac[sfb] >>= 1;\n\n                gi.scalefac_scale = recalc = 1;\n            }\n        }\n\n        if (0 == gi.preflag && gi.block_type != Encoder_1.SHORT_TYPE\n            && gfc.mode_gr == 2) {\n            for (sfb = 11; sfb < Encoder_1.SBPSY_l; sfb++)\n                if (gi.scalefac[sfb] < qupvt.pretab[sfb]\n                    && gi.scalefac[sfb] != -2)\n                    break;\n            if (sfb == Encoder_1.SBPSY_l) {\n                for (sfb = 11; sfb < Encoder_1.SBPSY_l; sfb++)\n                    if (gi.scalefac[sfb] > 0)\n                        gi.scalefac[sfb] -= qupvt.pretab[sfb];\n\n                gi.preflag = recalc = 1;\n            }\n        }\n\n        for (i = 0; i < 4; i++)\n            l3_side.scfsi[ch][i] = 0;\n\n        if (gfc.mode_gr == 2 && gr == 1\n            && l3_side.tt[0][ch].block_type != Encoder_1.SHORT_TYPE\n            && l3_side.tt[1][ch].block_type != Encoder_1.SHORT_TYPE) {\n            scfsi_calc(ch, l3_side);\n            recalc = 0;\n        }\n        for (sfb = 0; sfb < gi.sfbmax; sfb++) {\n            if (gi.scalefac[sfb] == -2) {\n                gi.scalefac[sfb] = 0;\n                /* if anything goes, then 0 is a good choice */\n            }\n        }\n        if (recalc != 0) {\n            if (gfc.mode_gr == 2) {\n                this.scale_bitcount(gi);\n            } else {\n                this.scale_bitcount_lsf(gfc, gi);\n            }\n        }\n    };\n\n    function all_scalefactors_not_negative(scalefac, n) {\n        for (var i = 0; i < n; ++i) {\n            if (scalefac[i] < 0)\n                return false;\n        }\n        return true;\n    }\n\n    /**\n     * number of bits used to encode scalefacs.\n     *\n     * 18*slen1_tab[i] + 18*slen2_tab[i]\n     */\n    var scale_short = [0, 18, 36, 54, 54, 36, 54, 72,\n        54, 72, 90, 72, 90, 108, 108, 126];\n\n    /**\n     * number of bits used to encode scalefacs.\n     *\n     * 17*slen1_tab[i] + 18*slen2_tab[i]\n     */\n    var scale_mixed = [0, 18, 36, 54, 51, 35, 53, 71,\n        52, 70, 88, 69, 87, 105, 104, 122];\n\n    /**\n     * number of bits used to encode scalefacs.\n     *\n     * 11*slen1_tab[i] + 10*slen2_tab[i]\n     */\n    var scale_long = [0, 10, 20, 30, 33, 21, 31, 41, 32, 42,\n        52, 43, 53, 63, 64, 74];\n\n    /**\n     * Also calculates the number of bits necessary to code the scalefactors.\n     */\n    this.scale_bitcount = function (cod_info) {\n        var k, sfb, max_slen1 = 0, max_slen2 = 0;\n\n        /* maximum values */\n        var tab;\n        var scalefac = cod_info.scalefac;\n\n        assert$18(all_scalefactors_not_negative(scalefac, cod_info.sfbmax));\n\n        if (cod_info.block_type == Encoder_1.SHORT_TYPE) {\n            tab = scale_short;\n            if (cod_info.mixed_block_flag != 0)\n                tab = scale_mixed;\n        } else { /* block_type == 1,2,or 3 */\n            tab = scale_long;\n            if (0 == cod_info.preflag) {\n                for (sfb = 11; sfb < Encoder_1.SBPSY_l; sfb++)\n                    if (scalefac[sfb] < qupvt.pretab[sfb])\n                        break;\n\n                if (sfb == Encoder_1.SBPSY_l) {\n                    cod_info.preflag = 1;\n                    for (sfb = 11; sfb < Encoder_1.SBPSY_l; sfb++)\n                        scalefac[sfb] -= qupvt.pretab[sfb];\n                }\n            }\n        }\n\n        for (sfb = 0; sfb < cod_info.sfbdivide; sfb++)\n            if (max_slen1 < scalefac[sfb])\n                max_slen1 = scalefac[sfb];\n\n        for (; sfb < cod_info.sfbmax; sfb++)\n            if (max_slen2 < scalefac[sfb])\n                max_slen2 = scalefac[sfb];\n\n        /*\n         * from Takehiro TOMINAGA <tominaga@isoternet.org> 10/99 loop over *all*\n         * posible values of scalefac_compress to find the one which uses the\n         * smallest number of bits. ISO would stop at first valid index\n         */\n        cod_info.part2_length = QuantizePVT_1.LARGE_BITS;\n        for (k = 0; k < 16; k++) {\n            if (max_slen1 < slen1_n[k] && max_slen2 < slen2_n[k]\n                && cod_info.part2_length > tab[k]) {\n                cod_info.part2_length = tab[k];\n                cod_info.scalefac_compress = k;\n            }\n        }\n        return cod_info.part2_length == QuantizePVT_1.LARGE_BITS;\n    };\n\n    /**\n     * table of largest scalefactor values for MPEG2\n     */\n    var max_range_sfac_tab = [[15, 15, 7, 7],\n        [15, 15, 7, 0], [7, 3, 0, 0], [15, 31, 31, 0],\n        [7, 7, 7, 0], [3, 3, 0, 0]];\n\n    /**\n     * Also counts the number of bits to encode the scalefacs but for MPEG 2\n     * Lower sampling frequencies (24, 22.05 and 16 kHz.)\n     *\n     * This is reverse-engineered from section 2.4.3.2 of the MPEG2 IS,\n     * \"Audio Decoding Layer III\"\n     */\n    this.scale_bitcount_lsf = function (gfc, cod_info) {\n        var table_number, row_in_table, partition, nr_sfb, window;\n        var over;\n        var i, sfb;\n        var max_sfac = new_int$18(4);\n//var partition_table;\n        var scalefac = cod_info.scalefac;\n\n        /*\n         * Set partition table. Note that should try to use table one, but do\n         * not yet...\n         */\n        if (cod_info.preflag != 0)\n            table_number = 2;\n        else\n            table_number = 0;\n\n        for (i = 0; i < 4; i++)\n            max_sfac[i] = 0;\n\n        if (cod_info.block_type == Encoder_1.SHORT_TYPE) {\n            row_in_table = 1;\n            var partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\n            for (sfb = 0, partition = 0; partition < 4; partition++) {\n                nr_sfb = partition_table[partition] / 3;\n                for (i = 0; i < nr_sfb; i++, sfb++)\n                    for (window = 0; window < 3; window++)\n                        if (scalefac[sfb * 3 + window] > max_sfac[partition])\n                            max_sfac[partition] = scalefac[sfb * 3 + window];\n            }\n        } else {\n            row_in_table = 0;\n            var partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\n            for (sfb = 0, partition = 0; partition < 4; partition++) {\n                nr_sfb = partition_table[partition];\n                for (i = 0; i < nr_sfb; i++, sfb++)\n                    if (scalefac[sfb] > max_sfac[partition])\n                        max_sfac[partition] = scalefac[sfb];\n            }\n        }\n\n        for (over = false, partition = 0; partition < 4; partition++) {\n            if (max_sfac[partition] > max_range_sfac_tab[table_number][partition])\n                over = true;\n        }\n        if (!over) {\n            var slen1, slen2, slen3, slen4;\n\n            cod_info.sfb_partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\n            for (partition = 0; partition < 4; partition++)\n                cod_info.slen[partition] = log2tab[max_sfac[partition]];\n\n            /* set scalefac_compress */\n            slen1 = cod_info.slen[0];\n            slen2 = cod_info.slen[1];\n            slen3 = cod_info.slen[2];\n            slen4 = cod_info.slen[3];\n\n            switch (table_number) {\n                case 0:\n                    cod_info.scalefac_compress = (((slen1 * 5) + slen2) << 4)\n                        + (slen3 << 2) + slen4;\n                    break;\n\n                case 1:\n                    cod_info.scalefac_compress = 400 + (((slen1 * 5) + slen2) << 2)\n                        + slen3;\n                    break;\n\n                case 2:\n                    cod_info.scalefac_compress = 500 + (slen1 * 3) + slen2;\n                    break;\n\n                default:\n                    System$18.err.printf(\"intensity stereo not implemented yet\\n\");\n                    break;\n            }\n        }\n        if (!over) {\n            assert$18(cod_info.sfb_partition_table != null);\n            cod_info.part2_length = 0;\n            for (partition = 0; partition < 4; partition++)\n                cod_info.part2_length += cod_info.slen[partition]\n                    * cod_info.sfb_partition_table[partition];\n        }\n        return over;\n    };\n\n    /*\n     * Since no bands have been over-amplified, we can set scalefac_compress and\n     * slen[] for the formatter\n     */\n    var log2tab = [0, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4,\n        4, 4, 4, 4];\n\n    this.huffman_init = function (gfc) {\n        for (var i = 2; i <= 576; i += 2) {\n            var scfb_anz = 0, bv_index;\n            while (gfc.scalefac_band.l[++scfb_anz] < i)\n                ;\n\n            bv_index = subdv_table[scfb_anz][0]; // .region0_count\n            while (gfc.scalefac_band.l[bv_index + 1] > i)\n                bv_index--;\n\n            if (bv_index < 0) {\n                /*\n                 * this is an indication that everything is going to be encoded\n                 * as region0: bigvalues < region0 < region1 so lets set\n                 * region0, region1 to some value larger than bigvalues\n                 */\n                bv_index = subdv_table[scfb_anz][0]; // .region0_count\n            }\n\n            gfc.bv_scf[i - 2] = bv_index;\n\n            bv_index = subdv_table[scfb_anz][1]; // .region1_count\n            while (gfc.scalefac_band.l[bv_index + gfc.bv_scf[i - 2] + 2] > i)\n                bv_index--;\n\n            if (bv_index < 0) {\n                bv_index = subdv_table[scfb_anz][1]; // .region1_count\n            }\n\n            gfc.bv_scf[i - 1] = bv_index;\n        }\n    };\n}\n\nvar Takehiro_1 = Takehiro$1;\n\nvar System$17 = common.System;\nvar Arrays$17 = common.Arrays;\nvar new_byte$17 = common.new_byte;\nvar new_float_n$17 = common.new_float_n;\nvar new_int$17 = common.new_int;\nvar assert$17 = common.assert;\n\n\n\n\n\n\nBitStream$1.EQ = function (a, b) {\n    return (Math.abs(a) > Math.abs(b)) ? (Math.abs((a) - (b)) <= (Math\n        .abs(a) * 1e-6))\n        : (Math.abs((a) - (b)) <= (Math.abs(b) * 1e-6));\n};\n\nBitStream$1.NEQ = function (a, b) {\n    return !BitStream$1.EQ(a, b);\n};\n\nfunction BitStream$1() {\n    var self = this;\n    var CRC16_POLYNOMIAL = 0x8005;\n\n    /*\n     * we work with ints, so when doing bit manipulation, we limit ourselves to\n     * MAX_LENGTH-2 just to be on the safe side\n     */\n    var MAX_LENGTH = 32;\n\n    //GainAnalysis ga;\n    //MPGLib mpg;\n    //Version ver;\n    //VBRTag vbr;\n    var ga = null;\n    var mpg = null;\n    var ver = null;\n    var vbr = null;\n\n    //public final void setModules(GainAnalysis ga, MPGLib mpg, Version ver,\n    //\tVBRTag vbr) {\n\n    this.setModules = function (_ga, _mpg, _ver, _vbr) {\n        ga = _ga;\n        mpg = _mpg;\n        ver = _ver;\n        vbr = _vbr;\n    };\n\n    /**\n     * Bit stream buffer.\n     */\n    //private byte[] buf;\n    var buf = null;\n    /**\n     * Bit counter of bit stream.\n     */\n    var totbit = 0;\n    /**\n     * Pointer to top byte in buffer.\n     */\n    var bufByteIdx = 0;\n    /**\n     * Pointer to top bit of top byte in buffer.\n     */\n    var bufBitIdx = 0;\n\n    /**\n     * compute bitsperframe and mean_bits for a layer III frame\n     */\n    this.getframebits = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var bit_rate;\n\n        /* get bitrate in kbps [?] */\n        if (gfc.bitrate_index != 0)\n            bit_rate = Tables_1.bitrate_table[gfp.version][gfc.bitrate_index];\n        else\n            bit_rate = gfp.brate;\n        assert$17(8 <= bit_rate && bit_rate <= 640);\n\n        /* main encoding routine toggles padding on and off */\n        /* one Layer3 Slot consists of 8 bits */\n        var bytes = 0 | (gfp.version + 1) * 72000 * bit_rate / gfp.out_samplerate + gfc.padding;\n        return 8 * bytes;\n    };\n\n    function putheader_bits(gfc) {\n        System$17.arraycopy(gfc.header[gfc.w_ptr].buf, 0, buf, bufByteIdx, gfc.sideinfo_len);\n        bufByteIdx += gfc.sideinfo_len;\n        totbit += gfc.sideinfo_len * 8;\n        gfc.w_ptr = (gfc.w_ptr + 1) & (LameInternalFlags_1.MAX_HEADER_BUF - 1);\n    }\n\n    /**\n     * write j bits into the bit stream\n     */\n    function putbits2(gfc, val, j) {\n        assert$17(j < MAX_LENGTH - 2);\n\n        while (j > 0) {\n            var k;\n            if (bufBitIdx == 0) {\n                bufBitIdx = 8;\n                bufByteIdx++;\n                assert$17(bufByteIdx < Lame.LAME_MAXMP3BUFFER);\n                assert$17(gfc.header[gfc.w_ptr].write_timing >= totbit);\n                if (gfc.header[gfc.w_ptr].write_timing == totbit) {\n                    putheader_bits(gfc);\n                }\n                buf[bufByteIdx] = 0;\n            }\n\n            k = Math.min(j, bufBitIdx);\n            j -= k;\n\n            bufBitIdx -= k;\n\n            assert$17(j < MAX_LENGTH);\n            /* 32 too large on 32 bit machines */\n            assert$17(bufBitIdx < MAX_LENGTH);\n\n            buf[bufByteIdx] |= ((val >> j) << bufBitIdx);\n            totbit += k;\n        }\n    }\n\n    /**\n     * write j bits into the bit stream, ignoring frame headers\n     */\n    function putbits_noheaders(gfc, val, j) {\n        assert$17(j < MAX_LENGTH - 2);\n\n        while (j > 0) {\n            var k;\n            if (bufBitIdx == 0) {\n                bufBitIdx = 8;\n                bufByteIdx++;\n                assert$17(bufByteIdx < Lame.LAME_MAXMP3BUFFER);\n                buf[bufByteIdx] = 0;\n            }\n\n            k = Math.min(j, bufBitIdx);\n            j -= k;\n\n            bufBitIdx -= k;\n\n            assert$17(j < MAX_LENGTH);\n            /* 32 too large on 32 bit machines */\n            assert$17(bufBitIdx < MAX_LENGTH);\n\n            buf[bufByteIdx] |= ((val >> j) << bufBitIdx);\n            totbit += k;\n        }\n    }\n\n    /**\n     * Some combinations of bitrate, Fs, and stereo make it impossible to stuff\n     * out a frame using just main_data, due to the limited number of bits to\n     * indicate main_data_length. In these situations, we put stuffing bits into\n     * the ancillary data...\n     */\n    function drain_into_ancillary(gfp, remainingBits) {\n        var gfc = gfp.internal_flags;\n        var i;\n        assert$17(remainingBits >= 0);\n\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x4c, 8);\n            remainingBits -= 8;\n        }\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x41, 8);\n            remainingBits -= 8;\n        }\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x4d, 8);\n            remainingBits -= 8;\n        }\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x45, 8);\n            remainingBits -= 8;\n        }\n\n        if (remainingBits >= 32) {\n            var version = ver.getLameShortVersion();\n            if (remainingBits >= 32)\n                for (i = 0; i < version.length && remainingBits >= 8; ++i) {\n                    remainingBits -= 8;\n                    putbits2(gfc, version.charAt(i), 8);\n                }\n        }\n\n        for (; remainingBits >= 1; remainingBits -= 1) {\n            putbits2(gfc, gfc.ancillary_flag, 1);\n            gfc.ancillary_flag ^= (!gfp.disable_reservoir ? 1 : 0);\n        }\n\n        assert$17(remainingBits == 0);\n\n    }\n\n    /**\n     * write N bits into the header\n     */\n    function writeheader(gfc, val, j) {\n        var ptr = gfc.header[gfc.h_ptr].ptr;\n\n        while (j > 0) {\n            var k = Math.min(j, 8 - (ptr & 7));\n            j -= k;\n            assert$17(j < MAX_LENGTH);\n            /* >> 32 too large for 32 bit machines */\n\n            gfc.header[gfc.h_ptr].buf[ptr >> 3] |= ((val >> j)) << (8 - (ptr & 7) - k);\n            ptr += k;\n        }\n        gfc.header[gfc.h_ptr].ptr = ptr;\n    }\n\n    function CRC_update(value, crc) {\n        value <<= 8;\n        for (var i = 0; i < 8; i++) {\n            value <<= 1;\n            crc <<= 1;\n\n            if ((((crc ^ value) & 0x10000) != 0))\n                crc ^= CRC16_POLYNOMIAL;\n        }\n        return crc;\n    }\n\n    this.CRC_writeheader = function (gfc, header) {\n        var crc = 0xffff;\n        /* (jo) init crc16 for error_protection */\n\n        crc = CRC_update(header[2] & 0xff, crc);\n        crc = CRC_update(header[3] & 0xff, crc);\n        for (var i = 6; i < gfc.sideinfo_len; i++) {\n            crc = CRC_update(header[i] & 0xff, crc);\n        }\n\n        header[4] = (byte)(crc >> 8);\n        header[5] = (byte)(crc & 255);\n    };\n\n    function encodeSideInfo2(gfp, bitsPerFrame) {\n        var gfc = gfp.internal_flags;\n        var l3_side;\n        var gr, ch;\n\n        l3_side = gfc.l3_side;\n        gfc.header[gfc.h_ptr].ptr = 0;\n        Arrays$17.fill(gfc.header[gfc.h_ptr].buf, 0, gfc.sideinfo_len, 0);\n        if (gfp.out_samplerate < 16000)\n            writeheader(gfc, 0xffe, 12);\n        else\n            writeheader(gfc, 0xfff, 12);\n        writeheader(gfc, (gfp.version), 1);\n        writeheader(gfc, 4 - 3, 2);\n        writeheader(gfc, (!gfp.error_protection ? 1 : 0), 1);\n        writeheader(gfc, (gfc.bitrate_index), 4);\n        writeheader(gfc, (gfc.samplerate_index), 2);\n        writeheader(gfc, (gfc.padding), 1);\n        writeheader(gfc, (gfp.extension), 1);\n        writeheader(gfc, (gfp.mode.ordinal()), 2);\n        writeheader(gfc, (gfc.mode_ext), 2);\n        writeheader(gfc, (gfp.copyright), 1);\n        writeheader(gfc, (gfp.original), 1);\n        writeheader(gfc, (gfp.emphasis), 2);\n        if (gfp.error_protection) {\n            writeheader(gfc, 0, 16);\n            /* dummy */\n        }\n\n        if (gfp.version == 1) {\n            /* MPEG1 */\n            assert$17(l3_side.main_data_begin >= 0);\n            writeheader(gfc, (l3_side.main_data_begin), 9);\n\n            if (gfc.channels_out == 2)\n                writeheader(gfc, l3_side.private_bits, 3);\n            else\n                writeheader(gfc, l3_side.private_bits, 5);\n\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var band;\n                for (band = 0; band < 4; band++) {\n                    writeheader(gfc, l3_side.scfsi[ch][band], 1);\n                }\n            }\n\n            for (gr = 0; gr < 2; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    var gi = l3_side.tt[gr][ch];\n                    writeheader(gfc, gi.part2_3_length + gi.part2_length, 12);\n                    writeheader(gfc, gi.big_values / 2, 9);\n                    writeheader(gfc, gi.global_gain, 8);\n                    writeheader(gfc, gi.scalefac_compress, 4);\n\n                    if (gi.block_type != Encoder_1.NORM_TYPE) {\n                        writeheader(gfc, 1, 1);\n                        /* window_switching_flag */\n                        writeheader(gfc, gi.block_type, 2);\n                        writeheader(gfc, gi.mixed_block_flag, 1);\n\n                        if (gi.table_select[0] == 14)\n                            gi.table_select[0] = 16;\n                        writeheader(gfc, gi.table_select[0], 5);\n                        if (gi.table_select[1] == 14)\n                            gi.table_select[1] = 16;\n                        writeheader(gfc, gi.table_select[1], 5);\n\n                        writeheader(gfc, gi.subblock_gain[0], 3);\n                        writeheader(gfc, gi.subblock_gain[1], 3);\n                        writeheader(gfc, gi.subblock_gain[2], 3);\n                    } else {\n                        writeheader(gfc, 0, 1);\n                        /* window_switching_flag */\n                        if (gi.table_select[0] == 14)\n                            gi.table_select[0] = 16;\n                        writeheader(gfc, gi.table_select[0], 5);\n                        if (gi.table_select[1] == 14)\n                            gi.table_select[1] = 16;\n                        writeheader(gfc, gi.table_select[1], 5);\n                        if (gi.table_select[2] == 14)\n                            gi.table_select[2] = 16;\n                        writeheader(gfc, gi.table_select[2], 5);\n\n                        assert$17(0 <= gi.region0_count && gi.region0_count < 16);\n                        assert$17(0 <= gi.region1_count && gi.region1_count < 8);\n                        writeheader(gfc, gi.region0_count, 4);\n                        writeheader(gfc, gi.region1_count, 3);\n                    }\n                    writeheader(gfc, gi.preflag, 1);\n                    writeheader(gfc, gi.scalefac_scale, 1);\n                    writeheader(gfc, gi.count1table_select, 1);\n                }\n            }\n        } else {\n            /* MPEG2 */\n            assert$17(l3_side.main_data_begin >= 0);\n            writeheader(gfc, (l3_side.main_data_begin), 8);\n            writeheader(gfc, l3_side.private_bits, gfc.channels_out);\n\n            gr = 0;\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var gi = l3_side.tt[gr][ch];\n                writeheader(gfc, gi.part2_3_length + gi.part2_length, 12);\n                writeheader(gfc, gi.big_values / 2, 9);\n                writeheader(gfc, gi.global_gain, 8);\n                writeheader(gfc, gi.scalefac_compress, 9);\n\n                if (gi.block_type != Encoder_1.NORM_TYPE) {\n                    writeheader(gfc, 1, 1);\n                    /* window_switching_flag */\n                    writeheader(gfc, gi.block_type, 2);\n                    writeheader(gfc, gi.mixed_block_flag, 1);\n\n                    if (gi.table_select[0] == 14)\n                        gi.table_select[0] = 16;\n                    writeheader(gfc, gi.table_select[0], 5);\n                    if (gi.table_select[1] == 14)\n                        gi.table_select[1] = 16;\n                    writeheader(gfc, gi.table_select[1], 5);\n\n                    writeheader(gfc, gi.subblock_gain[0], 3);\n                    writeheader(gfc, gi.subblock_gain[1], 3);\n                    writeheader(gfc, gi.subblock_gain[2], 3);\n                } else {\n                    writeheader(gfc, 0, 1);\n                    /* window_switching_flag */\n                    if (gi.table_select[0] == 14)\n                        gi.table_select[0] = 16;\n                    writeheader(gfc, gi.table_select[0], 5);\n                    if (gi.table_select[1] == 14)\n                        gi.table_select[1] = 16;\n                    writeheader(gfc, gi.table_select[1], 5);\n                    if (gi.table_select[2] == 14)\n                        gi.table_select[2] = 16;\n                    writeheader(gfc, gi.table_select[2], 5);\n\n                    assert$17(0 <= gi.region0_count && gi.region0_count < 16);\n                    assert$17(0 <= gi.region1_count && gi.region1_count < 8);\n                    writeheader(gfc, gi.region0_count, 4);\n                    writeheader(gfc, gi.region1_count, 3);\n                }\n\n                writeheader(gfc, gi.scalefac_scale, 1);\n                writeheader(gfc, gi.count1table_select, 1);\n            }\n        }\n\n        if (gfp.error_protection) {\n            /* (jo) error_protection: add crc16 information to header */\n            CRC_writeheader(gfc, gfc.header[gfc.h_ptr].buf);\n        }\n\n        {\n            var old = gfc.h_ptr;\n            assert$17(gfc.header[old].ptr == gfc.sideinfo_len * 8);\n\n            gfc.h_ptr = (old + 1) & (LameInternalFlags_1.MAX_HEADER_BUF - 1);\n            gfc.header[gfc.h_ptr].write_timing = gfc.header[old].write_timing\n                + bitsPerFrame;\n\n            if (gfc.h_ptr == gfc.w_ptr) {\n                /* yikes! we are out of header buffer space */\n                System$17.err\n                    .println(\"Error: MAX_HEADER_BUF too small in bitstream.c \\n\");\n            }\n\n        }\n    }\n\n    function huffman_coder_count1(gfc, gi) {\n        /* Write count1 area */\n        var h = Tables_1.ht[gi.count1table_select + 32];\n        var i, bits = 0;\n\n        var ix = gi.big_values;\n        var xr = gi.big_values;\n        assert$17(gi.count1table_select < 2);\n\n        for (i = (gi.count1 - gi.big_values) / 4; i > 0; --i) {\n            var huffbits = 0;\n            var p = 0, v;\n\n            v = gi.l3_enc[ix + 0];\n            if (v != 0) {\n                p += 8;\n                if (gi.xr[xr + 0] < 0)\n                    huffbits++;\n                assert$17(v <= 1);\n            }\n\n            v = gi.l3_enc[ix + 1];\n            if (v != 0) {\n                p += 4;\n                huffbits *= 2;\n                if (gi.xr[xr + 1] < 0)\n                    huffbits++;\n                assert$17(v <= 1);\n            }\n\n            v = gi.l3_enc[ix + 2];\n            if (v != 0) {\n                p += 2;\n                huffbits *= 2;\n                if (gi.xr[xr + 2] < 0)\n                    huffbits++;\n                assert$17(v <= 1);\n            }\n\n            v = gi.l3_enc[ix + 3];\n            if (v != 0) {\n                p++;\n                huffbits *= 2;\n                if (gi.xr[xr + 3] < 0)\n                    huffbits++;\n                assert$17(v <= 1);\n            }\n\n            ix += 4;\n            xr += 4;\n            putbits2(gfc, huffbits + h.table[p], h.hlen[p]);\n            bits += h.hlen[p];\n        }\n        return bits;\n    }\n\n    /**\n     * Implements the pseudocode of page 98 of the IS\n     */\n    function Huffmancode(gfc, tableindex, start, end, gi) {\n        var h = Tables_1.ht[tableindex];\n        var bits = 0;\n\n        assert$17(tableindex < 32);\n        if (0 == tableindex)\n            return bits;\n\n        for (var i = start; i < end; i += 2) {\n            var cbits = 0;\n            var xbits = 0;\n            var linbits = h.xlen;\n            var xlen = h.xlen;\n            var ext = 0;\n            var x1 = gi.l3_enc[i];\n            var x2 = gi.l3_enc[i + 1];\n\n            if (x1 != 0) {\n                if (gi.xr[i] < 0)\n                    ext++;\n                cbits--;\n            }\n\n            if (tableindex > 15) {\n                /* use ESC-words */\n                if (x1 > 14) {\n                    var linbits_x1 = x1 - 15;\n                    assert$17(linbits_x1 <= h.linmax);\n                    ext |= linbits_x1 << 1;\n                    xbits = linbits;\n                    x1 = 15;\n                }\n\n                if (x2 > 14) {\n                    var linbits_x2 = x2 - 15;\n                    assert$17(linbits_x2 <= h.linmax);\n                    ext <<= linbits;\n                    ext |= linbits_x2;\n                    xbits += linbits;\n                    x2 = 15;\n                }\n                xlen = 16;\n            }\n\n            if (x2 != 0) {\n                ext <<= 1;\n                if (gi.xr[i + 1] < 0)\n                    ext++;\n                cbits--;\n            }\n\n            assert$17((x1 | x2) < 16);\n\n            x1 = x1 * xlen + x2;\n            xbits -= cbits;\n            cbits += h.hlen[x1];\n\n            assert$17(cbits <= MAX_LENGTH);\n            assert$17(xbits <= MAX_LENGTH);\n\n            putbits2(gfc, h.table[x1], cbits);\n            putbits2(gfc, ext, xbits);\n            bits += cbits + xbits;\n        }\n        return bits;\n    }\n\n    /**\n     * Note the discussion of huffmancodebits() on pages 28 and 29 of the IS, as\n     * well as the definitions of the side information on pages 26 and 27.\n     */\n    function ShortHuffmancodebits(gfc, gi) {\n        var region1Start = 3 * gfc.scalefac_band.s[3];\n        if (region1Start > gi.big_values)\n            region1Start = gi.big_values;\n\n        /* short blocks do not have a region2 */\n        var bits = Huffmancode(gfc, gi.table_select[0], 0, region1Start, gi);\n        bits += Huffmancode(gfc, gi.table_select[1], region1Start,\n            gi.big_values, gi);\n        return bits;\n    }\n\n    function LongHuffmancodebits(gfc, gi) {\n        var bigvalues, bits;\n        var region1Start, region2Start;\n\n        bigvalues = gi.big_values;\n        assert$17(0 <= bigvalues && bigvalues <= 576);\n\n        var i = gi.region0_count + 1;\n        assert$17(0 <= i);\n        assert$17(i < gfc.scalefac_band.l.length);\n        region1Start = gfc.scalefac_band.l[i];\n        i += gi.region1_count + 1;\n        assert$17(0 <= i);\n        assert$17(i < gfc.scalefac_band.l.length);\n        region2Start = gfc.scalefac_band.l[i];\n\n        if (region1Start > bigvalues)\n            region1Start = bigvalues;\n\n        if (region2Start > bigvalues)\n            region2Start = bigvalues;\n\n        bits = Huffmancode(gfc, gi.table_select[0], 0, region1Start, gi);\n        bits += Huffmancode(gfc, gi.table_select[1], region1Start,\n            region2Start, gi);\n        bits += Huffmancode(gfc, gi.table_select[2], region2Start, bigvalues,\n            gi);\n        return bits;\n    }\n\n    function writeMainData(gfp) {\n        var gr, ch, sfb, data_bits, tot_bits = 0;\n        var gfc = gfp.internal_flags;\n        var l3_side = gfc.l3_side;\n\n        if (gfp.version == 1) {\n            /* MPEG 1 */\n            for (gr = 0; gr < 2; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    var gi = l3_side.tt[gr][ch];\n                    var slen1 = Takehiro_1.slen1_tab[gi.scalefac_compress];\n                    var slen2 = Takehiro_1.slen2_tab[gi.scalefac_compress];\n                    data_bits = 0;\n                    for (sfb = 0; sfb < gi.sfbdivide; sfb++) {\n                        if (gi.scalefac[sfb] == -1)\n                            continue;\n                        /* scfsi is used */\n                        putbits2(gfc, gi.scalefac[sfb], slen1);\n                        data_bits += slen1;\n                    }\n                    for (; sfb < gi.sfbmax; sfb++) {\n                        if (gi.scalefac[sfb] == -1)\n                            continue;\n                        /* scfsi is used */\n                        putbits2(gfc, gi.scalefac[sfb], slen2);\n                        data_bits += slen2;\n                    }\n                    assert$17(data_bits == gi.part2_length);\n\n                    if (gi.block_type == Encoder_1.SHORT_TYPE) {\n                        data_bits += ShortHuffmancodebits(gfc, gi);\n                    } else {\n                        data_bits += LongHuffmancodebits(gfc, gi);\n                    }\n                    data_bits += huffman_coder_count1(gfc, gi);\n                    /* does bitcount in quantize.c agree with actual bit count? */\n                    assert$17(data_bits == gi.part2_3_length + gi.part2_length);\n                    tot_bits += data_bits;\n                }\n                /* for ch */\n            }\n            /* for gr */\n        } else {\n            /* MPEG 2 */\n            gr = 0;\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var gi = l3_side.tt[gr][ch];\n                var i, sfb_partition, scale_bits = 0;\n                assert$17(gi.sfb_partition_table != null);\n                data_bits = 0;\n                sfb = 0;\n                sfb_partition = 0;\n\n                if (gi.block_type == Encoder_1.SHORT_TYPE) {\n                    for (; sfb_partition < 4; sfb_partition++) {\n                        var sfbs = gi.sfb_partition_table[sfb_partition] / 3;\n                        var slen = gi.slen[sfb_partition];\n                        for (i = 0; i < sfbs; i++, sfb++) {\n                            putbits2(gfc,\n                                Math.max(gi.scalefac[sfb * 3 + 0], 0), slen);\n                            putbits2(gfc,\n                                Math.max(gi.scalefac[sfb * 3 + 1], 0), slen);\n                            putbits2(gfc,\n                                Math.max(gi.scalefac[sfb * 3 + 2], 0), slen);\n                            scale_bits += 3 * slen;\n                        }\n                    }\n                    data_bits += ShortHuffmancodebits(gfc, gi);\n                } else {\n                    for (; sfb_partition < 4; sfb_partition++) {\n                        var sfbs = gi.sfb_partition_table[sfb_partition];\n                        var slen = gi.slen[sfb_partition];\n                        for (i = 0; i < sfbs; i++, sfb++) {\n                            putbits2(gfc, Math.max(gi.scalefac[sfb], 0), slen);\n                            scale_bits += slen;\n                        }\n                    }\n                    data_bits += LongHuffmancodebits(gfc, gi);\n                }\n                data_bits += huffman_coder_count1(gfc, gi);\n                /* does bitcount in quantize.c agree with actual bit count? */\n                assert$17(data_bits == gi.part2_3_length);\n                assert$17(scale_bits == gi.part2_length);\n                tot_bits += scale_bits + data_bits;\n            }\n            /* for ch */\n        }\n        /* for gf */\n        return tot_bits;\n    }\n\n    /* main_data */\n\n    function TotalBytes() {\n        this.total = 0;\n    }\n\n    /*\n     * compute the number of bits required to flush all mp3 frames currently in\n     * the buffer. This should be the same as the reservoir size. Only call this\n     * routine between frames - i.e. only after all headers and data have been\n     * added to the buffer by format_bitstream().\n     *\n     * Also compute total_bits_output = size of mp3 buffer (including frame\n     * headers which may not have yet been send to the mp3 buffer) + number of\n     * bits needed to flush all mp3 frames.\n     *\n     * total_bytes_output is the size of the mp3 output buffer if\n     * lame_encode_flush_nogap() was called right now.\n     */\n    function compute_flushbits(gfp, total_bytes_output) {\n        var gfc = gfp.internal_flags;\n        var flushbits, remaining_headers;\n        var bitsPerFrame;\n        var last_ptr, first_ptr;\n        first_ptr = gfc.w_ptr;\n        /* first header to add to bitstream */\n        last_ptr = gfc.h_ptr - 1;\n        /* last header to add to bitstream */\n        if (last_ptr == -1)\n            last_ptr = LameInternalFlags_1.MAX_HEADER_BUF - 1;\n\n        /* add this many bits to bitstream so we can flush all headers */\n        flushbits = gfc.header[last_ptr].write_timing - totbit;\n        total_bytes_output.total = flushbits;\n\n        if (flushbits >= 0) {\n            /* if flushbits >= 0, some headers have not yet been written */\n            /* reduce flushbits by the size of the headers */\n            remaining_headers = 1 + last_ptr - first_ptr;\n            if (last_ptr < first_ptr)\n                remaining_headers = 1 + last_ptr - first_ptr\n                    + LameInternalFlags_1.MAX_HEADER_BUF;\n            flushbits -= remaining_headers * 8 * gfc.sideinfo_len;\n        }\n\n        /*\n         * finally, add some bits so that the last frame is complete these bits\n         * are not necessary to decode the last frame, but some decoders will\n         * ignore last frame if these bits are missing\n         */\n        bitsPerFrame = self.getframebits(gfp);\n        flushbits += bitsPerFrame;\n        total_bytes_output.total += bitsPerFrame;\n        /* round up: */\n        if ((total_bytes_output.total % 8) != 0)\n            total_bytes_output.total = 1 + (total_bytes_output.total / 8);\n        else\n            total_bytes_output.total = (total_bytes_output.total / 8);\n        total_bytes_output.total += bufByteIdx + 1;\n\n        if (flushbits < 0) {\n            System$17.err.println(\"strange error flushing buffer ... \\n\");\n        }\n        return flushbits;\n    }\n\n    this.flush_bitstream = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var l3_side;\n        var flushbits;\n        var last_ptr = gfc.h_ptr - 1;\n        /* last header to add to bitstream */\n        if (last_ptr == -1)\n            last_ptr = LameInternalFlags_1.MAX_HEADER_BUF - 1;\n        l3_side = gfc.l3_side;\n\n        if ((flushbits = compute_flushbits(gfp, new TotalBytes())) < 0)\n            return;\n        drain_into_ancillary(gfp, flushbits);\n\n        /* check that the 100% of the last frame has been written to bitstream */\n        assert$17(gfc.header[last_ptr].write_timing + this.getframebits(gfp) == totbit);\n\n        /*\n         * we have padded out all frames with ancillary data, which is the same\n         * as filling the bitreservoir with ancillary data, so :\n         */\n        gfc.ResvSize = 0;\n        l3_side.main_data_begin = 0;\n\n        /* save the ReplayGain value */\n        if (gfc.findReplayGain) {\n            var RadioGain = ga.GetTitleGain(gfc.rgdata);\n            assert$17(NEQ(RadioGain, GainAnalysis.GAIN_NOT_ENOUGH_SAMPLES));\n            gfc.RadioGain = Math.floor(RadioGain * 10.0 + 0.5) | 0;\n            /* round to nearest */\n        }\n\n        /* find the gain and scale change required for no clipping */\n        if (gfc.findPeakSample) {\n            gfc.noclipGainChange = Math.ceil(Math\n                        .log10(gfc.PeakSample / 32767.0) * 20.0 * 10.0) | 0;\n            /* round up */\n\n            if (gfc.noclipGainChange > 0) {\n                /* clipping occurs */\n                if (EQ(gfp.scale, 1.0) || EQ(gfp.scale, 0.0))\n                    gfc.noclipScale = (Math\n                        .floor((32767.0 / gfc.PeakSample) * 100.0) / 100.0);\n                /* round down */\n                else {\n                    /*\n                     * the user specified his own scaling factor. We could\n                     * suggest the scaling factor of\n                     * (32767.0/gfp.PeakSample)*(gfp.scale) but it's usually\n                     * very inaccurate. So we'd rather not advice him on the\n                     * scaling factor.\n                     */\n                    gfc.noclipScale = -1;\n                }\n            } else\n            /* no clipping */\n                gfc.noclipScale = -1;\n        }\n    };\n\n    this.add_dummy_byte = function (gfp, val, n) {\n        var gfc = gfp.internal_flags;\n        var i;\n\n        while (n-- > 0) {\n            putbits_noheaders(gfc, val, 8);\n\n            for (i = 0; i < LameInternalFlags_1.MAX_HEADER_BUF; ++i)\n                gfc.header[i].write_timing += 8;\n        }\n    };\n\n    /**\n     * This is called after a frame of audio has been quantized and coded. It\n     * will write the encoded audio to the bitstream. Note that from a layer3\n     * encoder's perspective the bit stream is primarily a series of main_data()\n     * blocks, with header and side information inserted at the proper locations\n     * to maintain framing. (See Figure A.7 in the IS).\n     */\n    this.format_bitstream = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var l3_side;\n        l3_side = gfc.l3_side;\n\n        var bitsPerFrame = this.getframebits(gfp);\n        drain_into_ancillary(gfp, l3_side.resvDrain_pre);\n\n        encodeSideInfo2(gfp, bitsPerFrame);\n        var bits = 8 * gfc.sideinfo_len;\n        bits += writeMainData(gfp);\n        drain_into_ancillary(gfp, l3_side.resvDrain_post);\n        bits += l3_side.resvDrain_post;\n\n        l3_side.main_data_begin += (bitsPerFrame - bits) / 8;\n\n        /*\n         * compare number of bits needed to clear all buffered mp3 frames with\n         * what we think the resvsize is:\n         */\n        if (compute_flushbits(gfp, new TotalBytes()) != gfc.ResvSize) {\n            System$17.err.println(\"Internal buffer inconsistency. flushbits <> ResvSize\");\n        }\n\n        /*\n         * compare main_data_begin for the next frame with what we think the\n         * resvsize is:\n         */\n        if ((l3_side.main_data_begin * 8) != gfc.ResvSize) {\n            System$17.err.printf(\"bit reservoir error: \\n\"\n                + \"l3_side.main_data_begin: %d \\n\"\n                + \"Resvoir size:             %d \\n\"\n                + \"resv drain (post)         %d \\n\"\n                + \"resv drain (pre)          %d \\n\"\n                + \"header and sideinfo:      %d \\n\"\n                + \"data bits:                %d \\n\"\n                + \"total bits:               %d (remainder: %d) \\n\"\n                + \"bitsperframe:             %d \\n\",\n                8 * l3_side.main_data_begin, gfc.ResvSize,\n                l3_side.resvDrain_post, l3_side.resvDrain_pre,\n                8 * gfc.sideinfo_len, bits - l3_side.resvDrain_post - 8\n                * gfc.sideinfo_len, bits, bits % 8, bitsPerFrame);\n\n            System$17.err.println(\"This is a fatal error.  It has several possible causes:\");\n            System$17.err.println(\"90%%  LAME compiled with buggy version of gcc using advanced optimizations\");\n            System$17.err.println(\" 9%%  Your system is overclocked\");\n            System$17.err.println(\" 1%%  bug in LAME encoding library\");\n\n            gfc.ResvSize = l3_side.main_data_begin * 8;\n        }\n        //;\n        assert$17(totbit % 8 == 0);\n\n        if (totbit > 1000000000) {\n            /*\n             * to avoid totbit overflow, (at 8h encoding at 128kbs) lets reset\n             * bit counter\n             */\n            var i;\n            for (i = 0; i < LameInternalFlags_1.MAX_HEADER_BUF; ++i)\n                gfc.header[i].write_timing -= totbit;\n            totbit = 0;\n        }\n\n        return 0;\n    };\n\n    /**\n     * <PRE>\n     * copy data out of the internal MP3 bit buffer into a user supplied\n     *       unsigned char buffer.\n     *\n     *       mp3data=0      indicates data in buffer is an id3tags and VBR tags\n     *       mp3data=1      data is real mp3 frame data.\n     * </PRE>\n     */\n    this.copy_buffer = function (gfc, buffer, bufferPos, size, mp3data) {\n        var minimum = bufByteIdx + 1;\n        if (minimum <= 0)\n            return 0;\n        if (size != 0 && minimum > size) {\n            /* buffer is too small */\n            return -1;\n        }\n        System$17.arraycopy(buf, 0, buffer, bufferPos, minimum);\n        bufByteIdx = -1;\n        bufBitIdx = 0;\n\n        if (mp3data != 0) {\n            var crc = new_int$17(1);\n            crc[0] = gfc.nMusicCRC;\n            vbr.updateMusicCRC(crc, buffer, bufferPos, minimum);\n            gfc.nMusicCRC = crc[0];\n\n            /**\n             * sum number of bytes belonging to the mp3 stream this info will be\n             * written into the Xing/LAME header for seeking\n             */\n            if (minimum > 0) {\n                gfc.VBR_seek_table.nBytesWritten += minimum;\n            }\n\n            if (gfc.decode_on_the_fly) { /* decode the frame */\n                var pcm_buf = new_float_n$17([2, 1152]);\n                var mp3_in = minimum;\n                var samples_out = -1;\n                var i;\n\n                /* re-synthesis to pcm. Repeat until we get a samples_out=0 */\n                while (samples_out != 0) {\n\n                    samples_out = mpg.hip_decode1_unclipped(gfc.hip, buffer,\n                        bufferPos, mp3_in, pcm_buf[0], pcm_buf[1]);\n                    /*\n                     * samples_out = 0: need more data to decode samples_out =\n                     * -1: error. Lets assume 0 pcm output samples_out = number\n                     * of samples output\n                     */\n\n                    /*\n                     * set the lenght of the mp3 input buffer to zero, so that\n                     * in the next iteration of the loop we will be querying\n                     * mpglib about buffered data\n                     */\n                    mp3_in = 0;\n\n                    if (samples_out == -1) {\n                        /*\n                         * error decoding. Not fatal, but might screw up the\n                         * ReplayGain tag. What should we do? Ignore for now\n                         */\n                        samples_out = 0;\n                    }\n                    if (samples_out > 0) {\n                        /* process the PCM data */\n\n                        /*\n                         * this should not be possible, and indicates we have\n                         * overflown the pcm_buf buffer\n                         */\n                        assert$17(samples_out <= 1152);\n\n                        if (gfc.findPeakSample) {\n                            for (i = 0; i < samples_out; i++) {\n                                if (pcm_buf[0][i] > gfc.PeakSample)\n                                    gfc.PeakSample = pcm_buf[0][i];\n                                else if (-pcm_buf[0][i] > gfc.PeakSample)\n                                    gfc.PeakSample = -pcm_buf[0][i];\n                            }\n                            if (gfc.channels_out > 1)\n                                for (i = 0; i < samples_out; i++) {\n                                    if (pcm_buf[1][i] > gfc.PeakSample)\n                                        gfc.PeakSample = pcm_buf[1][i];\n                                    else if (-pcm_buf[1][i] > gfc.PeakSample)\n                                        gfc.PeakSample = -pcm_buf[1][i];\n                                }\n                        }\n\n                        if (gfc.findReplayGain)\n                            if (ga.AnalyzeSamples(gfc.rgdata, pcm_buf[0], 0,\n                                    pcm_buf[1], 0, samples_out,\n                                    gfc.channels_out) == GainAnalysis.GAIN_ANALYSIS_ERROR)\n                                return -6;\n\n                    }\n                    /* if (samples_out>0) */\n                }\n                /* while (samples_out!=0) */\n            }\n            /* if (gfc.decode_on_the_fly) */\n\n        }\n        /* if (mp3data) */\n        return minimum;\n    };\n\n    this.init_bit_stream_w = function (gfc) {\n        buf = new_byte$17(Lame.LAME_MAXMP3BUFFER);\n\n        gfc.h_ptr = gfc.w_ptr = 0;\n        gfc.header[gfc.h_ptr].write_timing = 0;\n        bufByteIdx = -1;\n        bufBitIdx = 0;\n        totbit = 0;\n    };\n\n    // From machine.h\n\n\n}\n\nvar BitStream_1 = BitStream$1;\n\nvar System$2 = common.System;\nvar VbrMode$2 = common.VbrMode;\nvar ShortBlock$2 = common.ShortBlock;\nvar new_float$2 = common.new_float;\nvar new_int_n$2 = common.new_int_n;\nvar new_short_n$1 = common.new_short_n;\nvar assert$2 = common.assert;\n\n\n\n\n\n\n\n\n\n\n\nfunction Lame$1() {\n    var self = this;\n    var LAME_MAXALBUMART = (128 * 1024);\n\n    Lame$1.V9 = 410;\n    Lame$1.V8 = 420;\n    Lame$1.V7 = 430;\n    Lame$1.V6 = 440;\n    Lame$1.V5 = 450;\n    Lame$1.V4 = 460;\n    Lame$1.V3 = 470;\n    Lame$1.V2 = 480;\n    Lame$1.V1 = 490;\n    Lame$1.V0 = 500;\n\n    /* still there for compatibility */\n\n    Lame$1.R3MIX = 1000;\n    Lame$1.STANDARD = 1001;\n    Lame$1.EXTREME = 1002;\n    Lame$1.INSANE = 1003;\n    Lame$1.STANDARD_FAST = 1004;\n    Lame$1.EXTREME_FAST = 1005;\n    Lame$1.MEDIUM = 1006;\n    Lame$1.MEDIUM_FAST = 1007;\n\n    /**\n     * maximum size of mp3buffer needed if you encode at most 1152 samples for\n     * each call to lame_encode_buffer. see lame_encode_buffer() below\n     * (LAME_MAXMP3BUFFER is now obsolete)\n     */\n    var LAME_MAXMP3BUFFER = (16384 + LAME_MAXALBUMART);\n    Lame$1.LAME_MAXMP3BUFFER = LAME_MAXMP3BUFFER;\n\n    var ga;\n    var bs;\n    var p;\n    var qupvt;\n    var qu;\n    var psy = new PsyModel_1();\n    var vbr;\n    var ver;\n    var id3;\n    var mpglib;\n    this.enc = new Encoder_1();\n\n    this.setModules = function (_ga, _bs, _p, _qupvt, _qu, _vbr, _ver, _id3, _mpglib) {\n        ga = _ga;\n        bs = _bs;\n        p = _p;\n        qupvt = _qupvt;\n        qu = _qu;\n        vbr = _vbr;\n        ver = _ver;\n        id3 = _id3;\n        mpglib = _mpglib;\n        this.enc.setModules(bs, psy, qupvt, vbr);\n    };\n\n    /**\n     * PSY Model related stuff\n     */\n    function PSY() {\n        /**\n         * The dbQ stuff.\n         */\n        this.mask_adjust = 0.;\n        /**\n         * The dbQ stuff.\n         */\n        this.mask_adjust_short = 0.;\n        /* at transition from one scalefactor band to next */\n        /**\n         * Band weight long scalefactor bands.\n         */\n        this.bo_l_weight = new_float$2(Encoder_1.SBMAX_l);\n        /**\n         * Band weight short scalefactor bands.\n         */\n        this.bo_s_weight = new_float$2(Encoder_1.SBMAX_s);\n    }\n\n    function LowPassHighPass() {\n        this.lowerlimit = 0.;\n    }\n\n    function BandPass(bitrate, lPass) {\n        this.lowpass = lPass;\n    }\n\n    var LAME_ID = 0xFFF88E3B;\n\n    function lame_init_old(gfp) {\n        var gfc;\n\n        gfp.class_id = LAME_ID;\n\n        gfc = gfp.internal_flags = new LameInternalFlags_1();\n\n        /* Global flags. set defaults here for non-zero values */\n        /* see lame.h for description */\n        /*\n         * set integer values to -1 to mean that LAME will compute the best\n         * value, UNLESS the calling program as set it (and the value is no\n         * longer -1)\n         */\n\n        gfp.mode = MPEGMode.NOT_SET;\n        gfp.original = 1;\n        gfp.in_samplerate = 44100;\n        gfp.num_channels = 2;\n        gfp.num_samples = -1;\n\n        gfp.bWriteVbrTag = true;\n        gfp.quality = -1;\n        gfp.short_blocks = null;\n        gfc.subblock_gain = -1;\n\n        gfp.lowpassfreq = 0;\n        gfp.highpassfreq = 0;\n        gfp.lowpasswidth = -1;\n        gfp.highpasswidth = -1;\n\n        gfp.VBR = VbrMode$2.vbr_off;\n        gfp.VBR_q = 4;\n        gfp.ATHcurve = -1;\n        gfp.VBR_mean_bitrate_kbps = 128;\n        gfp.VBR_min_bitrate_kbps = 0;\n        gfp.VBR_max_bitrate_kbps = 0;\n        gfp.VBR_hard_min = 0;\n        gfc.VBR_min_bitrate = 1;\n        /* not 0 ????? */\n        gfc.VBR_max_bitrate = 13;\n        /* not 14 ????? */\n\n        gfp.quant_comp = -1;\n        gfp.quant_comp_short = -1;\n\n        gfp.msfix = -1;\n\n        gfc.resample_ratio = 1;\n\n        gfc.OldValue[0] = 180;\n        gfc.OldValue[1] = 180;\n        gfc.CurrentStep[0] = 4;\n        gfc.CurrentStep[1] = 4;\n        gfc.masking_lower = 1;\n        gfc.nsPsy.attackthre = -1;\n        gfc.nsPsy.attackthre_s = -1;\n\n        gfp.scale = -1;\n\n        gfp.athaa_type = -1;\n        gfp.ATHtype = -1;\n        /* default = -1 = set in lame_init_params */\n        gfp.athaa_loudapprox = -1;\n        /* 1 = flat loudness approx. (total energy) */\n        /* 2 = equal loudness curve */\n        gfp.athaa_sensitivity = 0.0;\n        /* no offset */\n        gfp.useTemporal = null;\n        gfp.interChRatio = -1;\n\n        /*\n         * The reason for int mf_samples_to_encode = ENCDELAY + POSTDELAY;\n         * ENCDELAY = internal encoder delay. And then we have to add\n         * POSTDELAY=288 because of the 50% MDCT overlap. A 576 MDCT granule\n         * decodes to 1152 samples. To synthesize the 576 samples centered under\n         * this granule we need the previous granule for the first 288 samples\n         * (no problem), and the next granule for the next 288 samples (not\n         * possible if this is last granule). So we need to pad with 288 samples\n         * to make sure we can encode the 576 samples we are interested in.\n         */\n        gfc.mf_samples_to_encode = Encoder_1.ENCDELAY + Encoder_1.POSTDELAY;\n        gfp.encoder_padding = 0;\n        gfc.mf_size = Encoder_1.ENCDELAY - Encoder_1.MDCTDELAY;\n        /*\n         * we pad input with this many 0's\n         */\n\n        gfp.findReplayGain = false;\n        gfp.decode_on_the_fly = false;\n\n        gfc.decode_on_the_fly = false;\n        gfc.findReplayGain = false;\n        gfc.findPeakSample = false;\n\n        gfc.RadioGain = 0;\n        gfc.AudiophileGain = 0;\n        gfc.noclipGainChange = 0;\n        gfc.noclipScale = -1.0;\n\n        gfp.preset = 0;\n\n        gfp.write_id3tag_automatic = true;\n        return 0;\n    }\n\n    this.lame_init = function () {\n        var gfp = new LameGlobalFlags_1();\n\n        var ret = lame_init_old(gfp);\n        if (ret != 0) {\n            return null;\n        }\n\n        gfp.lame_allocated_gfp = 1;\n        return gfp;\n    };\n\n    function filter_coef(x) {\n        if (x > 1.0)\n            return 0.0;\n        if (x <= 0.0)\n            return 1.0;\n\n        return Math.cos(Math.PI / 2 * x);\n    }\n\n    this.nearestBitrateFullIndex = function (bitrate) {\n        /* borrowed from DM abr presets */\n\n        var full_bitrate_table = [8, 16, 24, 32, 40, 48, 56, 64, 80,\n            96, 112, 128, 160, 192, 224, 256, 320];\n\n        var lower_range = 0, lower_range_kbps = 0, upper_range = 0, upper_range_kbps = 0;\n\n        /* We assume specified bitrate will be 320kbps */\n        upper_range_kbps = full_bitrate_table[16];\n        upper_range = 16;\n        lower_range_kbps = full_bitrate_table[16];\n        lower_range = 16;\n\n        /*\n         * Determine which significant bitrates the value specified falls\n         * between, if loop ends without breaking then we were correct above\n         * that the value was 320\n         */\n        for (var b = 0; b < 16; b++) {\n            if ((Math.max(bitrate, full_bitrate_table[b + 1])) != bitrate) {\n                upper_range_kbps = full_bitrate_table[b + 1];\n                upper_range = b + 1;\n                lower_range_kbps = full_bitrate_table[b];\n                lower_range = (b);\n                break;\n                /* We found upper range */\n            }\n        }\n\n        /* Determine which range the value specified is closer to */\n        if ((upper_range_kbps - bitrate) > (bitrate - lower_range_kbps)) {\n            return lower_range;\n        }\n        return upper_range;\n    };\n\n    function optimum_samplefreq(lowpassfreq, input_samplefreq) {\n        /*\n         * Rules:\n         *\n         * - if possible, sfb21 should NOT be used\n         */\n        var suggested_samplefreq = 44100;\n\n        if (input_samplefreq >= 48000)\n            suggested_samplefreq = 48000;\n        else if (input_samplefreq >= 44100)\n            suggested_samplefreq = 44100;\n        else if (input_samplefreq >= 32000)\n            suggested_samplefreq = 32000;\n        else if (input_samplefreq >= 24000)\n            suggested_samplefreq = 24000;\n        else if (input_samplefreq >= 22050)\n            suggested_samplefreq = 22050;\n        else if (input_samplefreq >= 16000)\n            suggested_samplefreq = 16000;\n        else if (input_samplefreq >= 12000)\n            suggested_samplefreq = 12000;\n        else if (input_samplefreq >= 11025)\n            suggested_samplefreq = 11025;\n        else if (input_samplefreq >= 8000)\n            suggested_samplefreq = 8000;\n\n        if (lowpassfreq == -1)\n            return suggested_samplefreq;\n\n        if (lowpassfreq <= 15960)\n            suggested_samplefreq = 44100;\n        if (lowpassfreq <= 15250)\n            suggested_samplefreq = 32000;\n        if (lowpassfreq <= 11220)\n            suggested_samplefreq = 24000;\n        if (lowpassfreq <= 9970)\n            suggested_samplefreq = 22050;\n        if (lowpassfreq <= 7230)\n            suggested_samplefreq = 16000;\n        if (lowpassfreq <= 5420)\n            suggested_samplefreq = 12000;\n        if (lowpassfreq <= 4510)\n            suggested_samplefreq = 11025;\n        if (lowpassfreq <= 3970)\n            suggested_samplefreq = 8000;\n\n        if (input_samplefreq < suggested_samplefreq) {\n            /*\n             * choose a valid MPEG sample frequency above the input sample\n             * frequency to avoid SFB21/12 bitrate bloat rh 061115\n             */\n            if (input_samplefreq > 44100) {\n                return 48000;\n            }\n            if (input_samplefreq > 32000) {\n                return 44100;\n            }\n            if (input_samplefreq > 24000) {\n                return 32000;\n            }\n            if (input_samplefreq > 22050) {\n                return 24000;\n            }\n            if (input_samplefreq > 16000) {\n                return 22050;\n            }\n            if (input_samplefreq > 12000) {\n                return 16000;\n            }\n            if (input_samplefreq > 11025) {\n                return 12000;\n            }\n            if (input_samplefreq > 8000) {\n                return 11025;\n            }\n            return 8000;\n        }\n        return suggested_samplefreq;\n    }\n\n    /**\n     * convert samp freq in Hz to index\n     */\n    function SmpFrqIndex(sample_freq, gpf) {\n        switch (sample_freq) {\n            case 44100:\n                gpf.version = 1;\n                return 0;\n            case 48000:\n                gpf.version = 1;\n                return 1;\n            case 32000:\n                gpf.version = 1;\n                return 2;\n            case 22050:\n                gpf.version = 0;\n                return 0;\n            case 24000:\n                gpf.version = 0;\n                return 1;\n            case 16000:\n                gpf.version = 0;\n                return 2;\n            case 11025:\n                gpf.version = 0;\n                return 0;\n            case 12000:\n                gpf.version = 0;\n                return 1;\n            case 8000:\n                gpf.version = 0;\n                return 2;\n            default:\n                gpf.version = 0;\n                return -1;\n        }\n    }\n\n    /**\n     * @param bRate\n     *            legal rates from 8 to 320\n     */\n    function FindNearestBitrate(bRate, version, samplerate) {\n        /* MPEG-1 or MPEG-2 LSF */\n        if (samplerate < 16000)\n            version = 2;\n\n        var bitrate = Tables_1.bitrate_table[version][1];\n\n        for (var i = 2; i <= 14; i++) {\n            if (Tables_1.bitrate_table[version][i] > 0) {\n                if (Math.abs(Tables_1.bitrate_table[version][i] - bRate) < Math\n                        .abs(bitrate - bRate))\n                    bitrate = Tables_1.bitrate_table[version][i];\n            }\n        }\n        return bitrate;\n    }\n\n    /**\n     * @param bRate\n     *            legal rates from 32 to 448 kbps\n     * @param version\n     *            MPEG-1 or MPEG-2/2.5 LSF\n     */\n    function BitrateIndex(bRate, version, samplerate) {\n        /* convert bitrate in kbps to index */\n        if (samplerate < 16000)\n            version = 2;\n        for (var i = 0; i <= 14; i++) {\n            if (Tables_1.bitrate_table[version][i] > 0) {\n                if (Tables_1.bitrate_table[version][i] == bRate) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    function optimum_bandwidth(lh, bitrate) {\n        /**\n         * <PRE>\n         *  Input:\n         *      bitrate     total bitrate in kbps\n         *\n         *   Output:\n         *      lowerlimit: best lowpass frequency limit for input filter in Hz\n         *      upperlimit: best highpass frequency limit for input filter in Hz\n         * </PRE>\n         */\n        var freq_map = [new BandPass(8, 2000),\n            new BandPass(16, 3700), new BandPass(24, 3900),\n            new BandPass(32, 5500), new BandPass(40, 7000),\n            new BandPass(48, 7500), new BandPass(56, 10000),\n            new BandPass(64, 11000), new BandPass(80, 13500),\n            new BandPass(96, 15100), new BandPass(112, 15600),\n            new BandPass(128, 17000), new BandPass(160, 17500),\n            new BandPass(192, 18600), new BandPass(224, 19400),\n            new BandPass(256, 19700), new BandPass(320, 20500)];\n\n        var table_index = self.nearestBitrateFullIndex(bitrate);\n        lh.lowerlimit = freq_map[table_index].lowpass;\n    }\n\n    function lame_init_params_ppflt(gfp) {\n        var gfc = gfp.internal_flags;\n        /***************************************************************/\n        /* compute info needed for polyphase filter (filter type==0, default) */\n        /***************************************************************/\n\n        var lowpass_band = 32;\n        var highpass_band = -1;\n\n        if (gfc.lowpass1 > 0) {\n            var minband = 999;\n            for (var band = 0; band <= 31; band++) {\n                var freq = (band / 31.0);\n                /* this band and above will be zeroed: */\n                if (freq >= gfc.lowpass2) {\n                    lowpass_band = Math.min(lowpass_band, band);\n                }\n                if (gfc.lowpass1 < freq && freq < gfc.lowpass2) {\n                    minband = Math.min(minband, band);\n                }\n            }\n\n            /*\n             * compute the *actual* transition band implemented by the polyphase\n             * filter\n             */\n            if (minband == 999) {\n                gfc.lowpass1 = (lowpass_band - .75) / 31.0;\n            } else {\n                gfc.lowpass1 = (minband - .75) / 31.0;\n            }\n            gfc.lowpass2 = lowpass_band / 31.0;\n        }\n\n        /*\n         * make sure highpass filter is within 90% of what the effective\n         * highpass frequency will be\n         */\n        if (gfc.highpass2 > 0) {\n            if (gfc.highpass2 < .9 * (.75 / 31.0)) {\n                gfc.highpass1 = 0;\n                gfc.highpass2 = 0;\n                System$2.err.println(\"Warning: highpass filter disabled.  \"\n                    + \"highpass frequency too small\\n\");\n            }\n        }\n\n        if (gfc.highpass2 > 0) {\n            var maxband = -1;\n            for (var band = 0; band <= 31; band++) {\n                var freq = band / 31.0;\n                /* this band and below will be zereod */\n                if (freq <= gfc.highpass1) {\n                    highpass_band = Math.max(highpass_band, band);\n                }\n                if (gfc.highpass1 < freq && freq < gfc.highpass2) {\n                    maxband = Math.max(maxband, band);\n                }\n            }\n            /*\n             * compute the *actual* transition band implemented by the polyphase\n             * filter\n             */\n            gfc.highpass1 = highpass_band / 31.0;\n            if (maxband == -1) {\n                gfc.highpass2 = (highpass_band + .75) / 31.0;\n            } else {\n                gfc.highpass2 = (maxband + .75) / 31.0;\n            }\n        }\n\n        for (var band = 0; band < 32; band++) {\n            var fc1, fc2;\n            var freq = band / 31.0;\n            if (gfc.highpass2 > gfc.highpass1) {\n                fc1 = filter_coef((gfc.highpass2 - freq)\n                    / (gfc.highpass2 - gfc.highpass1 + 1e-20));\n            } else {\n                fc1 = 1.0;\n            }\n            if (gfc.lowpass2 > gfc.lowpass1) {\n                fc2 = filter_coef((freq - gfc.lowpass1)\n                    / (gfc.lowpass2 - gfc.lowpass1 + 1e-20));\n            } else {\n                fc2 = 1.0;\n            }\n            gfc.amp_filter[band] = (fc1 * fc2);\n        }\n    }\n\n    function lame_init_qval(gfp) {\n        var gfc = gfp.internal_flags;\n\n        switch (gfp.quality) {\n            default:\n            case 9: /* no psymodel, no noise shaping */\n                gfc.psymodel = 0;\n                gfc.noise_shaping = 0;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 8:\n                gfp.quality = 7;\n            //$FALL-THROUGH$\n            case 7:\n                /*\n                 * use psymodel (for short block and m/s switching), but no noise\n                 * shapping\n                 */\n                gfc.psymodel = 1;\n                gfc.noise_shaping = 0;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 6:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 5:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 4:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 3:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 1;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 2:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                if (gfc.substep_shaping == 0)\n                    gfc.substep_shaping = 2;\n                gfc.noise_shaping_amp = 1;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                /* inner loop */\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 1:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                if (gfc.substep_shaping == 0)\n                    gfc.substep_shaping = 2;\n                gfc.noise_shaping_amp = 2;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 0:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                if (gfc.substep_shaping == 0)\n                    gfc.substep_shaping = 2;\n                gfc.noise_shaping_amp = 2;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                /*\n                 * type 2 disabled because of it slowness, in favor of full outer\n                 * loop search\n                 */\n                gfc.full_outer_loop = 0;\n                /*\n                 * full outer loop search disabled because of audible distortions it\n                 * may generate rh 060629\n                 */\n                break;\n        }\n\n    }\n\n    function lame_init_bitstream(gfp) {\n        var gfc = gfp.internal_flags;\n        gfp.frameNum = 0;\n\n        if (gfp.write_id3tag_automatic) {\n            id3.id3tag_write_v2(gfp);\n        }\n        /* initialize histogram data optionally used by frontend */\n\n        gfc.bitrate_stereoMode_Hist = new_int_n$2([16, 4 + 1]);\n        gfc.bitrate_blockType_Hist = new_int_n$2([16, 4 + 1 + 1]);\n\n        gfc.PeakSample = 0.0;\n\n        /* Write initial VBR Header to bitstream and init VBR data */\n        if (gfp.bWriteVbrTag)\n            vbr.InitVbrTag(gfp);\n    }\n\n    /********************************************************************\n     * initialize internal params based on data in gf (globalflags struct filled\n     * in by calling program)\n     *\n     * OUTLINE:\n     *\n     * We first have some complex code to determine bitrate, output samplerate\n     * and mode. It is complicated by the fact that we allow the user to set\n     * some or all of these parameters, and need to determine best possible\n     * values for the rest of them:\n     *\n     * 1. set some CPU related flags 2. check if we are mono.mono, stereo.mono\n     * or stereo.stereo 3. compute bitrate and output samplerate: user may have\n     * set compression ratio user may have set a bitrate user may have set a\n     * output samplerate 4. set some options which depend on output samplerate\n     * 5. compute the actual compression ratio 6. set mode based on compression\n     * ratio\n     *\n     * The remaining code is much simpler - it just sets options based on the\n     * mode & compression ratio:\n     *\n     * set allow_diff_short based on mode select lowpass filter based on\n     * compression ratio & mode set the bitrate index, and min/max bitrates for\n     * VBR modes disable VBR tag if it is not appropriate initialize the\n     * bitstream initialize scalefac_band data set sideinfo_len (based on\n     * channels, CRC, out_samplerate) write an id3v2 tag into the bitstream\n     * write VBR tag into the bitstream set mpeg1/2 flag estimate the number of\n     * frames (based on a lot of data)\n     *\n     * now we set more flags: nspsytune: see code VBR modes see code CBR/ABR see\n     * code\n     *\n     * Finally, we set the algorithm flags based on the gfp.quality value\n     * lame_init_qval(gfp);\n     *\n     ********************************************************************/\n    this.lame_init_params = function (gfp) {\n        var gfc = gfp.internal_flags;\n\n        gfc.Class_ID = 0;\n        if (gfc.ATH == null)\n            gfc.ATH = new ATH_1();\n        if (gfc.PSY == null)\n            gfc.PSY = new PSY();\n        if (gfc.rgdata == null)\n            gfc.rgdata = new ReplayGain_1();\n\n        gfc.channels_in = gfp.num_channels;\n        if (gfc.channels_in == 1)\n            gfp.mode = MPEGMode.MONO;\n        gfc.channels_out = (gfp.mode == MPEGMode.MONO) ? 1 : 2;\n        gfc.mode_ext = Encoder_1.MPG_MD_MS_LR;\n        if (gfp.mode == MPEGMode.MONO)\n            gfp.force_ms = false;\n        /*\n         * don't allow forced mid/side stereo for mono output\n         */\n\n        if (gfp.VBR == VbrMode$2.vbr_off && gfp.VBR_mean_bitrate_kbps != 128\n            && gfp.brate == 0)\n            gfp.brate = gfp.VBR_mean_bitrate_kbps;\n\n        if (gfp.VBR == VbrMode$2.vbr_off || gfp.VBR == VbrMode$2.vbr_mtrh\n            || gfp.VBR == VbrMode$2.vbr_mt) {\n            /* these modes can handle free format condition */\n        } else {\n            gfp.free_format = false;\n            /* mode can't be mixed with free format */\n        }\n\n        if (gfp.VBR == VbrMode$2.vbr_off && gfp.brate == 0) {\n            /* no bitrate or compression ratio specified, use 11.025 */\n            if (BitStream_1.EQ(gfp.compression_ratio, 0))\n                gfp.compression_ratio = 11.025;\n            /*\n             * rate to compress a CD down to exactly 128000 bps\n             */\n        }\n\n        /* find bitrate if user specify a compression ratio */\n        if (gfp.VBR == VbrMode$2.vbr_off && gfp.compression_ratio > 0) {\n\n            if (gfp.out_samplerate == 0)\n                gfp.out_samplerate = map2MP3Frequency((int)(0.97 * gfp.in_samplerate));\n            /*\n             * round up with a margin of 3 %\n             */\n\n            /*\n             * choose a bitrate for the output samplerate which achieves\n             * specified compression ratio\n             */\n            gfp.brate = 0 | (gfp.out_samplerate * 16 * gfc.channels_out / (1.e3 * gfp.compression_ratio));\n\n            /* we need the version for the bitrate table look up */\n            gfc.samplerate_index = SmpFrqIndex(gfp.out_samplerate, gfp);\n\n            if (!gfp.free_format) /*\n             * for non Free Format find the nearest allowed\n             * bitrate\n             */\n                gfp.brate = FindNearestBitrate(gfp.brate, gfp.version,\n                    gfp.out_samplerate);\n        }\n\n        if (gfp.out_samplerate != 0) {\n            if (gfp.out_samplerate < 16000) {\n                gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps,\n                    8);\n                gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps,\n                    64);\n            } else if (gfp.out_samplerate < 32000) {\n                gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps,\n                    8);\n                gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps,\n                    160);\n            } else {\n                gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps,\n                    32);\n                gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps,\n                    320);\n            }\n        }\n\n        /****************************************************************/\n        /* if a filter has not been enabled, see if we should add one: */\n        /****************************************************************/\n        if (gfp.lowpassfreq == 0) {\n            var lowpass = 16000.;\n\n            switch (gfp.VBR) {\n                case VbrMode$2.vbr_off:\n                {\n                    var lh = new LowPassHighPass();\n                    optimum_bandwidth(lh, gfp.brate);\n                    lowpass = lh.lowerlimit;\n                    break;\n                }\n                case VbrMode$2.vbr_abr:\n                {\n                    var lh = new LowPassHighPass();\n                    optimum_bandwidth(lh, gfp.VBR_mean_bitrate_kbps);\n                    lowpass = lh.lowerlimit;\n                    break;\n                }\n                case VbrMode$2.vbr_rh:\n                {\n                    var x = [19500, 19000, 18600, 18000, 17500, 16000,\n                        15600, 14900, 12500, 10000, 3950];\n                    if (0 <= gfp.VBR_q && gfp.VBR_q <= 9) {\n                        var a = x[gfp.VBR_q], b = x[gfp.VBR_q + 1], m = gfp.VBR_q_frac;\n                        lowpass = linear_int(a, b, m);\n                    } else {\n                        lowpass = 19500;\n                    }\n                    break;\n                }\n                default:\n                {\n                    var x = [19500, 19000, 18500, 18000, 17500, 16500,\n                        15500, 14500, 12500, 9500, 3950];\n                    if (0 <= gfp.VBR_q && gfp.VBR_q <= 9) {\n                        var a = x[gfp.VBR_q], b = x[gfp.VBR_q + 1], m = gfp.VBR_q_frac;\n                        lowpass = linear_int(a, b, m);\n                    } else {\n                        lowpass = 19500;\n                    }\n                }\n            }\n            if (gfp.mode == MPEGMode.MONO\n                && (gfp.VBR == VbrMode$2.vbr_off || gfp.VBR == VbrMode$2.vbr_abr))\n                lowpass *= 1.5;\n\n            gfp.lowpassfreq = lowpass | 0;\n        }\n\n        if (gfp.out_samplerate == 0) {\n            if (2 * gfp.lowpassfreq > gfp.in_samplerate) {\n                gfp.lowpassfreq = gfp.in_samplerate / 2;\n            }\n            gfp.out_samplerate = optimum_samplefreq(gfp.lowpassfreq | 0,\n                gfp.in_samplerate);\n        }\n\n        gfp.lowpassfreq = Math.min(20500, gfp.lowpassfreq);\n        gfp.lowpassfreq = Math.min(gfp.out_samplerate / 2, gfp.lowpassfreq);\n\n        if (gfp.VBR == VbrMode$2.vbr_off) {\n            gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                / (1.e3 * gfp.brate);\n        }\n        if (gfp.VBR == VbrMode$2.vbr_abr) {\n            gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                / (1.e3 * gfp.VBR_mean_bitrate_kbps);\n        }\n\n        /*\n         * do not compute ReplayGain values and do not find the peak sample if\n         * we can't store them\n         */\n        if (!gfp.bWriteVbrTag) {\n            gfp.findReplayGain = false;\n            gfp.decode_on_the_fly = false;\n            gfc.findPeakSample = false;\n        }\n        gfc.findReplayGain = gfp.findReplayGain;\n        gfc.decode_on_the_fly = gfp.decode_on_the_fly;\n\n        if (gfc.decode_on_the_fly)\n            gfc.findPeakSample = true;\n\n        if (gfc.findReplayGain) {\n            if (ga.InitGainAnalysis(gfc.rgdata, gfp.out_samplerate) == GainAnalysis.INIT_GAIN_ANALYSIS_ERROR) {\n                gfp.internal_flags = null;\n                return -6;\n            }\n        }\n\n        if (gfc.decode_on_the_fly && !gfp.decode_only) {\n            if (gfc.hip != null) {\n                mpglib.hip_decode_exit(gfc.hip);\n            }\n            gfc.hip = mpglib.hip_decode_init();\n        }\n\n        gfc.mode_gr = gfp.out_samplerate <= 24000 ? 1 : 2;\n        /*\n         * Number of granules per frame\n         */\n        gfp.framesize = 576 * gfc.mode_gr;\n        gfp.encoder_delay = Encoder_1.ENCDELAY;\n\n        gfc.resample_ratio = gfp.in_samplerate / gfp.out_samplerate;\n\n        /**\n         * <PRE>\n         *  sample freq       bitrate     compression ratio\n         *     [kHz]      [kbps/channel]   for 16 bit input\n         *     44.1            56               12.6\n         *     44.1            64               11.025\n         *     44.1            80                8.82\n         *     22.05           24               14.7\n         *     22.05           32               11.025\n         *     22.05           40                8.82\n         *     16              16               16.0\n         *     16              24               10.667\n         * </PRE>\n         */\n        /**\n         * <PRE>\n         *  For VBR, take a guess at the compression_ratio.\n         *  For example:\n         *\n         *    VBR_q    compression     like\n         *     -        4.4         320 kbps/44 kHz\n         *   0...1      5.5         256 kbps/44 kHz\n         *     2        7.3         192 kbps/44 kHz\n         *     4        8.8         160 kbps/44 kHz\n         *     6       11           128 kbps/44 kHz\n         *     9       14.7          96 kbps\n         *\n         *  for lower bitrates, downsample with --resample\n         * </PRE>\n         */\n        switch (gfp.VBR) {\n            case VbrMode$2.vbr_mt:\n            case VbrMode$2.vbr_rh:\n            case VbrMode$2.vbr_mtrh:\n            {\n                /* numbers are a bit strange, but they determine the lowpass value */\n                var cmp = [5.7, 6.5, 7.3, 8.2, 10, 11.9, 13, 14,\n                    15, 16.5];\n                gfp.compression_ratio = cmp[gfp.VBR_q];\n            }\n                break;\n            case VbrMode$2.vbr_abr:\n                gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                    / (1.e3 * gfp.VBR_mean_bitrate_kbps);\n                break;\n            default:\n                gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                    / (1.e3 * gfp.brate);\n                break;\n        }\n\n        /*\n         * mode = -1 (not set by user) or mode = MONO (because of only 1 input\n         * channel). If mode has not been set, then select J-STEREO\n         */\n        if (gfp.mode == MPEGMode.NOT_SET) {\n            gfp.mode = MPEGMode.JOINT_STEREO;\n        }\n\n        /* apply user driven high pass filter */\n        if (gfp.highpassfreq > 0) {\n            gfc.highpass1 = 2. * gfp.highpassfreq;\n\n            if (gfp.highpasswidth >= 0)\n                gfc.highpass2 = 2. * (gfp.highpassfreq + gfp.highpasswidth);\n            else\n            /* 0% above on default */\n                gfc.highpass2 = (1 + 0.00) * 2. * gfp.highpassfreq;\n\n            gfc.highpass1 /= gfp.out_samplerate;\n            gfc.highpass2 /= gfp.out_samplerate;\n        } else {\n            gfc.highpass1 = 0;\n            gfc.highpass2 = 0;\n        }\n        /* apply user driven low pass filter */\n        if (gfp.lowpassfreq > 0) {\n            gfc.lowpass2 = 2. * gfp.lowpassfreq;\n            if (gfp.lowpasswidth >= 0) {\n                gfc.lowpass1 = 2. * (gfp.lowpassfreq - gfp.lowpasswidth);\n                if (gfc.lowpass1 < 0) /* has to be >= 0 */\n                    gfc.lowpass1 = 0;\n            } else { /* 0% below on default */\n                gfc.lowpass1 = (1 - 0.00) * 2. * gfp.lowpassfreq;\n            }\n            gfc.lowpass1 /= gfp.out_samplerate;\n            gfc.lowpass2 /= gfp.out_samplerate;\n        } else {\n            gfc.lowpass1 = 0;\n            gfc.lowpass2 = 0;\n        }\n\n        /**********************************************************************/\n        /* compute info needed for polyphase filter (filter type==0, default) */\n        /**********************************************************************/\n        lame_init_params_ppflt(gfp);\n        /*******************************************************\n         * samplerate and bitrate index\n         *******************************************************/\n        gfc.samplerate_index = SmpFrqIndex(gfp.out_samplerate, gfp);\n        if (gfc.samplerate_index < 0) {\n            gfp.internal_flags = null;\n            return -1;\n        }\n\n        if (gfp.VBR == VbrMode$2.vbr_off) {\n            if (gfp.free_format) {\n                gfc.bitrate_index = 0;\n            } else {\n                gfp.brate = FindNearestBitrate(gfp.brate, gfp.version,\n                    gfp.out_samplerate);\n                gfc.bitrate_index = BitrateIndex(gfp.brate, gfp.version,\n                    gfp.out_samplerate);\n                if (gfc.bitrate_index <= 0) {\n                    gfp.internal_flags = null;\n                    return -1;\n                }\n            }\n        } else {\n            gfc.bitrate_index = 1;\n        }\n\n        /* for CBR, we will write an \"info\" tag. */\n\n        if (gfp.analysis)\n            gfp.bWriteVbrTag = false;\n\n        /* some file options not allowed if output is: not specified or stdout */\n        if (gfc.pinfo != null)\n            gfp.bWriteVbrTag = false;\n        /* disable Xing VBR tag */\n\n        bs.init_bit_stream_w(gfc);\n\n        var j = gfc.samplerate_index + (3 * gfp.version) + 6\n            * (gfp.out_samplerate < 16000 ? 1 : 0);\n        for (var i = 0; i < Encoder_1.SBMAX_l + 1; i++)\n            gfc.scalefac_band.l[i] = qupvt.sfBandIndex[j].l[i];\n\n        for (var i = 0; i < Encoder_1.PSFB21 + 1; i++) {\n            var size = (gfc.scalefac_band.l[22] - gfc.scalefac_band.l[21])\n                / Encoder_1.PSFB21;\n            var start = gfc.scalefac_band.l[21] + i * size;\n            gfc.scalefac_band.psfb21[i] = start;\n        }\n        gfc.scalefac_band.psfb21[Encoder_1.PSFB21] = 576;\n\n        for (var i = 0; i < Encoder_1.SBMAX_s + 1; i++)\n            gfc.scalefac_band.s[i] = qupvt.sfBandIndex[j].s[i];\n\n        for (var i = 0; i < Encoder_1.PSFB12 + 1; i++) {\n            var size = (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12])\n                / Encoder_1.PSFB12;\n            var start = gfc.scalefac_band.s[12] + i * size;\n            gfc.scalefac_band.psfb12[i] = start;\n        }\n        gfc.scalefac_band.psfb12[Encoder_1.PSFB12] = 192;\n        /* determine the mean bitrate for main data */\n        if (gfp.version == 1) /* MPEG 1 */\n            gfc.sideinfo_len = (gfc.channels_out == 1) ? 4 + 17 : 4 + 32;\n        else\n        /* MPEG 2 */\n            gfc.sideinfo_len = (gfc.channels_out == 1) ? 4 + 9 : 4 + 17;\n\n        if (gfp.error_protection)\n            gfc.sideinfo_len += 2;\n\n        lame_init_bitstream(gfp);\n\n        gfc.Class_ID = LAME_ID;\n\n        {\n            var k;\n\n            for (k = 0; k < 19; k++)\n                gfc.nsPsy.pefirbuf[k] = 700 * gfc.mode_gr * gfc.channels_out;\n\n            if (gfp.ATHtype == -1)\n                gfp.ATHtype = 4;\n        }\n        assert$2(gfp.VBR_q <= 9);\n        assert$2(gfp.VBR_q >= 0);\n\n        switch (gfp.VBR) {\n\n            case VbrMode$2.vbr_mt:\n                gfp.VBR = VbrMode$2.vbr_mtrh;\n            //$FALL-THROUGH$\n            case VbrMode$2.vbr_mtrh:\n            {\n                if (gfp.useTemporal == null) {\n                    gfp.useTemporal = false;\n                    /* off by default for this VBR mode */\n                }\n\n                p.apply_preset(gfp, 500 - (gfp.VBR_q * 10), 0);\n                /**\n                 * <PRE>\n                 *   The newer VBR code supports only a limited\n                 *     subset of quality levels:\n                 *     9-5=5 are the same, uses x^3/4 quantization\n                 *   4-0=0 are the same  5 plus best huffman divide code\n                 * </PRE>\n                 */\n                if (gfp.quality < 0)\n                    gfp.quality = LAME_DEFAULT_QUALITY;\n                if (gfp.quality < 5)\n                    gfp.quality = 0;\n                if (gfp.quality > 5)\n                    gfp.quality = 5;\n\n                gfc.PSY.mask_adjust = gfp.maskingadjust;\n                gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\n\n                /*\n                 * sfb21 extra only with MPEG-1 at higher sampling rates\n                 */\n                if (gfp.experimentalY)\n                    gfc.sfb21_extra = false;\n                else\n                    gfc.sfb21_extra = (gfp.out_samplerate > 44000);\n\n                gfc.iteration_loop = new VBRNewIterationLoop(qu);\n                break;\n\n            }\n            case VbrMode$2.vbr_rh:\n            {\n\n                p.apply_preset(gfp, 500 - (gfp.VBR_q * 10), 0);\n\n                gfc.PSY.mask_adjust = gfp.maskingadjust;\n                gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\n\n                /*\n                 * sfb21 extra only with MPEG-1 at higher sampling rates\n                 */\n                if (gfp.experimentalY)\n                    gfc.sfb21_extra = false;\n                else\n                    gfc.sfb21_extra = (gfp.out_samplerate > 44000);\n\n                /*\n                 * VBR needs at least the output of GPSYCHO, so we have to garantee\n                 * that by setting a minimum quality level, actually level 6 does\n                 * it. down to level 6\n                 */\n                if (gfp.quality > 6)\n                    gfp.quality = 6;\n\n                if (gfp.quality < 0)\n                    gfp.quality = LAME_DEFAULT_QUALITY;\n\n                gfc.iteration_loop = new VBROldIterationLoop(qu);\n                break;\n            }\n\n            default: /* cbr/abr */\n            {\n                var vbrmode;\n\n                /*\n                 * no sfb21 extra with CBR code\n                 */\n                gfc.sfb21_extra = false;\n\n                if (gfp.quality < 0)\n                    gfp.quality = LAME_DEFAULT_QUALITY;\n\n                vbrmode = gfp.VBR;\n                if (vbrmode == VbrMode$2.vbr_off)\n                    gfp.VBR_mean_bitrate_kbps = gfp.brate;\n                /* second, set parameters depending on bitrate */\n                p.apply_preset(gfp, gfp.VBR_mean_bitrate_kbps, 0);\n                gfp.VBR = vbrmode;\n\n                gfc.PSY.mask_adjust = gfp.maskingadjust;\n                gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\n\n                if (vbrmode == VbrMode$2.vbr_off) {\n                    gfc.iteration_loop = new CBRNewIterationLoop_1(qu);\n                } else {\n                    gfc.iteration_loop = new ABRIterationLoop(qu);\n                }\n                break;\n            }\n        }\n        assert$2(gfp.scale >= 0);\n        /* initialize default values common for all modes */\n\n        if (gfp.VBR != VbrMode$2.vbr_off) { /* choose a min/max bitrate for VBR */\n            /* if the user didn't specify VBR_max_bitrate: */\n            gfc.VBR_min_bitrate = 1;\n            /*\n             * default: allow 8 kbps (MPEG-2) or 32 kbps (MPEG-1)\n             */\n            gfc.VBR_max_bitrate = 14;\n            /*\n             * default: allow 160 kbps (MPEG-2) or 320 kbps (MPEG-1)\n             */\n            if (gfp.out_samplerate < 16000)\n                gfc.VBR_max_bitrate = 8;\n            /* default: allow 64 kbps (MPEG-2.5) */\n            if (gfp.VBR_min_bitrate_kbps != 0) {\n                gfp.VBR_min_bitrate_kbps = FindNearestBitrate(\n                    gfp.VBR_min_bitrate_kbps, gfp.version,\n                    gfp.out_samplerate);\n                gfc.VBR_min_bitrate = BitrateIndex(gfp.VBR_min_bitrate_kbps,\n                    gfp.version, gfp.out_samplerate);\n                if (gfc.VBR_min_bitrate < 0)\n                    return -1;\n            }\n            if (gfp.VBR_max_bitrate_kbps != 0) {\n                gfp.VBR_max_bitrate_kbps = FindNearestBitrate(\n                    gfp.VBR_max_bitrate_kbps, gfp.version,\n                    gfp.out_samplerate);\n                gfc.VBR_max_bitrate = BitrateIndex(gfp.VBR_max_bitrate_kbps,\n                    gfp.version, gfp.out_samplerate);\n                if (gfc.VBR_max_bitrate < 0)\n                    return -1;\n            }\n            gfp.VBR_min_bitrate_kbps = Tables_1.bitrate_table[gfp.version][gfc.VBR_min_bitrate];\n            gfp.VBR_max_bitrate_kbps = Tables_1.bitrate_table[gfp.version][gfc.VBR_max_bitrate];\n            gfp.VBR_mean_bitrate_kbps = Math.min(\n                Tables_1.bitrate_table[gfp.version][gfc.VBR_max_bitrate],\n                gfp.VBR_mean_bitrate_kbps);\n            gfp.VBR_mean_bitrate_kbps = Math.max(\n                Tables_1.bitrate_table[gfp.version][gfc.VBR_min_bitrate],\n                gfp.VBR_mean_bitrate_kbps);\n        }\n\n        /* just another daily changing developer switch */\n        if (gfp.tune) {\n            gfc.PSY.mask_adjust += gfp.tune_value_a;\n            gfc.PSY.mask_adjust_short += gfp.tune_value_a;\n        }\n\n        /* initialize internal qval settings */\n        lame_init_qval(gfp);\n        assert$2(gfp.scale >= 0);\n        /*\n         * automatic ATH adjustment on\n         */\n        if (gfp.athaa_type < 0)\n            gfc.ATH.useAdjust = 3;\n        else\n            gfc.ATH.useAdjust = gfp.athaa_type;\n\n        /* initialize internal adaptive ATH settings -jd */\n        gfc.ATH.aaSensitivityP = Math.pow(10.0, gfp.athaa_sensitivity\n            / -10.0);\n\n        if (gfp.short_blocks == null) {\n            gfp.short_blocks = ShortBlock$2.short_block_allowed;\n        }\n\n        /*\n         * Note Jan/2003: Many hardware decoders cannot handle short blocks in\n         * regular stereo mode unless they are coupled (same type in both\n         * channels) it is a rare event (1 frame per min. or so) that LAME would\n         * use uncoupled short blocks, so lets turn them off until we decide how\n         * to handle this. No other encoders allow uncoupled short blocks, even\n         * though it is in the standard.\n         */\n        /*\n         * rh 20040217: coupling makes no sense for mono and dual-mono streams\n         */\n        if (gfp.short_blocks == ShortBlock$2.short_block_allowed\n            && (gfp.mode == MPEGMode.JOINT_STEREO || gfp.mode == MPEGMode.STEREO)) {\n            gfp.short_blocks = ShortBlock$2.short_block_coupled;\n        }\n\n        if (gfp.quant_comp < 0)\n            gfp.quant_comp = 1;\n        if (gfp.quant_comp_short < 0)\n            gfp.quant_comp_short = 0;\n\n        if (gfp.msfix < 0)\n            gfp.msfix = 0;\n\n        /* select psychoacoustic model */\n        gfp.exp_nspsytune = gfp.exp_nspsytune | 1;\n\n        if (gfp.internal_flags.nsPsy.attackthre < 0)\n            gfp.internal_flags.nsPsy.attackthre = PsyModel_1.NSATTACKTHRE;\n        if (gfp.internal_flags.nsPsy.attackthre_s < 0)\n            gfp.internal_flags.nsPsy.attackthre_s = PsyModel_1.NSATTACKTHRE_S;\n\n        assert$2(gfp.scale >= 0);\n\n        if (gfp.scale < 0)\n            gfp.scale = 1;\n\n        if (gfp.ATHtype < 0)\n            gfp.ATHtype = 4;\n\n        if (gfp.ATHcurve < 0)\n            gfp.ATHcurve = 4;\n\n        if (gfp.athaa_loudapprox < 0)\n            gfp.athaa_loudapprox = 2;\n\n        if (gfp.interChRatio < 0)\n            gfp.interChRatio = 0;\n\n        if (gfp.useTemporal == null)\n            gfp.useTemporal = true;\n        /* on by default */\n\n        /*\n         * padding method as described in\n         * \"MPEG-Layer3 / Bitstream Syntax and Decoding\" by Martin Sieler, Ralph\n         * Sperschneider\n         *\n         * note: there is no padding for the very first frame\n         *\n         * Robert Hegemann 2000-06-22\n         */\n        gfc.slot_lag = gfc.frac_SpF = 0;\n        if (gfp.VBR == VbrMode$2.vbr_off)\n            gfc.slot_lag = gfc.frac_SpF = (((gfp.version + 1) * 72000 * gfp.brate) % gfp.out_samplerate) | 0;\n\n        qupvt.iteration_init(gfp);\n        psy.psymodel_init(gfp);\n        assert$2(gfp.scale >= 0);\n        return 0;\n    };\n\n    function update_inbuffer_size(gfc, nsamples) {\n        if (gfc.in_buffer_0 == null || gfc.in_buffer_nsamples < nsamples) {\n            gfc.in_buffer_0 = new_float$2(nsamples);\n            gfc.in_buffer_1 = new_float$2(nsamples);\n            gfc.in_buffer_nsamples = nsamples;\n        }\n    }\n\n    this.lame_encode_flush = function (gfp, mp3buffer, mp3bufferPos, mp3buffer_size) {\n        var gfc = gfp.internal_flags;\n        var buffer = new_short_n$1([2, 1152]);\n        var imp3 = 0, mp3count, mp3buffer_size_remaining;\n\n        /*\n         * we always add POSTDELAY=288 padding to make sure granule with real\n         * data can be complety decoded (because of 50% overlap with next\n         * granule\n         */\n        var end_padding;\n        var frames_left;\n        var samples_to_encode = gfc.mf_samples_to_encode - Encoder_1.POSTDELAY;\n        var mf_needed = calcNeeded(gfp);\n\n        /* Was flush already called? */\n        if (gfc.mf_samples_to_encode < 1) {\n            return 0;\n        }\n        mp3count = 0;\n\n        if (gfp.in_samplerate != gfp.out_samplerate) {\n            /*\n             * delay due to resampling; needs to be fixed, if resampling code\n             * gets changed\n             */\n            samples_to_encode += 16. * gfp.out_samplerate / gfp.in_samplerate;\n        }\n        end_padding = gfp.framesize - (samples_to_encode % gfp.framesize);\n        if (end_padding < 576)\n            end_padding += gfp.framesize;\n        gfp.encoder_padding = end_padding;\n\n        frames_left = (samples_to_encode + end_padding) / gfp.framesize;\n\n        /*\n         * send in a frame of 0 padding until all internal sample buffers are\n         * flushed\n         */\n        while (frames_left > 0 && imp3 >= 0) {\n            var bunch = mf_needed - gfc.mf_size;\n            var frame_num = gfp.frameNum;\n\n            bunch *= gfp.in_samplerate;\n            bunch /= gfp.out_samplerate;\n            if (bunch > 1152)\n                bunch = 1152;\n            if (bunch < 1)\n                bunch = 1;\n\n            mp3buffer_size_remaining = mp3buffer_size - mp3count;\n\n            /* if user specifed buffer size = 0, dont check size */\n            if (mp3buffer_size == 0)\n                mp3buffer_size_remaining = 0;\n\n            imp3 = this.lame_encode_buffer(gfp, buffer[0], buffer[1], bunch,\n                mp3buffer, mp3bufferPos, mp3buffer_size_remaining);\n\n            mp3bufferPos += imp3;\n            mp3count += imp3;\n            frames_left -= (frame_num != gfp.frameNum) ? 1 : 0;\n        }\n        /*\n         * Set gfc.mf_samples_to_encode to 0, so we may detect and break loops\n         * calling it more than once in a row.\n         */\n        gfc.mf_samples_to_encode = 0;\n\n        if (imp3 < 0) {\n            /* some type of fatal error */\n            return imp3;\n        }\n\n        mp3buffer_size_remaining = mp3buffer_size - mp3count;\n        /* if user specifed buffer size = 0, dont check size */\n        if (mp3buffer_size == 0)\n            mp3buffer_size_remaining = 0;\n\n        /* mp3 related stuff. bit buffer might still contain some mp3 data */\n        bs.flush_bitstream(gfp);\n        imp3 = bs.copy_buffer(gfc, mp3buffer, mp3bufferPos,\n            mp3buffer_size_remaining, 1);\n        if (imp3 < 0) {\n            /* some type of fatal error */\n            return imp3;\n        }\n        mp3bufferPos += imp3;\n        mp3count += imp3;\n        mp3buffer_size_remaining = mp3buffer_size - mp3count;\n        /* if user specifed buffer size = 0, dont check size */\n        if (mp3buffer_size == 0)\n            mp3buffer_size_remaining = 0;\n\n        if (gfp.write_id3tag_automatic) {\n            /* write a id3 tag to the bitstream */\n            id3.id3tag_write_v1(gfp);\n\n            imp3 = bs.copy_buffer(gfc, mp3buffer, mp3bufferPos,\n                mp3buffer_size_remaining, 0);\n\n            if (imp3 < 0) {\n                return imp3;\n            }\n            mp3count += imp3;\n        }\n        return mp3count;\n    };\n\n    this.lame_encode_buffer = function (gfp, buffer_l, buffer_r, nsamples, mp3buf, mp3bufPos, mp3buf_size) {\n        var gfc = gfp.internal_flags;\n        var in_buffer = [null, null];\n\n        if (gfc.Class_ID != LAME_ID)\n            return -3;\n\n        if (nsamples == 0)\n            return 0;\n\n        update_inbuffer_size(gfc, nsamples);\n\n        in_buffer[0] = gfc.in_buffer_0;\n        in_buffer[1] = gfc.in_buffer_1;\n\n        /* make a copy of input buffer, changing type to sample_t */\n        for (var i = 0; i < nsamples; i++) {\n            in_buffer[0][i] = buffer_l[i];\n            if (gfc.channels_in > 1)\n                in_buffer[1][i] = buffer_r[i];\n        }\n\n        return lame_encode_buffer_sample(gfp, in_buffer[0], in_buffer[1],\n            nsamples, mp3buf, mp3bufPos, mp3buf_size);\n    };\n\n    function calcNeeded(gfp) {\n        var mf_needed = Encoder_1.BLKSIZE + gfp.framesize - Encoder_1.FFTOFFSET;\n        /*\n         * amount needed for FFT\n         */\n        mf_needed = Math.max(mf_needed, 512 + gfp.framesize - 32);\n        assert$2(LameInternalFlags_1.MFSIZE >= mf_needed);\n\n        return mf_needed;\n    }\n\n    function lame_encode_buffer_sample(gfp, buffer_l, buffer_r, nsamples, mp3buf, mp3bufPos, mp3buf_size) {\n        var gfc = gfp.internal_flags;\n        var mp3size = 0, ret, i, ch, mf_needed;\n        var mp3out;\n        var mfbuf = [null, null];\n        var in_buffer = [null, null];\n\n        if (gfc.Class_ID != LAME_ID)\n            return -3;\n\n        if (nsamples == 0)\n            return 0;\n\n        /* copy out any tags that may have been written into bitstream */\n        mp3out = bs.copy_buffer(gfc, mp3buf, mp3bufPos, mp3buf_size, 0);\n        if (mp3out < 0)\n            return mp3out;\n        /* not enough buffer space */\n        mp3bufPos += mp3out;\n        mp3size += mp3out;\n\n        in_buffer[0] = buffer_l;\n        in_buffer[1] = buffer_r;\n\n        /* Apply user defined re-scaling */\n\n        /* user selected scaling of the samples */\n        if (BitStream_1.NEQ(gfp.scale, 0) && BitStream_1.NEQ(gfp.scale, 1.0)) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[0][i] *= gfp.scale;\n                if (gfc.channels_out == 2)\n                    in_buffer[1][i] *= gfp.scale;\n            }\n        }\n\n        /* user selected scaling of the channel 0 (left) samples */\n        if (BitStream_1.NEQ(gfp.scale_left, 0)\n            && BitStream_1.NEQ(gfp.scale_left, 1.0)) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[0][i] *= gfp.scale_left;\n            }\n        }\n\n        /* user selected scaling of the channel 1 (right) samples */\n        if (BitStream_1.NEQ(gfp.scale_right, 0)\n            && BitStream_1.NEQ(gfp.scale_right, 1.0)) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[1][i] *= gfp.scale_right;\n            }\n        }\n\n        /* Downsample to Mono if 2 channels in and 1 channel out */\n        if (gfp.num_channels == 2 && gfc.channels_out == 1) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[0][i] = 0.5 * ( in_buffer[0][i] + in_buffer[1][i]);\n                in_buffer[1][i] = 0.0;\n            }\n        }\n\n        mf_needed = calcNeeded(gfp);\n\n        mfbuf[0] = gfc.mfbuf[0];\n        mfbuf[1] = gfc.mfbuf[1];\n\n        var in_bufferPos = 0;\n        while (nsamples > 0) {\n            var in_buffer_ptr = [null, null];\n            var n_in = 0;\n            /* number of input samples processed with fill_buffer */\n            var n_out = 0;\n            /* number of samples output with fill_buffer */\n            /* n_in <> n_out if we are resampling */\n\n            in_buffer_ptr[0] = in_buffer[0];\n            in_buffer_ptr[1] = in_buffer[1];\n            /* copy in new samples into mfbuf, with resampling */\n            var inOut = new InOut();\n            fill_buffer(gfp, mfbuf, in_buffer_ptr, in_bufferPos, nsamples,\n                inOut);\n            n_in = inOut.n_in;\n            n_out = inOut.n_out;\n\n            /* compute ReplayGain of resampled input if requested */\n            if (gfc.findReplayGain && !gfc.decode_on_the_fly)\n                if (ga.AnalyzeSamples(gfc.rgdata, mfbuf[0], gfc.mf_size,\n                        mfbuf[1], gfc.mf_size, n_out, gfc.channels_out) == GainAnalysis.GAIN_ANALYSIS_ERROR)\n                    return -6;\n\n            /* update in_buffer counters */\n            nsamples -= n_in;\n            in_bufferPos += n_in;\n            if (gfc.channels_out == 2)\n                ;// in_bufferPos += n_in;\n\n            /* update mfbuf[] counters */\n            gfc.mf_size += n_out;\n            assert$2(gfc.mf_size <= LameInternalFlags_1.MFSIZE);\n\n            /*\n             * lame_encode_flush may have set gfc.mf_sample_to_encode to 0 so we\n             * have to reinitialize it here when that happened.\n             */\n            if (gfc.mf_samples_to_encode < 1) {\n                gfc.mf_samples_to_encode = Encoder_1.ENCDELAY + Encoder_1.POSTDELAY;\n            }\n            gfc.mf_samples_to_encode += n_out;\n\n            if (gfc.mf_size >= mf_needed) {\n                /* encode the frame. */\n                /* mp3buf = pointer to current location in buffer */\n                /* mp3buf_size = size of original mp3 output buffer */\n                /* = 0 if we should not worry about the */\n                /* buffer size because calling program is */\n                /* to lazy to compute it */\n                /* mp3size = size of data written to buffer so far */\n                /* mp3buf_size-mp3size = amount of space avalable */\n\n                var buf_size = mp3buf_size - mp3size;\n                if (mp3buf_size == 0)\n                    buf_size = 0;\n\n                ret = lame_encode_frame(gfp, mfbuf[0], mfbuf[1], mp3buf,\n                    mp3bufPos, buf_size);\n\n                if (ret < 0)\n                    return ret;\n                mp3bufPos += ret;\n                mp3size += ret;\n\n                /* shift out old samples */\n                gfc.mf_size -= gfp.framesize;\n                gfc.mf_samples_to_encode -= gfp.framesize;\n                for (ch = 0; ch < gfc.channels_out; ch++)\n                    for (i = 0; i < gfc.mf_size; i++)\n                        mfbuf[ch][i] = mfbuf[ch][i + gfp.framesize];\n            }\n        }\n        assert$2(nsamples == 0);\n\n        return mp3size;\n    }\n\n    function lame_encode_frame(gfp, inbuf_l, inbuf_r, mp3buf, mp3bufPos, mp3buf_size) {\n        var ret = self.enc.lame_encode_mp3_frame(gfp, inbuf_l, inbuf_r, mp3buf,\n            mp3bufPos, mp3buf_size);\n        gfp.frameNum++;\n        return ret;\n    }\n\n    function InOut() {\n        this.n_in = 0;\n        this.n_out = 0;\n    }\n\n\n    function NumUsed() {\n        this.num_used = 0;\n    }\n\n    /**\n     * Greatest common divisor.\n     * <p>\n     * Joint work of Euclid and M. Hendry\n     */\n    function gcd(i, j) {\n        return j != 0 ? gcd(j, i % j) : i;\n    }\n\n    /**\n     * Resampling via FIR filter, blackman window.\n     */\n    function blackman(x, fcn, l) {\n        /*\n         * This algorithm from: SIGNAL PROCESSING ALGORITHMS IN FORTRAN AND C\n         * S.D. Stearns and R.A. David, Prentice-Hall, 1992\n         */\n        var wcn = (Math.PI * fcn);\n\n        x /= l;\n        if (x < 0)\n            x = 0;\n        if (x > 1)\n            x = 1;\n        var x2 = x - .5;\n\n        var bkwn = 0.42 - 0.5 * Math.cos(2 * x * Math.PI) + 0.08 * Math.cos(4 * x * Math.PI);\n        if (Math.abs(x2) < 1e-9)\n            return (wcn / Math.PI);\n        else\n            return (bkwn * Math.sin(l * wcn * x2) / (Math.PI * l * x2));\n    }\n\n    function fill_buffer_resample(gfp, outbuf, outbufPos, desired_len, inbuf, in_bufferPos, len, num_used, ch) {\n        var gfc = gfp.internal_flags;\n        var i, j = 0, k;\n        /* number of convolution functions to pre-compute */\n        var bpc = gfp.out_samplerate\n            / gcd(gfp.out_samplerate, gfp.in_samplerate);\n        if (bpc > LameInternalFlags_1.BPC)\n            bpc = LameInternalFlags_1.BPC;\n\n        var intratio = (Math.abs(gfc.resample_ratio\n            - Math.floor(.5 + gfc.resample_ratio)) < .0001) ? 1 : 0;\n        var fcn = 1.00 / gfc.resample_ratio;\n        if (fcn > 1.00)\n            fcn = 1.00;\n        var filter_l = 31;\n        if (0 == filter_l % 2)\n            --filter_l;\n        /* must be odd */\n        filter_l += intratio;\n        /* unless resample_ratio=int, it must be even */\n\n        var BLACKSIZE = filter_l + 1;\n        /* size of data needed for FIR */\n\n        if (gfc.fill_buffer_resample_init == 0) {\n            gfc.inbuf_old[0] = new_float$2(BLACKSIZE);\n            gfc.inbuf_old[1] = new_float$2(BLACKSIZE);\n            for (i = 0; i <= 2 * bpc; ++i)\n                gfc.blackfilt[i] = new_float$2(BLACKSIZE);\n\n            gfc.itime[0] = 0;\n            gfc.itime[1] = 0;\n\n            /* precompute blackman filter coefficients */\n            for (j = 0; j <= 2 * bpc; j++) {\n                var sum = 0.;\n                var offset = (j - bpc) / (2. * bpc);\n                for (i = 0; i <= filter_l; i++)\n                    sum += gfc.blackfilt[j][i] = blackman(i - offset, fcn,\n                        filter_l);\n                for (i = 0; i <= filter_l; i++)\n                    gfc.blackfilt[j][i] /= sum;\n            }\n            gfc.fill_buffer_resample_init = 1;\n        }\n\n        var inbuf_old = gfc.inbuf_old[ch];\n\n        /* time of j'th element in inbuf = itime + j/ifreq; */\n        /* time of k'th element in outbuf = j/ofreq */\n        for (k = 0; k < desired_len; k++) {\n            var time0;\n            var joff;\n\n            time0 = k * gfc.resample_ratio;\n            /* time of k'th output sample */\n            j = 0 | Math.floor(time0 - gfc.itime[ch]);\n\n            /* check if we need more input data */\n            if ((filter_l + j - filter_l / 2) >= len)\n                break;\n\n            /* blackman filter. by default, window centered at j+.5(filter_l%2) */\n            /* but we want a window centered at time0. */\n            var offset = (time0 - gfc.itime[ch] - (j + .5 * (filter_l % 2)));\n            assert$2(Math.abs(offset) <= .501);\n\n            /* find the closest precomputed window for this offset: */\n            joff = 0 | Math.floor((offset * 2 * bpc) + bpc + .5);\n            var xvalue = 0.;\n            for (i = 0; i <= filter_l; ++i) {\n                var j2 = i + j - filter_l / 2;\n                var y;\n                assert$2(j2 < len);\n                assert$2(j2 + BLACKSIZE >= 0);\n                y = (j2 < 0) ? inbuf_old[BLACKSIZE + j2] : inbuf[in_bufferPos\n                + j2];\n                xvalue += y * gfc.blackfilt[joff][i];\n            }\n            outbuf[outbufPos + k] = xvalue;\n        }\n\n        /* k = number of samples added to outbuf */\n        /* last k sample used data from [j-filter_l/2,j+filter_l-filter_l/2] */\n\n        /* how many samples of input data were used: */\n        num_used.num_used = Math.min(len, filter_l + j - filter_l / 2);\n\n        /*\n         * adjust our input time counter. Incriment by the number of samples\n         * used, then normalize so that next output sample is at time 0, next\n         * input buffer is at time itime[ch]\n         */\n        gfc.itime[ch] += num_used.num_used - k * gfc.resample_ratio;\n\n        /* save the last BLACKSIZE samples into the inbuf_old buffer */\n        if (num_used.num_used >= BLACKSIZE) {\n            for (i = 0; i < BLACKSIZE; i++)\n                inbuf_old[i] = inbuf[in_bufferPos + num_used.num_used + i\n                - BLACKSIZE];\n        } else {\n            /* shift in num_used.num_used samples into inbuf_old */\n            var n_shift = BLACKSIZE - num_used.num_used;\n            /*\n             * number of samples to\n             * shift\n             */\n\n            /*\n             * shift n_shift samples by num_used.num_used, to make room for the\n             * num_used new samples\n             */\n            for (i = 0; i < n_shift; ++i)\n                inbuf_old[i] = inbuf_old[i + num_used.num_used];\n\n            /* shift in the num_used.num_used samples */\n            for (j = 0; i < BLACKSIZE; ++i, ++j)\n                inbuf_old[i] = inbuf[in_bufferPos + j];\n\n            assert$2(j == num_used.num_used);\n        }\n        return k;\n        /* return the number samples created at the new samplerate */\n    }\n\n    function fill_buffer(gfp, mfbuf, in_buffer, in_bufferPos, nsamples, io) {\n        var gfc = gfp.internal_flags;\n\n        /* copy in new samples into mfbuf, with resampling if necessary */\n        if ((gfc.resample_ratio < .9999) || (gfc.resample_ratio > 1.0001)) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                var numUsed = new NumUsed();\n                io.n_out = fill_buffer_resample(gfp, mfbuf[ch], gfc.mf_size,\n                    gfp.framesize, in_buffer[ch], in_bufferPos, nsamples,\n                    numUsed, ch);\n                io.n_in = numUsed.num_used;\n            }\n        } else {\n            io.n_out = Math.min(gfp.framesize, nsamples);\n            io.n_in = io.n_out;\n            for (var i = 0; i < io.n_out; ++i) {\n                mfbuf[0][gfc.mf_size + i] = in_buffer[0][in_bufferPos + i];\n                if (gfc.channels_out == 2)\n                    mfbuf[1][gfc.mf_size + i] = in_buffer[1][in_bufferPos + i];\n            }\n        }\n    }\n\n}\n\nvar Lame_1 = Lame$1;\n\nvar VbrMode$20 = common.VbrMode;\nfunction Presets$1() {\n    function VBRPresets(qual, comp, compS,\n                        y, shThreshold, shThresholdS,\n                        adj, adjShort, lower,\n                        curve, sens, inter,\n                        joint, mod, fix) {\n        this.vbr_q = qual;\n        this.quant_comp = comp;\n        this.quant_comp_s = compS;\n        this.expY = y;\n        this.st_lrm = shThreshold;\n        this.st_s = shThresholdS;\n        this.masking_adj = adj;\n        this.masking_adj_short = adjShort;\n        this.ath_lower = lower;\n        this.ath_curve = curve;\n        this.ath_sensitivity = sens;\n        this.interch = inter;\n        this.safejoint = joint;\n        this.sfb21mod = mod;\n        this.msfix = fix;\n    }\n\n    function ABRPresets(kbps, comp, compS,\n                        joint, fix, shThreshold,\n                        shThresholdS, bass, sc,\n                        mask, lower, curve,\n                        interCh, sfScale) {\n        this.quant_comp = comp;\n        this.quant_comp_s = compS;\n        this.safejoint = joint;\n        this.nsmsfix = fix;\n        this.st_lrm = shThreshold;\n        this.st_s = shThresholdS;\n        this.nsbass = bass;\n        this.scale = sc;\n        this.masking_adj = mask;\n        this.ath_lower = lower;\n        this.ath_curve = curve;\n        this.interch = interCh;\n        this.sfscale = sfScale;\n    }\n\n    var lame;\n\n    this.setModules = function (_lame) {\n        lame = _lame;\n    };\n\n    /**\n     * <PRE>\n     * Switch mappings for VBR mode VBR_RH\n     *             vbr_q  qcomp_l  qcomp_s  expY  st_lrm   st_s  mask adj_l  adj_s  ath_lower  ath_curve  ath_sens  interChR  safejoint sfb21mod  msfix\n     * </PRE>\n     */\n    var vbr_old_switch_map = [\n        new VBRPresets(0, 9, 9, 0, 5.20, 125.0, -4.2, -6.3, 4.8, 1, 0, 0, 2, 21, 0.97),\n        new VBRPresets(1, 9, 9, 0, 5.30, 125.0, -3.6, -5.6, 4.5, 1.5, 0, 0, 2, 21, 1.35),\n        new VBRPresets(2, 9, 9, 0, 5.60, 125.0, -2.2, -3.5, 2.8, 2, 0, 0, 2, 21, 1.49),\n        new VBRPresets(3, 9, 9, 1, 5.80, 130.0, -1.8, -2.8, 2.6, 3, -4, 0, 2, 20, 1.64),\n        new VBRPresets(4, 9, 9, 1, 6.00, 135.0, -0.7, -1.1, 1.1, 3.5, -8, 0, 2, 0, 1.79),\n        new VBRPresets(5, 9, 9, 1, 6.40, 140.0, 0.5, 0.4, -7.5, 4, -12, 0.0002, 0, 0, 1.95),\n        new VBRPresets(6, 9, 9, 1, 6.60, 145.0, 0.67, 0.65, -14.7, 6.5, -19, 0.0004, 0, 0, 2.30),\n        new VBRPresets(7, 9, 9, 1, 6.60, 145.0, 0.8, 0.75, -19.7, 8, -22, 0.0006, 0, 0, 2.70),\n        new VBRPresets(8, 9, 9, 1, 6.60, 145.0, 1.2, 1.15, -27.5, 10, -23, 0.0007, 0, 0, 0),\n        new VBRPresets(9, 9, 9, 1, 6.60, 145.0, 1.6, 1.6, -36, 11, -25, 0.0008, 0, 0, 0),\n        new VBRPresets(10, 9, 9, 1, 6.60, 145.0, 2.0, 2.0, -36, 12, -25, 0.0008, 0, 0, 0)\n    ];\n\n    /**\n     * <PRE>\n     *                 vbr_q  qcomp_l  qcomp_s  expY  st_lrm   st_s  mask adj_l  adj_s  ath_lower  ath_curve  ath_sens  interChR  safejoint sfb21mod  msfix\n     * </PRE>\n     */\n    var vbr_psy_switch_map = [\n        new VBRPresets(0, 9, 9, 0, 4.20, 25.0, -7.0, -4.0, 7.5, 1, 0, 0, 2, 26, 0.97),\n        new VBRPresets(1, 9, 9, 0, 4.20, 25.0, -5.6, -3.6, 4.5, 1.5, 0, 0, 2, 21, 1.35),\n        new VBRPresets(2, 9, 9, 0, 4.20, 25.0, -4.4, -1.8, 2, 2, 0, 0, 2, 18, 1.49),\n        new VBRPresets(3, 9, 9, 1, 4.20, 25.0, -3.4, -1.25, 1.1, 3, -4, 0, 2, 15, 1.64),\n        new VBRPresets(4, 9, 9, 1, 4.20, 25.0, -2.2, 0.1, 0, 3.5, -8, 0, 2, 0, 1.79),\n        new VBRPresets(5, 9, 9, 1, 4.20, 25.0, -1.0, 1.65, -7.7, 4, -12, 0.0002, 0, 0, 1.95),\n        new VBRPresets(6, 9, 9, 1, 4.20, 25.0, -0.0, 2.47, -7.7, 6.5, -19, 0.0004, 0, 0, 2),\n        new VBRPresets(7, 9, 9, 1, 4.20, 25.0, 0.5, 2.0, -14.5, 8, -22, 0.0006, 0, 0, 2),\n        new VBRPresets(8, 9, 9, 1, 4.20, 25.0, 1.0, 2.4, -22.0, 10, -23, 0.0007, 0, 0, 2),\n        new VBRPresets(9, 9, 9, 1, 4.20, 25.0, 1.5, 2.95, -30.0, 11, -25, 0.0008, 0, 0, 2),\n        new VBRPresets(10, 9, 9, 1, 4.20, 25.0, 2.0, 2.95, -36.0, 12, -30, 0.0008, 0, 0, 2)\n    ];\n\n    function apply_vbr_preset(gfp, a, enforce) {\n        var vbr_preset = gfp.VBR == VbrMode$20.vbr_rh ? vbr_old_switch_map\n            : vbr_psy_switch_map;\n\n        var x = gfp.VBR_q_frac;\n        var p = vbr_preset[a];\n        var q = vbr_preset[a + 1];\n        var set = p;\n\n        // NOOP(vbr_q);\n        // NOOP(quant_comp);\n        // NOOP(quant_comp_s);\n        // NOOP(expY);\n        p.st_lrm = p.st_lrm + x * (q.st_lrm - p.st_lrm);\n        // LERP(st_lrm);\n        p.st_s = p.st_s + x * (q.st_s - p.st_s);\n        // LERP(st_s);\n        p.masking_adj = p.masking_adj + x * (q.masking_adj - p.masking_adj);\n        // LERP(masking_adj);\n        p.masking_adj_short = p.masking_adj_short + x\n            * (q.masking_adj_short - p.masking_adj_short);\n        // LERP(masking_adj_short);\n        p.ath_lower = p.ath_lower + x * (q.ath_lower - p.ath_lower);\n        // LERP(ath_lower);\n        p.ath_curve = p.ath_curve + x * (q.ath_curve - p.ath_curve);\n        // LERP(ath_curve);\n        p.ath_sensitivity = p.ath_sensitivity + x\n            * (q.ath_sensitivity - p.ath_sensitivity);\n        // LERP(ath_sensitivity);\n        p.interch = p.interch + x * (q.interch - p.interch);\n        // LERP(interch);\n        // NOOP(safejoint);\n        // NOOP(sfb21mod);\n        p.msfix = p.msfix + x * (q.msfix - p.msfix);\n        // LERP(msfix);\n\n        lame_set_VBR_q(gfp, set.vbr_q);\n\n        if (enforce != 0)\n            gfp.quant_comp = set.quant_comp;\n        else if (!(Math.abs(gfp.quant_comp - -1) > 0))\n            gfp.quant_comp = set.quant_comp;\n        // SET_OPTION(quant_comp, set.quant_comp, -1);\n        if (enforce != 0)\n            gfp.quant_comp_short = set.quant_comp_s;\n        else if (!(Math.abs(gfp.quant_comp_short - -1) > 0))\n            gfp.quant_comp_short = set.quant_comp_s;\n        // SET_OPTION(quant_comp_short, set.quant_comp_s, -1);\n        if (set.expY != 0) {\n            gfp.experimentalY = set.expY != 0;\n        }\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre = set.st_lrm;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre = set.st_lrm;\n        // SET_OPTION(short_threshold_lrm, set.st_lrm, -1);\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre_s = set.st_s;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre_s - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre_s = set.st_s;\n        // SET_OPTION(short_threshold_s, set.st_s, -1);\n        if (enforce != 0)\n            gfp.maskingadjust = set.masking_adj;\n        else if (!(Math.abs(gfp.maskingadjust - 0) > 0))\n            gfp.maskingadjust = set.masking_adj;\n        // SET_OPTION(maskingadjust, set.masking_adj, 0);\n        if (enforce != 0)\n            gfp.maskingadjust_short = set.masking_adj_short;\n        else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0))\n            gfp.maskingadjust_short = set.masking_adj_short;\n        // SET_OPTION(maskingadjust_short, set.masking_adj_short, 0);\n        if (enforce != 0)\n            gfp.ATHlower = -set.ath_lower / 10.0;\n        else if (!(Math.abs((-gfp.ATHlower * 10.0) - 0) > 0))\n            gfp.ATHlower = -set.ath_lower / 10.0;\n        // SET_OPTION(ATHlower, set.ath_lower, 0);\n        if (enforce != 0)\n            gfp.ATHcurve = set.ath_curve;\n        else if (!(Math.abs(gfp.ATHcurve - -1) > 0))\n            gfp.ATHcurve = set.ath_curve;\n        // SET_OPTION(ATHcurve, set.ath_curve, -1);\n        if (enforce != 0)\n            gfp.athaa_sensitivity = set.ath_sensitivity;\n        else if (!(Math.abs(gfp.athaa_sensitivity - -1) > 0))\n            gfp.athaa_sensitivity = set.ath_sensitivity;\n        // SET_OPTION(athaa_sensitivity, set.ath_sensitivity, 0);\n        if (set.interch > 0) {\n            if (enforce != 0)\n                gfp.interChRatio = set.interch;\n            else if (!(Math.abs(gfp.interChRatio - -1) > 0))\n                gfp.interChRatio = set.interch;\n            // SET_OPTION(interChRatio, set.interch, -1);\n        }\n\n        /* parameters for which there is no proper set/get interface */\n        if (set.safejoint > 0) {\n            gfp.exp_nspsytune = gfp.exp_nspsytune | set.safejoint;\n        }\n        if (set.sfb21mod > 0) {\n            gfp.exp_nspsytune = gfp.exp_nspsytune | (set.sfb21mod << 20);\n        }\n        if (enforce != 0)\n            gfp.msfix = set.msfix;\n        else if (!(Math.abs(gfp.msfix - -1) > 0))\n            gfp.msfix = set.msfix;\n        // SET_OPTION(msfix, set.msfix, -1);\n\n        if (enforce == 0) {\n            gfp.VBR_q = a;\n            gfp.VBR_q_frac = x;\n        }\n    }\n\n    /**\n     * <PRE>\n     *  Switch mappings for ABR mode\n     *\n     *              kbps  quant q_s safejoint nsmsfix st_lrm  st_s  ns-bass scale   msk ath_lwr ath_curve  interch , sfscale\n     * </PRE>\n     */\n    var abr_switch_map = [\n        new ABRPresets(8, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -30.0, 11, 0.0012, 1), /*   8, impossible to use in stereo */\n        new ABRPresets(16, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -25.0, 11, 0.0010, 1), /*  16 */\n        new ABRPresets(24, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -20.0, 11, 0.0010, 1), /*  24 */\n        new ABRPresets(32, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -15.0, 11, 0.0010, 1), /*  32 */\n        new ABRPresets(40, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -10.0, 11, 0.0009, 1), /*  40 */\n        new ABRPresets(48, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -10.0, 11, 0.0009, 1), /*  48 */\n        new ABRPresets(56, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -6.0, 11, 0.0008, 1), /*  56 */\n        new ABRPresets(64, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -2.0, 11, 0.0008, 1), /*  64 */\n        new ABRPresets(80, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, .0, 8, 0.0007, 1), /*  80 */\n        new ABRPresets(96, 9, 9, 0, 2.50, 6.60, 145, 0, 0.95, 0, 1.0, 5.5, 0.0006, 1), /*  96 */\n        new ABRPresets(112, 9, 9, 0, 2.25, 6.60, 145, 0, 0.95, 0, 2.0, 4.5, 0.0005, 1), /* 112 */\n        new ABRPresets(128, 9, 9, 0, 1.95, 6.40, 140, 0, 0.95, 0, 3.0, 4, 0.0002, 1), /* 128 */\n        new ABRPresets(160, 9, 9, 1, 1.79, 6.00, 135, 0, 0.95, -2, 5.0, 3.5, 0, 1), /* 160 */\n        new ABRPresets(192, 9, 9, 1, 1.49, 5.60, 125, 0, 0.97, -4, 7.0, 3, 0, 0), /* 192 */\n        new ABRPresets(224, 9, 9, 1, 1.25, 5.20, 125, 0, 0.98, -6, 9.0, 2, 0, 0), /* 224 */\n        new ABRPresets(256, 9, 9, 1, 0.97, 5.20, 125, 0, 1.00, -8, 10.0, 1, 0, 0), /* 256 */\n        new ABRPresets(320, 9, 9, 1, 0.90, 5.20, 125, 0, 1.00, -10, 12.0, 0, 0, 0)  /* 320 */\n    ];\n\n    function apply_abr_preset(gfp, preset, enforce) {\n        /* Variables for the ABR stuff */\n        var actual_bitrate = preset;\n\n        var r = lame.nearestBitrateFullIndex(preset);\n\n        gfp.VBR = VbrMode$20.vbr_abr;\n        gfp.VBR_mean_bitrate_kbps = actual_bitrate;\n        gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps, 320);\n        gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps, 8);\n        gfp.brate = gfp.VBR_mean_bitrate_kbps;\n        if (gfp.VBR_mean_bitrate_kbps > 320) {\n            gfp.disable_reservoir = true;\n        }\n\n        /* parameters for which there is no proper set/get interface */\n        if (abr_switch_map[r].safejoint > 0)\n            gfp.exp_nspsytune = gfp.exp_nspsytune | 2;\n        /* safejoint */\n\n        if (abr_switch_map[r].sfscale > 0) {\n            gfp.internal_flags.noise_shaping = 2;\n        }\n        /* ns-bass tweaks */\n        if (Math.abs(abr_switch_map[r].nsbass) > 0) {\n            var k = (int)(abr_switch_map[r].nsbass * 4);\n            if (k < 0)\n                k += 64;\n            gfp.exp_nspsytune = gfp.exp_nspsytune | (k << 2);\n        }\n\n        if (enforce != 0)\n            gfp.quant_comp = abr_switch_map[r].quant_comp;\n        else if (!(Math.abs(gfp.quant_comp - -1) > 0))\n            gfp.quant_comp = abr_switch_map[r].quant_comp;\n        // SET_OPTION(quant_comp, abr_switch_map[r].quant_comp, -1);\n        if (enforce != 0)\n            gfp.quant_comp_short = abr_switch_map[r].quant_comp_s;\n        else if (!(Math.abs(gfp.quant_comp_short - -1) > 0))\n            gfp.quant_comp_short = abr_switch_map[r].quant_comp_s;\n        // SET_OPTION(quant_comp_short, abr_switch_map[r].quant_comp_s, -1);\n\n        if (enforce != 0)\n            gfp.msfix = abr_switch_map[r].nsmsfix;\n        else if (!(Math.abs(gfp.msfix - -1) > 0))\n            gfp.msfix = abr_switch_map[r].nsmsfix;\n        // SET_OPTION(msfix, abr_switch_map[r].nsmsfix, -1);\n\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre = abr_switch_map[r].st_lrm;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre = abr_switch_map[r].st_lrm;\n        // SET_OPTION(short_threshold_lrm, abr_switch_map[r].st_lrm, -1);\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre_s = abr_switch_map[r].st_s;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre_s - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre_s = abr_switch_map[r].st_s;\n        // SET_OPTION(short_threshold_s, abr_switch_map[r].st_s, -1);\n\n        /*\n         * ABR seems to have big problems with clipping, especially at low\n         * bitrates\n         */\n        /*\n         * so we compensate for that here by using a scale value depending on\n         * bitrate\n         */\n        if (enforce != 0)\n            gfp.scale = abr_switch_map[r].scale;\n        else if (!(Math.abs(gfp.scale - -1) > 0))\n            gfp.scale = abr_switch_map[r].scale;\n        // SET_OPTION(scale, abr_switch_map[r].scale, -1);\n\n        if (enforce != 0)\n            gfp.maskingadjust = abr_switch_map[r].masking_adj;\n        else if (!(Math.abs(gfp.maskingadjust - 0) > 0))\n            gfp.maskingadjust = abr_switch_map[r].masking_adj;\n        // SET_OPTION(maskingadjust, abr_switch_map[r].masking_adj, 0);\n        if (abr_switch_map[r].masking_adj > 0) {\n            if (enforce != 0)\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * .9);\n            else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0))\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * .9);\n            // SET_OPTION(maskingadjust_short, abr_switch_map[r].masking_adj *\n            // .9, 0);\n        } else {\n            if (enforce != 0)\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * 1.1);\n            else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0))\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * 1.1);\n            // SET_OPTION(maskingadjust_short, abr_switch_map[r].masking_adj *\n            // 1.1, 0);\n        }\n\n        if (enforce != 0)\n            gfp.ATHlower = -abr_switch_map[r].ath_lower / 10.;\n        else if (!(Math.abs((-gfp.ATHlower * 10.) - 0) > 0))\n            gfp.ATHlower = -abr_switch_map[r].ath_lower / 10.;\n        // SET_OPTION(ATHlower, abr_switch_map[r].ath_lower, 0);\n        if (enforce != 0)\n            gfp.ATHcurve = abr_switch_map[r].ath_curve;\n        else if (!(Math.abs(gfp.ATHcurve - -1) > 0))\n            gfp.ATHcurve = abr_switch_map[r].ath_curve;\n        // SET_OPTION(ATHcurve, abr_switch_map[r].ath_curve, -1);\n\n        if (enforce != 0)\n            gfp.interChRatio = abr_switch_map[r].interch;\n        else if (!(Math.abs(gfp.interChRatio - -1) > 0))\n            gfp.interChRatio = abr_switch_map[r].interch;\n        // SET_OPTION(interChRatio, abr_switch_map[r].interch, -1);\n\n        return preset;\n    }\n\n    this.apply_preset = function(gfp, preset, enforce) {\n        /* translate legacy presets */\n        switch (preset) {\n            case Lame.R3MIX:\n            {\n                preset = Lame.V3;\n                gfp.VBR = VbrMode$20.vbr_mtrh;\n                break;\n            }\n            case Lame.MEDIUM:\n            {\n                preset = Lame.V4;\n                gfp.VBR = VbrMode$20.vbr_rh;\n                break;\n            }\n            case Lame.MEDIUM_FAST:\n            {\n                preset = Lame.V4;\n                gfp.VBR = VbrMode$20.vbr_mtrh;\n                break;\n            }\n            case Lame.STANDARD:\n            {\n                preset = Lame.V2;\n                gfp.VBR = VbrMode$20.vbr_rh;\n                break;\n            }\n            case Lame.STANDARD_FAST:\n            {\n                preset = Lame.V2;\n                gfp.VBR = VbrMode$20.vbr_mtrh;\n                break;\n            }\n            case Lame.EXTREME:\n            {\n                preset = Lame.V0;\n                gfp.VBR = VbrMode$20.vbr_rh;\n                break;\n            }\n            case Lame.EXTREME_FAST:\n            {\n                preset = Lame.V0;\n                gfp.VBR = VbrMode$20.vbr_mtrh;\n                break;\n            }\n            case Lame.INSANE:\n            {\n                preset = 320;\n                gfp.preset = preset;\n                apply_abr_preset(gfp, preset, enforce);\n                gfp.VBR = VbrMode$20.vbr_off;\n                return preset;\n            }\n        }\n\n        gfp.preset = preset;\n        {\n            switch (preset) {\n                case Lame.V9:\n                    apply_vbr_preset(gfp, 9, enforce);\n                    return preset;\n                case Lame.V8:\n                    apply_vbr_preset(gfp, 8, enforce);\n                    return preset;\n                case Lame.V7:\n                    apply_vbr_preset(gfp, 7, enforce);\n                    return preset;\n                case Lame.V6:\n                    apply_vbr_preset(gfp, 6, enforce);\n                    return preset;\n                case Lame.V5:\n                    apply_vbr_preset(gfp, 5, enforce);\n                    return preset;\n                case Lame.V4:\n                    apply_vbr_preset(gfp, 4, enforce);\n                    return preset;\n                case Lame.V3:\n                    apply_vbr_preset(gfp, 3, enforce);\n                    return preset;\n                case Lame.V2:\n                    apply_vbr_preset(gfp, 2, enforce);\n                    return preset;\n                case Lame.V1:\n                    apply_vbr_preset(gfp, 1, enforce);\n                    return preset;\n                case Lame.V0:\n                    apply_vbr_preset(gfp, 0, enforce);\n                    return preset;\n                default:\n                    break;\n            }\n        }\n        if (8 <= preset && preset <= 320) {\n            return apply_abr_preset(gfp, preset, enforce);\n        }\n\n        /* no corresponding preset found */\n        gfp.preset = 0;\n        return preset;\n    };\n\n    // Rest from getset.c:\n\n    /**\n     * VBR quality level.<BR>\n     * 0 = highest<BR>\n     * 9 = lowest\n     */\n    function lame_set_VBR_q(gfp, VBR_q) {\n        var ret = 0;\n\n        if (0 > VBR_q) {\n            /* Unknown VBR quality level! */\n            ret = -1;\n            VBR_q = 0;\n        }\n        if (9 < VBR_q) {\n            ret = -1;\n            VBR_q = 9;\n        }\n\n        gfp.VBR_q = VBR_q;\n        gfp.VBR_q_frac = 0;\n        return ret;\n    }\n\n}\n\nvar Presets_1 = Presets$1;\n\nfunction VBRQuantize() {\n    var qupvt;\n    var tak;\n\n    this.setModules = function (_qupvt, _tk) {\n        qupvt = _qupvt;\n        tak = _tk;\n    };\n    //TODO\n\n}\n\nvar VBRQuantize_1 = VBRQuantize;\n\n//package mp3;\n\nfunction CalcNoiseResult$1() {\n    /**\n     * sum of quantization noise > masking\n     */\n    this.over_noise = 0.;\n    /**\n     * sum of all quantization noise\n     */\n    this.tot_noise = 0.;\n    /**\n     * max quantization noise\n     */\n    this.max_noise = 0.;\n    /**\n     * number of quantization noise > masking\n     */\n    this.over_count = 0;\n    /**\n     * SSD-like cost of distorted bands\n     */\n    this.over_SSD = 0;\n    this.bits = 0;\n}\n\nvar CalcNoiseResult_1 = CalcNoiseResult$1;\n\nvar new_float$22 = common.new_float;\nvar new_int$22 = common.new_int;\nfunction CalcNoiseData() {\n    this.global_gain = 0;\n    this.sfb_count1 = 0;\n    this.step = new_int$22(39);\n    this.noise = new_float$22(39);\n    this.noise_log = new_float$22(39);\n}\n\nvar CalcNoiseData_1 = CalcNoiseData;\n\n/*\n * MP3 quantization\n *\n *      Copyright (c) 1999-2000 Mark Taylor\n *      Copyright (c) 1999-2003 Takehiro Tominaga\n *      Copyright (c) 2000-2007 Robert Hegemann\n *      Copyright (c) 2001-2005 Gabriel Bouvigne\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.     See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: Quantize.java,v 1.24 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n//import java.util.Arrays;\n\nvar System$21 = common.System;\nvar VbrMode$21 = common.VbrMode;\nvar Util$21 = common.Util;\nvar Arrays$21 = common.Arrays;\nvar new_float$21 = common.new_float;\nvar assert$21 = common.assert;\n\n\n\n\n\n\n\n\nfunction Quantize$1() {\n    var bs;\n    this.rv = null;\n    var rv;\n    this.qupvt = null;\n    var qupvt;\n\n    var vbr = new VBRQuantize_1();\n    var tk;\n\n    this.setModules = function (_bs, _rv, _qupvt, _tk) {\n        bs = _bs;\n        rv = _rv;\n        this.rv = _rv;\n        qupvt = _qupvt;\n        this.qupvt = _qupvt;\n        tk = _tk;\n        vbr.setModules(qupvt, tk);\n    };\n\n    /**\n     * convert from L/R <. Mid/Side\n     */\n    this.ms_convert = function (l3_side, gr) {\n        for (var i = 0; i < 576; ++i) {\n            var l = l3_side.tt[gr][0].xr[i];\n            var r = l3_side.tt[gr][1].xr[i];\n            l3_side.tt[gr][0].xr[i] = (l + r) * (Util$21.SQRT2 * 0.5);\n            l3_side.tt[gr][1].xr[i] = (l - r) * (Util$21.SQRT2 * 0.5);\n        }\n    };\n\n    /**\n     * mt 6/99\n     *\n     * initializes cod_info, scalefac and xrpow\n     *\n     * returns 0 if all energies in xr are zero, else 1\n     */\n    function init_xrpow_core(cod_info, xrpow, upper, sum) {\n        sum = 0;\n        for (var i = 0; i <= upper; ++i) {\n            var tmp = Math.abs(cod_info.xr[i]);\n            sum += tmp;\n            xrpow[i] = Math.sqrt(tmp * Math.sqrt(tmp));\n\n            if (xrpow[i] > cod_info.xrpow_max)\n                cod_info.xrpow_max = xrpow[i];\n        }\n        return sum;\n    }\n\n    this.init_xrpow = function (gfc, cod_info, xrpow) {\n        var sum = 0;\n        var upper = 0 | cod_info.max_nonzero_coeff;\n\n        assert$21(xrpow != null);\n        cod_info.xrpow_max = 0;\n\n        /*\n         * check if there is some energy we have to quantize and calculate xrpow\n         * matching our fresh scalefactors\n         */\n        assert$21(0 <= upper && upper <= 575);\n\n        Arrays$21.fill(xrpow, upper, 576, 0);\n\n        sum = init_xrpow_core(cod_info, xrpow, upper, sum);\n\n        /*\n         * return 1 if we have something to quantize, else 0\n         */\n        if (sum > 1E-20) {\n            var j = 0;\n            if ((gfc.substep_shaping & 2) != 0)\n                j = 1;\n\n            for (var i = 0; i < cod_info.psymax; i++)\n                gfc.pseudohalf[i] = j;\n\n            return true;\n        }\n\n        Arrays$21.fill(cod_info.l3_enc, 0, 576, 0);\n        return false;\n    };\n\n    /**\n     * Gabriel Bouvigne feb/apr 2003<BR>\n     * Analog silence detection in partitionned sfb21 or sfb12 for short blocks\n     *\n     * From top to bottom of sfb, changes to 0 coeffs which are below ath. It\n     * stops on the first coeff higher than ath.\n     */\n    function psfb21_analogsilence(gfc, cod_info) {\n        var ath = gfc.ATH;\n        var xr = cod_info.xr;\n\n        if (cod_info.block_type != Encoder_1.SHORT_TYPE) {\n            /* NORM, START or STOP type, but not SHORT blocks */\n            var stop = false;\n            for (var gsfb = Encoder_1.PSFB21 - 1; gsfb >= 0 && !stop; gsfb--) {\n                var start = gfc.scalefac_band.psfb21[gsfb];\n                var end = gfc.scalefac_band.psfb21[gsfb + 1];\n                var ath21 = qupvt.athAdjust(ath.adjust, ath.psfb21[gsfb],\n                    ath.floor);\n\n                if (gfc.nsPsy.longfact[21] > 1e-12)\n                    ath21 *= gfc.nsPsy.longfact[21];\n\n                for (var j = end - 1; j >= start; j--) {\n                    if (Math.abs(xr[j]) < ath21)\n                        xr[j] = 0;\n                    else {\n                        stop = true;\n                        break;\n                    }\n                }\n            }\n        } else {\n            /* note: short blocks coeffs are reordered */\n            for (var block = 0; block < 3; block++) {\n                var stop = false;\n                for (var gsfb = Encoder_1.PSFB12 - 1; gsfb >= 0 && !stop; gsfb--) {\n                    var start = gfc.scalefac_band.s[12]\n                        * 3\n                        + (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12])\n                        * block\n                        + (gfc.scalefac_band.psfb12[gsfb] - gfc.scalefac_band.psfb12[0]);\n                    var end = start\n                        + (gfc.scalefac_band.psfb12[gsfb + 1] - gfc.scalefac_band.psfb12[gsfb]);\n                    var ath12 = qupvt.athAdjust(ath.adjust, ath.psfb12[gsfb],\n                        ath.floor);\n\n                    if (gfc.nsPsy.shortfact[12] > 1e-12)\n                        ath12 *= gfc.nsPsy.shortfact[12];\n\n                    for (var j = end - 1; j >= start; j--) {\n                        if (Math.abs(xr[j]) < ath12)\n                            xr[j] = 0;\n                        else {\n                            stop = true;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n    }\n\n    this.init_outer_loop = function (gfc, cod_info) {\n        /*\n         * initialize fresh cod_info\n         */\n        cod_info.part2_3_length = 0;\n        cod_info.big_values = 0;\n        cod_info.count1 = 0;\n        cod_info.global_gain = 210;\n        cod_info.scalefac_compress = 0;\n        /* mixed_block_flag, block_type was set in psymodel.c */\n        cod_info.table_select[0] = 0;\n        cod_info.table_select[1] = 0;\n        cod_info.table_select[2] = 0;\n        cod_info.subblock_gain[0] = 0;\n        cod_info.subblock_gain[1] = 0;\n        cod_info.subblock_gain[2] = 0;\n        cod_info.subblock_gain[3] = 0;\n        /* this one is always 0 */\n        cod_info.region0_count = 0;\n        cod_info.region1_count = 0;\n        cod_info.preflag = 0;\n        cod_info.scalefac_scale = 0;\n        cod_info.count1table_select = 0;\n        cod_info.part2_length = 0;\n        cod_info.sfb_lmax = Encoder_1.SBPSY_l;\n        cod_info.sfb_smin = Encoder_1.SBPSY_s;\n        cod_info.psy_lmax = gfc.sfb21_extra ? Encoder_1.SBMAX_l : Encoder_1.SBPSY_l;\n        cod_info.psymax = cod_info.psy_lmax;\n        cod_info.sfbmax = cod_info.sfb_lmax;\n        cod_info.sfbdivide = 11;\n        for (var sfb = 0; sfb < Encoder_1.SBMAX_l; sfb++) {\n            cod_info.width[sfb] = gfc.scalefac_band.l[sfb + 1]\n                - gfc.scalefac_band.l[sfb];\n            /* which is always 0. */\n            cod_info.window[sfb] = 3;\n        }\n        if (cod_info.block_type == Encoder_1.SHORT_TYPE) {\n            var ixwork = new_float$21(576);\n\n            cod_info.sfb_smin = 0;\n            cod_info.sfb_lmax = 0;\n            if (cod_info.mixed_block_flag != 0) {\n                /*\n                 * MPEG-1: sfbs 0-7 long block, 3-12 short blocks MPEG-2(.5):\n                 * sfbs 0-5 long block, 3-12 short blocks\n                 */\n                cod_info.sfb_smin = 3;\n                cod_info.sfb_lmax = gfc.mode_gr * 2 + 4;\n            }\n            cod_info.psymax = cod_info.sfb_lmax\n                + 3\n                * ((gfc.sfb21_extra ? Encoder_1.SBMAX_s : Encoder_1.SBPSY_s) - cod_info.sfb_smin);\n            cod_info.sfbmax = cod_info.sfb_lmax + 3\n                * (Encoder_1.SBPSY_s - cod_info.sfb_smin);\n            cod_info.sfbdivide = cod_info.sfbmax - 18;\n            cod_info.psy_lmax = cod_info.sfb_lmax;\n            /* re-order the short blocks, for more efficient encoding below */\n            /* By Takehiro TOMINAGA */\n            /*\n             * Within each scalefactor band, data is given for successive time\n             * windows, beginning with window 0 and ending with window 2. Within\n             * each window, the quantized values are then arranged in order of\n             * increasing frequency...\n             */\n            var ix = gfc.scalefac_band.l[cod_info.sfb_lmax];\n            System$21.arraycopy(cod_info.xr, 0, ixwork, 0, 576);\n            for (var sfb = cod_info.sfb_smin; sfb < Encoder_1.SBMAX_s; sfb++) {\n                var start = gfc.scalefac_band.s[sfb];\n                var end = gfc.scalefac_band.s[sfb + 1];\n                for (var window = 0; window < 3; window++) {\n                    for (var l = start; l < end; l++) {\n                        cod_info.xr[ix++] = ixwork[3 * l + window];\n                    }\n                }\n            }\n\n            var j = cod_info.sfb_lmax;\n            for (var sfb = cod_info.sfb_smin; sfb < Encoder_1.SBMAX_s; sfb++) {\n                cod_info.width[j] = cod_info.width[j + 1] = cod_info.width[j + 2] = gfc.scalefac_band.s[sfb + 1]\n                    - gfc.scalefac_band.s[sfb];\n                cod_info.window[j] = 0;\n                cod_info.window[j + 1] = 1;\n                cod_info.window[j + 2] = 2;\n                j += 3;\n            }\n        }\n\n        cod_info.count1bits = 0;\n        cod_info.sfb_partition_table = qupvt.nr_of_sfb_block[0][0];\n        cod_info.slen[0] = 0;\n        cod_info.slen[1] = 0;\n        cod_info.slen[2] = 0;\n        cod_info.slen[3] = 0;\n\n        cod_info.max_nonzero_coeff = 575;\n\n        /*\n         * fresh scalefactors are all zero\n         */\n        Arrays$21.fill(cod_info.scalefac, 0);\n\n        psfb21_analogsilence(gfc, cod_info);\n    };\n\n    function BinSearchDirection(ordinal) {\n        this.ordinal = ordinal;\n    }\n\n    BinSearchDirection.BINSEARCH_NONE = new BinSearchDirection(0);\n    BinSearchDirection.BINSEARCH_UP = new BinSearchDirection(1);\n    BinSearchDirection.BINSEARCH_DOWN = new BinSearchDirection(2);\n\n    /**\n     * author/date??\n     *\n     * binary step size search used by outer_loop to get a quantizer step size\n     * to start with\n     */\n    function bin_search_StepSize(gfc, cod_info, desired_rate, ch, xrpow) {\n        var nBits;\n        var CurrentStep = gfc.CurrentStep[ch];\n        var flagGoneOver = false;\n        var start = gfc.OldValue[ch];\n        var Direction = BinSearchDirection.BINSEARCH_NONE;\n        cod_info.global_gain = start;\n        desired_rate -= cod_info.part2_length;\n\n        assert$21(CurrentStep != 0);\n        for (; ;) {\n            var step;\n            nBits = tk.count_bits(gfc, xrpow, cod_info, null);\n\n            if (CurrentStep == 1 || nBits == desired_rate)\n                break;\n            /* nothing to adjust anymore */\n\n            if (nBits > desired_rate) {\n                /* increase Quantize_StepSize */\n                if (Direction == BinSearchDirection.BINSEARCH_DOWN)\n                    flagGoneOver = true;\n\n                if (flagGoneOver)\n                    CurrentStep /= 2;\n                Direction = BinSearchDirection.BINSEARCH_UP;\n                step = CurrentStep;\n            } else {\n                /* decrease Quantize_StepSize */\n                if (Direction == BinSearchDirection.BINSEARCH_UP)\n                    flagGoneOver = true;\n\n                if (flagGoneOver)\n                    CurrentStep /= 2;\n                Direction = BinSearchDirection.BINSEARCH_DOWN;\n                step = -CurrentStep;\n            }\n            cod_info.global_gain += step;\n            if (cod_info.global_gain < 0) {\n                cod_info.global_gain = 0;\n                flagGoneOver = true;\n            }\n            if (cod_info.global_gain > 255) {\n                cod_info.global_gain = 255;\n                flagGoneOver = true;\n            }\n        }\n\n        assert$21(cod_info.global_gain >= 0);\n        assert$21(cod_info.global_gain < 256);\n\n        while (nBits > desired_rate && cod_info.global_gain < 255) {\n            cod_info.global_gain++;\n            nBits = tk.count_bits(gfc, xrpow, cod_info, null);\n        }\n        gfc.CurrentStep[ch] = (start - cod_info.global_gain >= 4) ? 4 : 2;\n        gfc.OldValue[ch] = cod_info.global_gain;\n        cod_info.part2_3_length = nBits;\n        return nBits;\n    }\n\n    this.trancate_smallspectrums = function (gfc, gi, l3_xmin, work) {\n        var distort = new_float$21(L3Side_1.SFBMAX);\n\n        if ((0 == (gfc.substep_shaping & 4) && gi.block_type == Encoder_1.SHORT_TYPE)\n            || (gfc.substep_shaping & 0x80) != 0)\n            return;\n        qupvt.calc_noise(gi, l3_xmin, distort, new CalcNoiseResult_1(), null);\n        for (var j = 0; j < 576; j++) {\n            var xr = 0.0;\n            if (gi.l3_enc[j] != 0)\n                xr = Math.abs(gi.xr[j]);\n            work[j] = xr;\n        }\n\n        var j = 0;\n        var sfb = 8;\n        if (gi.block_type == Encoder_1.SHORT_TYPE)\n            sfb = 6;\n        do {\n            var allowedNoise, trancateThreshold;\n            var nsame, start;\n\n            var width = gi.width[sfb];\n            j += width;\n            if (distort[sfb] >= 1.0)\n                continue;\n\n            Arrays$21.sort(work, j - width, width);\n            if (BitStream.EQ(work[j - 1], 0.0))\n                continue;\n            /* all zero sfb */\n\n            allowedNoise = (1.0 - distort[sfb]) * l3_xmin[sfb];\n            trancateThreshold = 0.0;\n            start = 0;\n            do {\n                var noise;\n                for (nsame = 1; start + nsame < width; nsame++)\n                    if (BitStream.NEQ(work[start + j - width], work[start + j\n                        + nsame - width]))\n                        break;\n\n                noise = work[start + j - width] * work[start + j - width]\n                    * nsame;\n                if (allowedNoise < noise) {\n                    if (start != 0)\n                        trancateThreshold = work[start + j - width - 1];\n                    break;\n                }\n                allowedNoise -= noise;\n                start += nsame;\n            } while (start < width);\n            if (BitStream.EQ(trancateThreshold, 0.0))\n                continue;\n\n            do {\n                if (Math.abs(gi.xr[j - width]) <= trancateThreshold)\n                    gi.l3_enc[j - width] = 0;\n            } while (--width > 0);\n        } while (++sfb < gi.psymax);\n\n        gi.part2_3_length = tk.noquant_count_bits(gfc, gi, null);\n    };\n\n    /**\n     * author/date??\n     *\n     * Function: Returns zero if there is a scalefac which has not been\n     * amplified. Otherwise it returns one.\n     */\n    function loop_break(cod_info) {\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++)\n            if (cod_info.scalefac[sfb]\n                + cod_info.subblock_gain[cod_info.window[sfb]] == 0)\n                return false;\n\n        return true;\n    }\n\n    /* mt 5/99: Function: Improved calc_noise for a single channel */\n\n    function penalties(noise) {\n        return Util$21.FAST_LOG10((0.368 + 0.632 * noise * noise * noise));\n    }\n\n    /**\n     * author/date??\n     *\n     * several different codes to decide which quantization is better\n     */\n    function get_klemm_noise(distort, gi) {\n        var klemm_noise = 1E-37;\n        for (var sfb = 0; sfb < gi.psymax; sfb++)\n            klemm_noise += penalties(distort[sfb]);\n\n        return Math.max(1e-20, klemm_noise);\n    }\n\n    function quant_compare(quant_comp, best, calc, gi, distort) {\n        /**\n         * noise is given in decibels (dB) relative to masking thesholds.<BR>\n         *\n         * over_noise: ??? (the previous comment is fully wrong)<BR>\n         * tot_noise: ??? (the previous comment is fully wrong)<BR>\n         * max_noise: max quantization noise\n         */\n        var better;\n\n        switch (quant_comp) {\n            default:\n            case 9:\n            {\n                if (best.over_count > 0) {\n                    /* there are distorted sfb */\n                    better = calc.over_SSD <= best.over_SSD;\n                    if (calc.over_SSD == best.over_SSD)\n                        better = calc.bits < best.bits;\n                } else {\n                    /* no distorted sfb */\n                    better = ((calc.max_noise < 0) && ((calc.max_noise * 10 + calc.bits) <= (best.max_noise * 10 + best.bits)));\n                }\n                break;\n            }\n\n            case 0:\n                better = calc.over_count < best.over_count\n                    || (calc.over_count == best.over_count && calc.over_noise < best.over_noise)\n                    || (calc.over_count == best.over_count\n                    && BitStream.EQ(calc.over_noise, best.over_noise) && calc.tot_noise < best.tot_noise);\n                break;\n\n            case 8:\n                calc.max_noise = get_klemm_noise(distort, gi);\n            //$FALL-THROUGH$\n            case 1:\n                better = calc.max_noise < best.max_noise;\n                break;\n            case 2:\n                better = calc.tot_noise < best.tot_noise;\n                break;\n            case 3:\n                better = (calc.tot_noise < best.tot_noise)\n                    && (calc.max_noise < best.max_noise);\n                break;\n            case 4:\n                better = (calc.max_noise <= 0.0 && best.max_noise > 0.2)\n                    || (calc.max_noise <= 0.0 && best.max_noise < 0.0\n                    && best.max_noise > calc.max_noise - 0.2 && calc.tot_noise < best.tot_noise)\n                    || (calc.max_noise <= 0.0 && best.max_noise > 0.0\n                    && best.max_noise > calc.max_noise - 0.2 && calc.tot_noise < best.tot_noise\n                    + best.over_noise)\n                    || (calc.max_noise > 0.0 && best.max_noise > -0.05\n                    && best.max_noise > calc.max_noise - 0.1 && calc.tot_noise\n                    + calc.over_noise < best.tot_noise\n                    + best.over_noise)\n                    || (calc.max_noise > 0.0 && best.max_noise > -0.1\n                    && best.max_noise > calc.max_noise - 0.15 && calc.tot_noise\n                    + calc.over_noise + calc.over_noise < best.tot_noise\n                    + best.over_noise + best.over_noise);\n                break;\n            case 5:\n                better = calc.over_noise < best.over_noise\n                    || (BitStream.EQ(calc.over_noise, best.over_noise) && calc.tot_noise < best.tot_noise);\n                break;\n            case 6:\n                better = calc.over_noise < best.over_noise\n                    || (BitStream.EQ(calc.over_noise, best.over_noise) && (calc.max_noise < best.max_noise || (BitStream\n                        .EQ(calc.max_noise, best.max_noise) && calc.tot_noise <= best.tot_noise)));\n                break;\n            case 7:\n                better = calc.over_count < best.over_count\n                    || calc.over_noise < best.over_noise;\n                break;\n        }\n\n        if (best.over_count == 0) {\n            /*\n             * If no distorted bands, only use this quantization if it is\n             * better, and if it uses less bits. Unfortunately, part2_3_length\n             * is sometimes a poor estimator of the final size at low bitrates.\n             */\n            better = better && calc.bits < best.bits;\n        }\n\n        return better;\n    }\n\n    /**\n     * author/date??\n     *\n     * <PRE>\n     *  Amplify the scalefactor bands that violate the masking threshold.\n     *  See ISO 11172-3 Section C.1.5.4.3.5\n     *\n     *  distort[] = noise/masking\n     *  distort[] > 1   ==> noise is not masked\n     *  distort[] < 1   ==> noise is masked\n     *  max_dist = maximum value of distort[]\n     *\n     *  Three algorithms:\n     *  noise_shaping_amp\n     *        0             Amplify all bands with distort[]>1.\n     *\n     *        1             Amplify all bands with distort[] >= max_dist^(.5);\n     *                     ( 50% in the db scale)\n     *\n     *        2             Amplify first band with distort[] >= max_dist;\n     *\n     *\n     *  For algorithms 0 and 1, if max_dist < 1, then amplify all bands\n     *  with distort[] >= .95*max_dist.  This is to make sure we always\n     *  amplify at least one band.\n     * </PRE>\n     */\n    function amp_scalefac_bands(gfp, cod_info, distort, xrpow, bRefine) {\n        var gfc = gfp.internal_flags;\n        var ifqstep34;\n\n        if (cod_info.scalefac_scale == 0) {\n            ifqstep34 = 1.29683955465100964055;\n            /* 2**(.75*.5) */\n        } else {\n            ifqstep34 = 1.68179283050742922612;\n            /* 2**(.75*1) */\n        }\n\n        /* compute maximum value of distort[] */\n        var trigger = 0;\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\n            if (trigger < distort[sfb])\n                trigger = distort[sfb];\n        }\n\n        var noise_shaping_amp = gfc.noise_shaping_amp;\n        if (noise_shaping_amp == 3) {\n            if (bRefine)\n                noise_shaping_amp = 2;\n            else\n                noise_shaping_amp = 1;\n        }\n        switch (noise_shaping_amp) {\n            case 2:\n                /* amplify exactly 1 band */\n                break;\n\n            case 1:\n                /* amplify bands within 50% of max (on db scale) */\n                if (trigger > 1.0)\n                    trigger = Math.pow(trigger, .5);\n                else\n                    trigger *= .95;\n                break;\n\n            case 0:\n            default:\n                /* ISO algorithm. amplify all bands with distort>1 */\n                if (trigger > 1.0)\n                    trigger = 1.0;\n                else\n                    trigger *= .95;\n                break;\n        }\n\n        var j = 0;\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\n            var width = cod_info.width[sfb];\n            var l;\n            j += width;\n            if (distort[sfb] < trigger)\n                continue;\n\n            if ((gfc.substep_shaping & 2) != 0) {\n                gfc.pseudohalf[sfb] = (0 == gfc.pseudohalf[sfb]) ? 1 : 0;\n                if (0 == gfc.pseudohalf[sfb] && gfc.noise_shaping_amp == 2)\n                    return;\n            }\n            cod_info.scalefac[sfb]++;\n            for (l = -width; l < 0; l++) {\n                xrpow[j + l] *= ifqstep34;\n                if (xrpow[j + l] > cod_info.xrpow_max)\n                    cod_info.xrpow_max = xrpow[j + l];\n            }\n\n            if (gfc.noise_shaping_amp == 2)\n                return;\n        }\n    }\n\n    /**\n     * Takehiro Tominaga 2000-xx-xx\n     *\n     * turns on scalefac scale and adjusts scalefactors\n     */\n    function inc_scalefac_scale(cod_info, xrpow) {\n        var ifqstep34 = 1.29683955465100964055;\n\n        var j = 0;\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\n            var width = cod_info.width[sfb];\n            var s = cod_info.scalefac[sfb];\n            if (cod_info.preflag != 0)\n                s += qupvt.pretab[sfb];\n            j += width;\n            if ((s & 1) != 0) {\n                s++;\n                for (var l = -width; l < 0; l++) {\n                    xrpow[j + l] *= ifqstep34;\n                    if (xrpow[j + l] > cod_info.xrpow_max)\n                        cod_info.xrpow_max = xrpow[j + l];\n                }\n            }\n            cod_info.scalefac[sfb] = s >> 1;\n        }\n        cod_info.preflag = 0;\n        cod_info.scalefac_scale = 1;\n    }\n\n    /**\n     * Takehiro Tominaga 2000-xx-xx\n     *\n     * increases the subblock gain and adjusts scalefactors\n     */\n    function inc_subblock_gain(gfc, cod_info, xrpow) {\n        var sfb;\n        var scalefac = cod_info.scalefac;\n\n        /* subbloc_gain can't do anything in the long block region */\n        for (sfb = 0; sfb < cod_info.sfb_lmax; sfb++) {\n            if (scalefac[sfb] >= 16)\n                return true;\n        }\n\n        for (var window = 0; window < 3; window++) {\n            var s1 = 0;\n            var s2 = 0;\n\n            for (sfb = cod_info.sfb_lmax + window; sfb < cod_info.sfbdivide; sfb += 3) {\n                if (s1 < scalefac[sfb])\n                    s1 = scalefac[sfb];\n            }\n            for (; sfb < cod_info.sfbmax; sfb += 3) {\n                if (s2 < scalefac[sfb])\n                    s2 = scalefac[sfb];\n            }\n\n            if (s1 < 16 && s2 < 8)\n                continue;\n\n            if (cod_info.subblock_gain[window] >= 7)\n                return true;\n\n            /*\n             * even though there is no scalefactor for sfb12 subblock gain\n             * affects upper frequencies too, that's why we have to go up to\n             * SBMAX_s\n             */\n            cod_info.subblock_gain[window]++;\n            var j = gfc.scalefac_band.l[cod_info.sfb_lmax];\n            for (sfb = cod_info.sfb_lmax + window; sfb < cod_info.sfbmax; sfb += 3) {\n                var amp;\n                var width = cod_info.width[sfb];\n                var s = scalefac[sfb];\n                assert$21(s >= 0);\n                s = s - (4 >> cod_info.scalefac_scale);\n                if (s >= 0) {\n                    scalefac[sfb] = s;\n                    j += width * 3;\n                    continue;\n                }\n\n                scalefac[sfb] = 0;\n                {\n                    var gain = 210 + (s << (cod_info.scalefac_scale + 1));\n                    amp = qupvt.IPOW20(gain);\n                }\n                j += width * (window + 1);\n                for (var l = -width; l < 0; l++) {\n                    xrpow[j + l] *= amp;\n                    if (xrpow[j + l] > cod_info.xrpow_max)\n                        cod_info.xrpow_max = xrpow[j + l];\n                }\n                j += width * (3 - window - 1);\n            }\n\n            {\n                var amp = qupvt.IPOW20(202);\n                j += cod_info.width[sfb] * (window + 1);\n                for (var l = -cod_info.width[sfb]; l < 0; l++) {\n                    xrpow[j + l] *= amp;\n                    if (xrpow[j + l] > cod_info.xrpow_max)\n                        cod_info.xrpow_max = xrpow[j + l];\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * <PRE>\n     *  Takehiro Tominaga /date??\n     *  Robert Hegemann 2000-09-06: made a function of it\n     *\n     *  amplifies scalefactor bands,\n     *   - if all are already amplified returns 0\n     *   - if some bands are amplified too much:\n     *      * try to increase scalefac_scale\n     *      * if already scalefac_scale was set\n     *          try on short blocks to increase subblock gain\n     * </PRE>\n     */\n    function balance_noise(gfp, cod_info, distort, xrpow, bRefine) {\n        var gfc = gfp.internal_flags;\n\n        amp_scalefac_bands(gfp, cod_info, distort, xrpow, bRefine);\n\n        /*\n         * check to make sure we have not amplified too much loop_break returns\n         * 0 if there is an unamplified scalefac scale_bitcount returns 0 if no\n         * scalefactors are too large\n         */\n\n        var status = loop_break(cod_info);\n\n        if (status)\n            return false;\n        /* all bands amplified */\n\n        /*\n         * not all scalefactors have been amplified. so these scalefacs are\n         * possibly valid. encode them:\n         */\n        if (gfc.mode_gr == 2)\n            status = tk.scale_bitcount(cod_info);\n        else\n            status = tk.scale_bitcount_lsf(gfc, cod_info);\n\n        if (!status)\n            return true;\n        /* amplified some bands not exceeding limits */\n\n        /*\n         * some scalefactors are too large. lets try setting scalefac_scale=1\n         */\n        if (gfc.noise_shaping > 1) {\n            Arrays$21.fill(gfc.pseudohalf, 0);\n            if (0 == cod_info.scalefac_scale) {\n                inc_scalefac_scale(cod_info, xrpow);\n                status = false;\n            } else {\n                if (cod_info.block_type == Encoder_1.SHORT_TYPE\n                    && gfc.subblock_gain > 0) {\n                    status = (inc_subblock_gain(gfc, cod_info, xrpow) || loop_break(cod_info));\n                }\n            }\n        }\n\n        if (!status) {\n            if (gfc.mode_gr == 2)\n                status = tk.scale_bitcount(cod_info);\n            else\n                status = tk.scale_bitcount_lsf(gfc, cod_info);\n        }\n        return !status;\n    }\n\n    /**\n     * <PRE>\n     *  Function: The outer iteration loop controls the masking conditions\n     *  of all scalefactorbands. It computes the best scalefac and\n     *  global gain. This module calls the inner iteration loop\n     *\n     *  mt 5/99 completely rewritten to allow for bit reservoir control,\n     *  mid/side channels with L/R or mid/side masking thresholds,\n     *  and chooses best quantization instead of last quantization when\n     *  no distortion free quantization can be found.\n     *\n     *  added VBR support mt 5/99\n     *\n     *  some code shuffle rh 9/00\n     * </PRE>\n     *\n     * @param l3_xmin\n     *            allowed distortion\n     * @param xrpow\n     *            coloured magnitudes of spectral\n     * @param targ_bits\n     *            maximum allowed bits\n     */\n    this.outer_loop = function (gfp, cod_info, l3_xmin, xrpow, ch, targ_bits) {\n        var gfc = gfp.internal_flags;\n        var cod_info_w = new GrInfo_1();\n        var save_xrpow = new_float$21(576);\n        var distort = new_float$21(L3Side_1.SFBMAX);\n        var best_noise_info = new CalcNoiseResult_1();\n        var better;\n        var prev_noise = new CalcNoiseData_1();\n        var best_part2_3_length = 9999999;\n        var bEndOfSearch = false;\n        var bRefine = false;\n        var best_ggain_pass1 = 0;\n\n        bin_search_StepSize(gfc, cod_info, targ_bits, ch, xrpow);\n\n        if (0 == gfc.noise_shaping)\n        /* fast mode, no noise shaping, we are ready */\n            return 100;\n        /* default noise_info.over_count */\n\n        /* compute the distortion in this quantization */\n        /* coefficients and thresholds both l/r (or both mid/side) */\n        qupvt.calc_noise(cod_info, l3_xmin, distort, best_noise_info,\n            prev_noise);\n        best_noise_info.bits = cod_info.part2_3_length;\n\n        cod_info_w.assign(cod_info);\n        var age = 0;\n        System$21.arraycopy(xrpow, 0, save_xrpow, 0, 576);\n\n        while (!bEndOfSearch) {\n            /* BEGIN MAIN LOOP */\n            do {\n                var noise_info = new CalcNoiseResult_1();\n                var search_limit;\n                var maxggain = 255;\n\n                /*\n                 * When quantization with no distorted bands is found, allow up\n                 * to X new unsuccesful tries in serial. This gives us more\n                 * possibilities for different quant_compare modes. Much more\n                 * than 3 makes not a big difference, it is only slower.\n                 */\n\n                if ((gfc.substep_shaping & 2) != 0) {\n                    search_limit = 20;\n                } else {\n                    search_limit = 3;\n                }\n\n                /*\n                 * Check if the last scalefactor band is distorted. in VBR mode\n                 * we can't get rid of the distortion, so quit now and VBR mode\n                 * will try again with more bits. (makes a 10% speed increase,\n                 * the files I tested were binary identical, 2000/05/20 Robert\n                 * Hegemann) distort[] > 1 means noise > allowed noise\n                 */\n                if (gfc.sfb21_extra) {\n                    if (distort[cod_info_w.sfbmax] > 1.0)\n                        break;\n                    if (cod_info_w.block_type == Encoder_1.SHORT_TYPE\n                        && (distort[cod_info_w.sfbmax + 1] > 1.0 || distort[cod_info_w.sfbmax + 2] > 1.0))\n                        break;\n                }\n\n                /* try a new scalefactor conbination on cod_info_w */\n                if (!balance_noise(gfp, cod_info_w, distort, xrpow, bRefine))\n                    break;\n                if (cod_info_w.scalefac_scale != 0)\n                    maxggain = 254;\n\n                /*\n                 * inner_loop starts with the initial quantization step computed\n                 * above and slowly increases until the bits < huff_bits. Thus\n                 * it is important not to start with too large of an inital\n                 * quantization step. Too small is ok, but inner_loop will take\n                 * longer\n                 */\n                var huff_bits = targ_bits - cod_info_w.part2_length;\n                if (huff_bits <= 0)\n                    break;\n\n                /*\n                 * increase quantizer stepsize until needed bits are below\n                 * maximum\n                 */\n                while ((cod_info_w.part2_3_length = tk.count_bits(gfc, xrpow,\n                    cod_info_w, prev_noise)) > huff_bits\n                && cod_info_w.global_gain <= maxggain)\n                    cod_info_w.global_gain++;\n\n                if (cod_info_w.global_gain > maxggain)\n                    break;\n\n                if (best_noise_info.over_count == 0) {\n\n                    while ((cod_info_w.part2_3_length = tk.count_bits(gfc,\n                        xrpow, cod_info_w, prev_noise)) > best_part2_3_length\n                    && cod_info_w.global_gain <= maxggain)\n                        cod_info_w.global_gain++;\n\n                    if (cod_info_w.global_gain > maxggain)\n                        break;\n                }\n\n                /* compute the distortion in this quantization */\n                qupvt.calc_noise(cod_info_w, l3_xmin, distort, noise_info,\n                    prev_noise);\n                noise_info.bits = cod_info_w.part2_3_length;\n\n                /*\n                 * check if this quantization is better than our saved\n                 * quantization\n                 */\n                if (cod_info.block_type != Encoder_1.SHORT_TYPE) {\n                    // NORM, START or STOP type\n                    better = gfp.quant_comp;\n                } else\n                    better = gfp.quant_comp_short;\n\n                better = quant_compare(better, best_noise_info, noise_info,\n                    cod_info_w, distort) ? 1 : 0;\n\n                /* save data so we can restore this quantization later */\n                if (better != 0) {\n                    best_part2_3_length = cod_info.part2_3_length;\n                    best_noise_info = noise_info;\n                    cod_info.assign(cod_info_w);\n                    age = 0;\n                    /* save data so we can restore this quantization later */\n                    /* store for later reuse */\n                    System$21.arraycopy(xrpow, 0, save_xrpow, 0, 576);\n                } else {\n                    /* early stop? */\n                    if (gfc.full_outer_loop == 0) {\n                        if (++age > search_limit\n                            && best_noise_info.over_count == 0)\n                            break;\n                        if ((gfc.noise_shaping_amp == 3) && bRefine && age > 30)\n                            break;\n                        if ((gfc.noise_shaping_amp == 3)\n                            && bRefine\n                            && (cod_info_w.global_gain - best_ggain_pass1) > 15)\n                            break;\n                    }\n                }\n            } while ((cod_info_w.global_gain + cod_info_w.scalefac_scale) < 255);\n\n            if (gfc.noise_shaping_amp == 3) {\n                if (!bRefine) {\n                    /* refine search */\n                    cod_info_w.assign(cod_info);\n                    System$21.arraycopy(save_xrpow, 0, xrpow, 0, 576);\n                    age = 0;\n                    best_ggain_pass1 = cod_info_w.global_gain;\n\n                    bRefine = true;\n                } else {\n                    /* search already refined, stop */\n                    bEndOfSearch = true;\n                }\n\n            } else {\n                bEndOfSearch = true;\n            }\n        }\n\n        assert$21((cod_info.global_gain + cod_info.scalefac_scale) <= 255);\n        /*\n         * finish up\n         */\n        if (gfp.VBR == VbrMode$21.vbr_rh || gfp.VBR == VbrMode$21.vbr_mtrh)\n        /* restore for reuse on next try */\n            System$21.arraycopy(save_xrpow, 0, xrpow, 0, 576);\n        /*\n         * do the 'substep shaping'\n         */\n        else if ((gfc.substep_shaping & 1) != 0)\n            trancate_smallspectrums(gfc, cod_info, l3_xmin, xrpow);\n\n        return best_noise_info.over_count;\n    };\n\n    /**\n     * Robert Hegemann 2000-09-06\n     *\n     * update reservoir status after FINAL quantization/bitrate\n     */\n    this.iteration_finish_one = function (gfc, gr, ch) {\n        var l3_side = gfc.l3_side;\n        var cod_info = l3_side.tt[gr][ch];\n\n        /*\n         * try some better scalefac storage\n         */\n        tk.best_scalefac_store(gfc, gr, ch, l3_side);\n\n        /*\n         * best huffman_divide may save some bits too\n         */\n        if (gfc.use_best_huffman == 1)\n            tk.best_huffman_divide(gfc, cod_info);\n\n        /*\n         * update reservoir status after FINAL quantization/bitrate\n         */\n        rv.ResvAdjust(gfc, cod_info);\n    };\n\n    /**\n     *\n     * 2000-09-04 Robert Hegemann\n     *\n     * @param l3_xmin\n     *            allowed distortion of the scalefactor\n     * @param xrpow\n     *            coloured magnitudes of spectral values\n     */\n    this.VBR_encode_granule = function (gfp, cod_info, l3_xmin, xrpow, ch, min_bits, max_bits) {\n        var gfc = gfp.internal_flags;\n        var bst_cod_info = new GrInfo_1();\n        var bst_xrpow = new_float$21(576);\n        var Max_bits = max_bits;\n        var real_bits = max_bits + 1;\n        var this_bits = (max_bits + min_bits) / 2;\n        var dbits, over, found = 0;\n        var sfb21_extra = gfc.sfb21_extra;\n\n        assert$21(Max_bits <= LameInternalFlags.MAX_BITS_PER_CHANNEL);\n        Arrays$21.fill(bst_cod_info.l3_enc, 0);\n\n        /*\n         * search within round about 40 bits of optimal\n         */\n        do {\n            assert$21(this_bits >= min_bits);\n            assert$21(this_bits <= max_bits);\n            assert$21(min_bits <= max_bits);\n\n            if (this_bits > Max_bits - 42)\n                gfc.sfb21_extra = false;\n            else\n                gfc.sfb21_extra = sfb21_extra;\n\n            over = outer_loop(gfp, cod_info, l3_xmin, xrpow, ch, this_bits);\n\n            /*\n             * is quantization as good as we are looking for ? in this case: is\n             * no scalefactor band distorted?\n             */\n            if (over <= 0) {\n                found = 1;\n                /*\n                 * now we know it can be done with \"real_bits\" and maybe we can\n                 * skip some iterations\n                 */\n                real_bits = cod_info.part2_3_length;\n\n                /*\n                 * store best quantization so far\n                 */\n                bst_cod_info.assign(cod_info);\n                System$21.arraycopy(xrpow, 0, bst_xrpow, 0, 576);\n\n                /*\n                 * try with fewer bits\n                 */\n                max_bits = real_bits - 32;\n                dbits = max_bits - min_bits;\n                this_bits = (max_bits + min_bits) / 2;\n            } else {\n                /*\n                 * try with more bits\n                 */\n                min_bits = this_bits + 32;\n                dbits = max_bits - min_bits;\n                this_bits = (max_bits + min_bits) / 2;\n\n                if (found != 0) {\n                    found = 2;\n                    /*\n                     * start again with best quantization so far\n                     */\n                    cod_info.assign(bst_cod_info);\n                    System$21.arraycopy(bst_xrpow, 0, xrpow, 0, 576);\n                }\n            }\n        } while (dbits > 12);\n\n        gfc.sfb21_extra = sfb21_extra;\n\n        /*\n         * found=0 => nothing found, use last one found=1 => we just found the\n         * best and left the loop found=2 => we restored a good one and have now\n         * l3_enc to restore too\n         */\n        if (found == 2) {\n            System$21.arraycopy(bst_cod_info.l3_enc, 0, cod_info.l3_enc, 0, 576);\n        }\n        assert$21(cod_info.part2_3_length <= Max_bits);\n    };\n\n    /**\n     * Robert Hegemann 2000-09-05\n     *\n     * calculates * how many bits are available for analog silent granules * how\n     * many bits to use for the lowest allowed bitrate * how many bits each\n     * bitrate would provide\n     */\n    this.get_framebits = function (gfp, frameBits) {\n        var gfc = gfp.internal_flags;\n\n        /*\n         * always use at least this many bits per granule per channel unless we\n         * detect analog silence, see below\n         */\n        gfc.bitrate_index = gfc.VBR_min_bitrate;\n        var bitsPerFrame = bs.getframebits(gfp);\n\n        /*\n         * bits for analog silence\n         */\n        gfc.bitrate_index = 1;\n        bitsPerFrame = bs.getframebits(gfp);\n\n        for (var i = 1; i <= gfc.VBR_max_bitrate; i++) {\n            gfc.bitrate_index = i;\n            var mb = new MeanBits(bitsPerFrame);\n            frameBits[i] = rv.ResvFrameBegin(gfp, mb);\n            bitsPerFrame = mb.bits;\n        }\n    };\n\n    /* RH: this one needs to be overhauled sometime */\n\n    /**\n     * <PRE>\n     *  2000-09-04 Robert Hegemann\n     *\n     *  * converts LR to MS coding when necessary\n     *  * calculates allowed/adjusted quantization noise amounts\n     *  * detects analog silent frames\n     *\n     *  some remarks:\n     *  - lower masking depending on Quality setting\n     *  - quality control together with adjusted ATH MDCT scaling\n     *    on lower quality setting allocate more noise from\n     *    ATH masking, and on higher quality setting allocate\n     *    less noise from ATH masking.\n     *  - experiments show that going more than 2dB over GPSYCHO's\n     *    limits ends up in very annoying artefacts\n     * </PRE>\n     */\n    this.VBR_old_prepare = function (gfp, pe, ms_ener_ratio, ratio, l3_xmin, frameBits, min_bits,\n                                     max_bits, bands) {\n        var gfc = gfp.internal_flags;\n\n        var masking_lower_db, adjust = 0.0;\n        var analog_silence = 1;\n        var bits = 0;\n\n        gfc.bitrate_index = gfc.VBR_max_bitrate;\n        var avg = rv.ResvFrameBegin(gfp, new MeanBits(0)) / gfc.mode_gr;\n\n        get_framebits(gfp, frameBits);\n\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            var mxb = qupvt.on_pe(gfp, pe, max_bits[gr], avg, gr, 0);\n            if (gfc.mode_ext == Encoder_1.MPG_MD_MS_LR) {\n                ms_convert(gfc.l3_side, gr);\n                qupvt.reduce_side(max_bits[gr], ms_ener_ratio[gr], avg, mxb);\n            }\n            for (var ch = 0; ch < gfc.channels_out; ++ch) {\n                var cod_info = gfc.l3_side.tt[gr][ch];\n\n                if (cod_info.block_type != Encoder_1.SHORT_TYPE) {\n                    // NORM, START or STOP type\n                    adjust = 1.28 / (1 + Math\n                            .exp(3.5 - pe[gr][ch] / 300.)) - 0.05;\n                    masking_lower_db = gfc.PSY.mask_adjust - adjust;\n                } else {\n                    adjust = 2.56 / (1 + Math\n                            .exp(3.5 - pe[gr][ch] / 300.)) - 0.14;\n                    masking_lower_db = gfc.PSY.mask_adjust_short - adjust;\n                }\n                gfc.masking_lower = Math.pow(10.0,\n                    masking_lower_db * 0.1);\n\n                init_outer_loop(gfc, cod_info);\n                bands[gr][ch] = qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info,\n                    l3_xmin[gr][ch]);\n                if (bands[gr][ch] != 0)\n                    analog_silence = 0;\n\n                min_bits[gr][ch] = 126;\n\n                bits += max_bits[gr][ch];\n            }\n        }\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                if (bits > frameBits[gfc.VBR_max_bitrate]) {\n                    max_bits[gr][ch] *= frameBits[gfc.VBR_max_bitrate];\n                    max_bits[gr][ch] /= bits;\n                }\n                if (min_bits[gr][ch] > max_bits[gr][ch])\n                    min_bits[gr][ch] = max_bits[gr][ch];\n\n            }\n            /* for ch */\n        }\n        /* for gr */\n\n        return analog_silence;\n    };\n\n    this.bitpressure_strategy = function (gfc, l3_xmin, min_bits, max_bits) {\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                var gi = gfc.l3_side.tt[gr][ch];\n                var pxmin = l3_xmin[gr][ch];\n                var pxminPos = 0;\n                for (var sfb = 0; sfb < gi.psy_lmax; sfb++)\n                    pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                        / Encoder_1.SBMAX_l / Encoder_1.SBMAX_l;\n\n                if (gi.block_type == Encoder_1.SHORT_TYPE) {\n                    for (var sfb = gi.sfb_smin; sfb < Encoder_1.SBMAX_s; sfb++) {\n                        pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                            / Encoder_1.SBMAX_s / Encoder_1.SBMAX_s;\n                        pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                            / Encoder_1.SBMAX_s / Encoder_1.SBMAX_s;\n                        pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                            / Encoder_1.SBMAX_s / Encoder_1.SBMAX_s;\n                    }\n                }\n                max_bits[gr][ch] = 0 | Math.max(min_bits[gr][ch],\n                        0.9 * max_bits[gr][ch]);\n            }\n        }\n    };\n\n    this.VBR_new_prepare = function (gfp, pe, ratio, l3_xmin, frameBits, max_bits) {\n        var gfc = gfp.internal_flags;\n\n        var analog_silence = 1;\n        var avg = 0, bits = 0;\n        var maximum_framebits;\n\n        if (!gfp.free_format) {\n            gfc.bitrate_index = gfc.VBR_max_bitrate;\n\n            var mb = new MeanBits(avg);\n            rv.ResvFrameBegin(gfp, mb);\n            avg = mb.bits;\n\n            get_framebits(gfp, frameBits);\n            maximum_framebits = frameBits[gfc.VBR_max_bitrate];\n        } else {\n            gfc.bitrate_index = 0;\n            var mb = new MeanBits(avg);\n            maximum_framebits = rv.ResvFrameBegin(gfp, mb);\n            avg = mb.bits;\n            frameBits[0] = maximum_framebits;\n        }\n\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            qupvt.on_pe(gfp, pe, max_bits[gr], avg, gr, 0);\n            if (gfc.mode_ext == Encoder_1.MPG_MD_MS_LR) {\n                ms_convert(gfc.l3_side, gr);\n            }\n            for (var ch = 0; ch < gfc.channels_out; ++ch) {\n                var cod_info = gfc.l3_side.tt[gr][ch];\n\n                gfc.masking_lower = Math.pow(10.0,\n                    gfc.PSY.mask_adjust * 0.1);\n\n                init_outer_loop(gfc, cod_info);\n                if (0 != qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info,\n                        l3_xmin[gr][ch]))\n                    analog_silence = 0;\n\n                bits += max_bits[gr][ch];\n            }\n        }\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                if (bits > maximum_framebits) {\n                    max_bits[gr][ch] *= maximum_framebits;\n                    max_bits[gr][ch] /= bits;\n                }\n\n            }\n            /* for ch */\n        }\n        /* for gr */\n\n        return analog_silence;\n    };\n\n    /**\n     * calculates target bits for ABR encoding\n     *\n     * mt 2000/05/31\n     */\n    this.calc_target_bits = function (gfp, pe, ms_ener_ratio, targ_bits, analog_silence_bits, max_frame_bits) {\n        var gfc = gfp.internal_flags;\n        var l3_side = gfc.l3_side;\n        var res_factor;\n        var gr, ch, totbits, mean_bits = 0;\n\n        gfc.bitrate_index = gfc.VBR_max_bitrate;\n        var mb = new MeanBits(mean_bits);\n        max_frame_bits[0] = rv.ResvFrameBegin(gfp, mb);\n        mean_bits = mb.bits;\n\n        gfc.bitrate_index = 1;\n        mean_bits = bs.getframebits(gfp) - gfc.sideinfo_len * 8;\n        analog_silence_bits[0] = mean_bits / (gfc.mode_gr * gfc.channels_out);\n\n        mean_bits = gfp.VBR_mean_bitrate_kbps * gfp.framesize * 1000;\n        if ((gfc.substep_shaping & 1) != 0)\n            mean_bits *= 1.09;\n        mean_bits /= gfp.out_samplerate;\n        mean_bits -= gfc.sideinfo_len * 8;\n        mean_bits /= (gfc.mode_gr * gfc.channels_out);\n\n        /**\n         * <PRE>\n         *           res_factor is the percentage of the target bitrate that should\n         *           be used on average.  the remaining bits are added to the\n         *           bitreservoir and used for difficult to encode frames.\n         *\n         *           Since we are tracking the average bitrate, we should adjust\n         *           res_factor \"on the fly\", increasing it if the average bitrate\n         *           is greater than the requested bitrate, and decreasing it\n         *           otherwise.  Reasonable ranges are from .9 to 1.0\n         *\n         *           Until we get the above suggestion working, we use the following\n         *           tuning:\n         *           compression ratio    res_factor\n         *           5.5  (256kbps)         1.0      no need for bitreservoir\n         *           11   (128kbps)         .93      7% held for reservoir\n         *\n         *           with linear interpolation for other values.\n         * </PRE>\n         */\n        res_factor = .93 + .07 * (11.0 - gfp.compression_ratio)\n            / (11.0 - 5.5);\n        if (res_factor < .90)\n            res_factor = .90;\n        if (res_factor > 1.00)\n            res_factor = 1.00;\n\n        for (gr = 0; gr < gfc.mode_gr; gr++) {\n            var sum = 0;\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                targ_bits[gr][ch] = (int)(res_factor * mean_bits);\n\n                if (pe[gr][ch] > 700) {\n                    var add_bits = (int)((pe[gr][ch] - 700) / 1.4);\n\n                    var cod_info = l3_side.tt[gr][ch];\n                    targ_bits[gr][ch] = (int)(res_factor * mean_bits);\n\n                    /* short blocks use a little extra, no matter what the pe */\n                    if (cod_info.block_type == Encoder_1.SHORT_TYPE) {\n                        if (add_bits < mean_bits / 2)\n                            add_bits = mean_bits / 2;\n                    }\n                    /* at most increase bits by 1.5*average */\n                    if (add_bits > mean_bits * 3 / 2)\n                        add_bits = mean_bits * 3 / 2;\n                    else if (add_bits < 0)\n                        add_bits = 0;\n\n                    targ_bits[gr][ch] += add_bits;\n                }\n                if (targ_bits[gr][ch] > LameInternalFlags.MAX_BITS_PER_CHANNEL) {\n                    targ_bits[gr][ch] = LameInternalFlags.MAX_BITS_PER_CHANNEL;\n                }\n                sum += targ_bits[gr][ch];\n            }\n            /* for ch */\n            if (sum > LameInternalFlags.MAX_BITS_PER_GRANULE) {\n                for (ch = 0; ch < gfc.channels_out; ++ch) {\n                    targ_bits[gr][ch] *= LameInternalFlags.MAX_BITS_PER_GRANULE;\n                    targ_bits[gr][ch] /= sum;\n                }\n            }\n        }\n        /* for gr */\n\n        if (gfc.mode_ext == Encoder_1.MPG_MD_MS_LR)\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                qupvt.reduce_side(targ_bits[gr], ms_ener_ratio[gr], mean_bits\n                    * gfc.channels_out,\n                    LameInternalFlags.MAX_BITS_PER_GRANULE);\n            }\n\n        /*\n         * sum target bits\n         */\n        totbits = 0;\n        for (gr = 0; gr < gfc.mode_gr; gr++) {\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                if (targ_bits[gr][ch] > LameInternalFlags.MAX_BITS_PER_CHANNEL)\n                    targ_bits[gr][ch] = LameInternalFlags.MAX_BITS_PER_CHANNEL;\n                totbits += targ_bits[gr][ch];\n            }\n        }\n\n        /*\n         * repartion target bits if needed\n         */\n        if (totbits > max_frame_bits[0]) {\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    targ_bits[gr][ch] *= max_frame_bits[0];\n                    targ_bits[gr][ch] /= totbits;\n                }\n            }\n        }\n    };\n\n}\n\nvar Quantize_1 = Quantize$1;\n\n/*\n *      bit reservoir source file\n *\n *      Copyright (c) 1999-2000 Mark Taylor\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: Reservoir.java,v 1.9 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n/**\n * ResvFrameBegin:<BR>\n * Called (repeatedly) at the beginning of a frame. Updates the maximum size of\n * the reservoir, and checks to make sure main_data_begin was set properly by\n * the formatter<BR>\n * Background information:\n * \n * This is the original text from the ISO standard. Because of sooo many bugs\n * and irritations correcting comments are added in brackets []. A '^W' means\n * you should remove the last word.\n * \n * <PRE>\n *  1. The following rule can be used to calculate the maximum\n *     number of bits used for one granule [^W frame]:<BR>\n *     At the highest possible bitrate of Layer III (320 kbps\n *     per stereo signal [^W^W^W], 48 kHz) the frames must be of\n *     [^W^W^W are designed to have] constant length, i.e.\n *     one buffer [^W^W the frame] length is:<BR>\n * \n *         320 kbps * 1152/48 kHz = 7680 bit = 960 byte\n * \n *     This value is used as the maximum buffer per channel [^W^W] at\n *     lower bitrates [than 320 kbps]. At 64 kbps mono or 128 kbps\n *     stereo the main granule length is 64 kbps * 576/48 kHz = 768 bit\n *     [per granule and channel] at 48 kHz sampling frequency.\n *     This means that there is a maximum deviation (short time buffer\n *     [= reservoir]) of 7680 - 2*2*768 = 4608 bits is allowed at 64 kbps.\n *     The actual deviation is equal to the number of bytes [with the\n *     meaning of octets] denoted by the main_data_end offset pointer.\n *     The actual maximum deviation is (2^9-1)*8 bit = 4088 bits\n *     [for MPEG-1 and (2^8-1)*8 bit for MPEG-2, both are hard limits].\n *     ... The xchange of buffer bits between the left and right channel\n *     is allowed without restrictions [exception: dual channel].\n *     Because of the [constructed] constraint on the buffer size\n *     main_data_end is always set to 0 in the case of bit_rate_index==14,\n *     i.e. data rate 320 kbps per stereo signal [^W^W^W]. In this case\n *     all data are allocated between adjacent header [^W sync] words\n *     [, i.e. there is no buffering at all].\n * </PRE>\n */\n\n\nvar assert$23 = common.assert;\n\nfunction Reservoir$1() {\n\tvar bs;\n\n\tthis.setModules  = function(_bs) {\n\t\tbs = _bs;\n\t};\n\n\tthis.ResvFrameBegin = function(gfp, mean_bits) {\n\t\tvar gfc = gfp.internal_flags;\n\t\tvar maxmp3buf;\n\t\tvar l3_side = gfc.l3_side;\n\n\t\tvar frameLength = bs.getframebits(gfp);\n\t\tmean_bits.bits = (frameLength - gfc.sideinfo_len * 8) / gfc.mode_gr;\n\n\t\t/**\n\t\t * <PRE>\n\t\t *  Meaning of the variables:\n\t\t *      resvLimit: (0, 8, ..., 8*255 (MPEG-2), 8*511 (MPEG-1))\n\t\t *          Number of bits can be stored in previous frame(s) due to\n\t\t *          counter size constaints\n\t\t *      maxmp3buf: ( ??? ... 8*1951 (MPEG-1 and 2), 8*2047 (MPEG-2.5))\n\t\t *          Number of bits allowed to encode one frame (you can take 8*511 bit\n\t\t *          from the bit reservoir and at most 8*1440 bit from the current\n\t\t *          frame (320 kbps, 32 kHz), so 8*1951 bit is the largest possible\n\t\t *          value for MPEG-1 and -2)\n\t\t * \n\t\t *          maximum allowed granule/channel size times 4 = 8*2047 bits.,\n\t\t *          so this is the absolute maximum supported by the format.\n\t\t * \n\t\t * \n\t\t *      fullFrameBits:  maximum number of bits available for encoding\n\t\t *                      the current frame.\n\t\t * \n\t\t *      mean_bits:      target number of bits per granule.\n\t\t * \n\t\t *      frameLength:\n\t\t * \n\t\t *      gfc.ResvMax:   maximum allowed reservoir\n\t\t * \n\t\t *      gfc.ResvSize:  current reservoir size\n\t\t * \n\t\t *      l3_side.resvDrain_pre:\n\t\t *         ancillary data to be added to previous frame:\n\t\t *         (only usefull in VBR modes if it is possible to have\n\t\t *         maxmp3buf < fullFrameBits)).  Currently disabled,\n\t\t *         see #define NEW_DRAIN\n\t\t *         2010-02-13: RH now enabled, it seems to be needed for CBR too,\n\t\t *                     as there exists one example, where the FhG decoder\n\t\t *                     can't decode a -b320 CBR file anymore.\n\t\t * \n\t\t *      l3_side.resvDrain_post:\n\t\t *         ancillary data to be added to this frame:\n\t\t * \n\t\t * </PRE>\n\t\t */\n\n\t\t/* main_data_begin has 9 bits in MPEG-1, 8 bits MPEG-2 */\n\t\tvar resvLimit = (8 * 256) * gfc.mode_gr - 8;\n\n\t\t/*\n\t\t * maximum allowed frame size. dont use more than this number of bits,\n\t\t * even if the frame has the space for them:\n\t\t */\n\t\tif (gfp.brate > 320) {\n\t\t\t/* in freeformat the buffer is constant */\n\t\t\tmaxmp3buf = 8 * ((int) ((gfp.brate * 1000)\n\t\t\t\t\t/ (gfp.out_samplerate / 1152) / 8 + .5));\n\t\t} else {\n\t\t\t/*\n\t\t\t * all mp3 decoders should have enough buffer to handle this value:\n\t\t\t * size of a 320kbps 32kHz frame\n\t\t\t */\n\t\t\tmaxmp3buf = 8 * 1440;\n\n\t\t\t/*\n\t\t\t * Bouvigne suggests this more lax interpretation of the ISO doc\n\t\t\t * instead of using 8*960.\n\t\t\t */\n\n\t\t\tif (gfp.strict_ISO) {\n\t\t\t\tmaxmp3buf = 8 * ((int) (320000 / (gfp.out_samplerate / 1152) / 8 + .5));\n\t\t\t}\n\t\t}\n\n\t\tgfc.ResvMax = maxmp3buf - frameLength;\n\t\tif (gfc.ResvMax > resvLimit)\n\t\t\tgfc.ResvMax = resvLimit;\n\t\tif (gfc.ResvMax < 0 || gfp.disable_reservoir)\n\t\t\tgfc.ResvMax = 0;\n\n\t\tvar fullFrameBits = mean_bits.bits * gfc.mode_gr\n\t\t\t\t+ Math.min(gfc.ResvSize, gfc.ResvMax);\n\n\t\tif (fullFrameBits > maxmp3buf)\n\t\t\tfullFrameBits = maxmp3buf;\n\n\t\tassert$23 (0 == gfc.ResvMax % 8);\n\t\tassert$23 (gfc.ResvMax >= 0);\n\n\t\tl3_side.resvDrain_pre = 0;\n\n\t\t// frame analyzer code\n\t\tif (gfc.pinfo != null) {\n\t\t\t/*\n\t\t\t * expected bits per channel per granule [is this also right for\n\t\t\t * mono/stereo, MPEG-1/2 ?]\n\t\t\t */\n\t\t\tgfc.pinfo.mean_bits = mean_bits.bits / 2;\n\t\t\tgfc.pinfo.resvsize = gfc.ResvSize;\n\t\t}\n\n\t\treturn fullFrameBits;\n\t};\n\n\t/**\n\t * returns targ_bits: target number of bits to use for 1 granule<BR>\n\t * extra_bits: amount extra available from reservoir<BR>\n\t * Mark Taylor 4/99\n\t */\n\tthis.ResvMaxBits = function(gfp, mean_bits, targ_bits, cbr) {\n\t\tvar gfc = gfp.internal_flags;\n\t\tvar add_bits;\n        var ResvSize = gfc.ResvSize, ResvMax = gfc.ResvMax;\n\n\t\t/* compensate the saved bits used in the 1st granule */\n\t\tif (cbr != 0)\n\t\t\tResvSize += mean_bits;\n\n\t\tif ((gfc.substep_shaping & 1) != 0)\n\t\t\tResvMax *= 0.9;\n\n\t\ttarg_bits.bits = mean_bits;\n\n\t\t/* extra bits if the reservoir is almost full */\n\t\tif (ResvSize * 10 > ResvMax * 9) {\n\t\t\tadd_bits = ResvSize - (ResvMax * 9) / 10;\n\t\t\ttarg_bits.bits += add_bits;\n\t\t\tgfc.substep_shaping |= 0x80;\n\t\t} else {\n\t\t\tadd_bits = 0;\n\t\t\tgfc.substep_shaping &= 0x7f;\n\t\t\t/*\n\t\t\t * build up reservoir. this builds the reservoir a little slower\n\t\t\t * than FhG. It could simple be mean_bits/15, but this was rigged to\n\t\t\t * always produce 100 (the old value) at 128kbs\n\t\t\t */\n\t\t\tif (!gfp.disable_reservoir && 0 == (gfc.substep_shaping & 1))\n\t\t\t\ttarg_bits.bits -= .1 * mean_bits;\n\t\t}\n\n\t\t/* amount from the reservoir we are allowed to use. ISO says 6/10 */\n\t\tvar extra_bits = (ResvSize < (gfc.ResvMax * 6) / 10 ? ResvSize\n\t\t\t\t: (gfc.ResvMax * 6) / 10);\n\t\textra_bits -= add_bits;\n\n\t\tif (extra_bits < 0)\n\t\t\textra_bits = 0;\n\t\treturn extra_bits;\n\t};\n\n\t/**\n\t * Called after a granule's bit allocation. Readjusts the size of the\n\t * reservoir to reflect the granule's usage.\n\t */\n\tthis.ResvAdjust = function(gfc, gi) {\n\t\tgfc.ResvSize -= gi.part2_3_length + gi.part2_length;\n\t};\n\n\t/**\n\t * Called after all granules in a frame have been allocated. Makes sure that\n\t * the reservoir size is within limits, possibly by adding stuffing bits.\n\t */\n\tthis.ResvFrameEnd = function(gfc, mean_bits) {\n\t\tvar over_bits;\n\t\tvar l3_side = gfc.l3_side;\n\n\t\tgfc.ResvSize += mean_bits * gfc.mode_gr;\n\t\tvar stuffingBits = 0;\n\t\tl3_side.resvDrain_post = 0;\n\t\tl3_side.resvDrain_pre = 0;\n\n\t\t/* we must be byte aligned */\n\t\tif ((over_bits = gfc.ResvSize % 8) != 0)\n\t\t\tstuffingBits += over_bits;\n\n\t\tover_bits = (gfc.ResvSize - stuffingBits) - gfc.ResvMax;\n\t\tif (over_bits > 0) {\n\t\t\tassert$23 (0 == over_bits % 8);\n\t\t\tassert$23 (over_bits >= 0);\n\t\t\tstuffingBits += over_bits;\n\t\t}\n\n\t\t/*\n\t\t * NOTE: enabling the NEW_DRAIN code fixes some problems with FhG\n\t\t * decoder shipped with MS Windows operating systems. Using this, it is\n\t\t * even possible to use Gabriel's lax buffer consideration again, which\n\t\t * assumes, any decoder should have a buffer large enough for a 320 kbps\n\t\t * frame at 32 kHz sample rate.\n\t\t * \n\t\t * old drain code: lame -b320 BlackBird.wav --. does not play with\n\t\t * GraphEdit.exe using FhG decoder V1.5 Build 50\n\t\t * \n\t\t * new drain code: lame -b320 BlackBird.wav --. plays fine with\n\t\t * GraphEdit.exe using FhG decoder V1.5 Build 50\n\t\t * \n\t\t * Robert Hegemann, 2010-02-13.\n\t\t */\n\t\t/*\n\t\t * drain as many bits as possible into previous frame ancillary data In\n\t\t * particular, in VBR mode ResvMax may have changed, and we have to make\n\t\t * sure main_data_begin does not create a reservoir bigger than ResvMax\n\t\t * mt 4/00\n\t\t */\n\t\t{\n\t\t\tvar mdb_bytes = Math.min(l3_side.main_data_begin * 8, stuffingBits) / 8;\n\t\t\tl3_side.resvDrain_pre += 8 * mdb_bytes;\n\t\t\tstuffingBits -= 8 * mdb_bytes;\n\t\t\tgfc.ResvSize -= 8 * mdb_bytes;\n\t\t\tl3_side.main_data_begin -= mdb_bytes;\n\t\t}\n\t\t/* drain the rest into this frames ancillary data */\n\t\tl3_side.resvDrain_post += stuffingBits;\n\t\tgfc.ResvSize -= stuffingBits;\n\t};\n}\n\nvar Reservoir_1 = Reservoir$1;\n\nfunction Version() {\n\n    /**\n     * URL for the LAME website.\n     */\n    var LAME_URL = \"http://www.mp3dev.org/\";\n\n    /**\n     * Major version number.\n     */\n    var LAME_MAJOR_VERSION = 3;\n    /**\n     * Minor version number.\n     */\n    var LAME_MINOR_VERSION = 98;\n    /**\n     * Patch level.\n     */\n    var LAME_PATCH_VERSION = 4;\n\n    /**\n     * Major version number.\n     */\n    var PSY_MAJOR_VERSION = 0;\n    /**\n     * Minor version number.\n     */\n    var PSY_MINOR_VERSION = 93;\n\n    /**\n     * A string which describes the version of LAME.\n     *\n     * @return string which describes the version of LAME\n     */\n    this.getLameVersion = function () {\n        // primary to write screen reports\n        return (LAME_MAJOR_VERSION + \".\" + LAME_MINOR_VERSION + \".\" + LAME_PATCH_VERSION);\n    };\n\n    /**\n     * The short version of the LAME version string.\n     *\n     * @return short version of the LAME version string\n     */\n    this.getLameShortVersion = function () {\n        // Adding date and time to version string makes it harder for output\n        // validation\n        return (LAME_MAJOR_VERSION + \".\" + LAME_MINOR_VERSION + \".\" + LAME_PATCH_VERSION);\n    };\n\n    /**\n     * The shortest version of the LAME version string.\n     *\n     * @return shortest version of the LAME version string\n     */\n    this.getLameVeryShortVersion = function () {\n        // Adding date and time to version string makes it harder for output\n        return (\"LAME\" + LAME_MAJOR_VERSION + \".\" + LAME_MINOR_VERSION + \"r\");\n    };\n\n    /**\n     * String which describes the version of GPSYCHO\n     *\n     * @return string which describes the version of GPSYCHO\n     */\n    this.getPsyVersion = function () {\n        return (PSY_MAJOR_VERSION + \".\" + PSY_MINOR_VERSION);\n    };\n\n    /**\n     * String which is a URL for the LAME website.\n     *\n     * @return string which is a URL for the LAME website\n     */\n    this.getLameUrl = function () {\n        return LAME_URL;\n    };\n\n    /**\n     * Quite useless for a java version, however we are compatible ;-)\n     *\n     * @return \"32bits\"\n     */\n    this.getLameOsBitness = function () {\n        return \"32bits\";\n    };\n\n}\n\nvar Version_1 = Version;\n\nvar System$22 = common.System;\nvar VbrMode$22 = common.VbrMode;\nvar ShortBlock$22 = common.ShortBlock;\nvar Arrays$22 = common.Arrays;\nvar new_byte$22 = common.new_byte;\nvar assert$24 = common.assert;\n\n/**\n * A Vbr header may be present in the ancillary data field of the first frame of\n * an mp3 bitstream<BR>\n * The Vbr header (optionally) contains\n * <UL>\n * <LI>frames total number of audio frames in the bitstream\n * <LI>bytes total number of bytes in the bitstream\n * <LI>toc table of contents\n * </UL>\n *\n * toc (table of contents) gives seek points for random access.<BR>\n * The ith entry determines the seek point for i-percent duration.<BR>\n * seek point in bytes = (toc[i]/256.0) * total_bitstream_bytes<BR>\n * e.g. half duration seek point = (toc[50]/256.0) * total_bitstream_bytes\n */\nVBRTag.NUMTOCENTRIES = 100;\nVBRTag.MAXFRAMESIZE = 2880;\n\nfunction VBRTag() {\n\n    var lame;\n    var bs;\n    var v;\n\n    this.setModules = function (_lame, _bs, _v) {\n        lame = _lame;\n        bs = _bs;\n        v = _v;\n    };\n\n    var FRAMES_FLAG = 0x0001;\n    var BYTES_FLAG = 0x0002;\n    var TOC_FLAG = 0x0004;\n    var VBR_SCALE_FLAG = 0x0008;\n\n    var NUMTOCENTRIES = VBRTag.NUMTOCENTRIES;\n\n    /**\n     * (0xB40) the max freeformat 640 32kHz framesize.\n     */\n    var MAXFRAMESIZE = VBRTag.MAXFRAMESIZE;\n\n    /**\n     * <PRE>\n     *    4 bytes for Header Tag\n     *    4 bytes for Header Flags\n     *  100 bytes for entry (toc)\n     *    4 bytes for frame size\n     *    4 bytes for stream size\n     *    4 bytes for VBR scale. a VBR quality indicator: 0=best 100=worst\n     *   20 bytes for LAME tag.  for example, \"LAME3.12 (beta 6)\"\n     * ___________\n     *  140 bytes\n     * </PRE>\n     */\n    var VBRHEADERSIZE = (NUMTOCENTRIES + 4 + 4 + 4 + 4 + 4);\n\n    var LAMEHEADERSIZE = (VBRHEADERSIZE + 9 + 1 + 1 + 8\n    + 1 + 1 + 3 + 1 + 1 + 2 + 4 + 2 + 2);\n\n    /**\n     * The size of the Xing header MPEG-1, bit rate in kbps.\n     */\n    var XING_BITRATE1 = 128;\n    /**\n     * The size of the Xing header MPEG-2, bit rate in kbps.\n     */\n    var XING_BITRATE2 = 64;\n    /**\n     * The size of the Xing header MPEG-2.5, bit rate in kbps.\n     */\n    var XING_BITRATE25 = 32;\n\n    /**\n     * ISO-8859-1 charset for byte to string operations.\n     */\n    var ISO_8859_1 = null; //Charset.forName(\"ISO-8859-1\");\n\n    /**\n     * VBR header magic string.\n     */\n    var VBRTag0 = \"Xing\";\n    /**\n     * VBR header magic string (VBR == VBRMode.vbr_off).\n     */\n    var VBRTag1 = \"Info\";\n\n    /**\n     * Lookup table for fast CRC-16 computation. Uses the polynomial\n     * x^16+x^15+x^2+1\n     */\n    var crc16Lookup = [0x0000, 0xC0C1, 0xC181, 0x0140,\n        0xC301, 0x03C0, 0x0280, 0xC241, 0xC601, 0x06C0, 0x0780, 0xC741,\n        0x0500, 0xC5C1, 0xC481, 0x0440, 0xCC01, 0x0CC0, 0x0D80, 0xCD41,\n        0x0F00, 0xCFC1, 0xCE81, 0x0E40, 0x0A00, 0xCAC1, 0xCB81, 0x0B40,\n        0xC901, 0x09C0, 0x0880, 0xC841, 0xD801, 0x18C0, 0x1980, 0xD941,\n        0x1B00, 0xDBC1, 0xDA81, 0x1A40, 0x1E00, 0xDEC1, 0xDF81, 0x1F40,\n        0xDD01, 0x1DC0, 0x1C80, 0xDC41, 0x1400, 0xD4C1, 0xD581, 0x1540,\n        0xD701, 0x17C0, 0x1680, 0xD641, 0xD201, 0x12C0, 0x1380, 0xD341,\n        0x1100, 0xD1C1, 0xD081, 0x1040, 0xF001, 0x30C0, 0x3180, 0xF141,\n        0x3300, 0xF3C1, 0xF281, 0x3240, 0x3600, 0xF6C1, 0xF781, 0x3740,\n        0xF501, 0x35C0, 0x3480, 0xF441, 0x3C00, 0xFCC1, 0xFD81, 0x3D40,\n        0xFF01, 0x3FC0, 0x3E80, 0xFE41, 0xFA01, 0x3AC0, 0x3B80, 0xFB41,\n        0x3900, 0xF9C1, 0xF881, 0x3840, 0x2800, 0xE8C1, 0xE981, 0x2940,\n        0xEB01, 0x2BC0, 0x2A80, 0xEA41, 0xEE01, 0x2EC0, 0x2F80, 0xEF41,\n        0x2D00, 0xEDC1, 0xEC81, 0x2C40, 0xE401, 0x24C0, 0x2580, 0xE541,\n        0x2700, 0xE7C1, 0xE681, 0x2640, 0x2200, 0xE2C1, 0xE381, 0x2340,\n        0xE101, 0x21C0, 0x2080, 0xE041, 0xA001, 0x60C0, 0x6180, 0xA141,\n        0x6300, 0xA3C1, 0xA281, 0x6240, 0x6600, 0xA6C1, 0xA781, 0x6740,\n        0xA501, 0x65C0, 0x6480, 0xA441, 0x6C00, 0xACC1, 0xAD81, 0x6D40,\n        0xAF01, 0x6FC0, 0x6E80, 0xAE41, 0xAA01, 0x6AC0, 0x6B80, 0xAB41,\n        0x6900, 0xA9C1, 0xA881, 0x6840, 0x7800, 0xB8C1, 0xB981, 0x7940,\n        0xBB01, 0x7BC0, 0x7A80, 0xBA41, 0xBE01, 0x7EC0, 0x7F80, 0xBF41,\n        0x7D00, 0xBDC1, 0xBC81, 0x7C40, 0xB401, 0x74C0, 0x7580, 0xB541,\n        0x7700, 0xB7C1, 0xB681, 0x7640, 0x7200, 0xB2C1, 0xB381, 0x7340,\n        0xB101, 0x71C0, 0x7080, 0xB041, 0x5000, 0x90C1, 0x9181, 0x5140,\n        0x9301, 0x53C0, 0x5280, 0x9241, 0x9601, 0x56C0, 0x5780, 0x9741,\n        0x5500, 0x95C1, 0x9481, 0x5440, 0x9C01, 0x5CC0, 0x5D80, 0x9D41,\n        0x5F00, 0x9FC1, 0x9E81, 0x5E40, 0x5A00, 0x9AC1, 0x9B81, 0x5B40,\n        0x9901, 0x59C0, 0x5880, 0x9841, 0x8801, 0x48C0, 0x4980, 0x8941,\n        0x4B00, 0x8BC1, 0x8A81, 0x4A40, 0x4E00, 0x8EC1, 0x8F81, 0x4F40,\n        0x8D01, 0x4DC0, 0x4C80, 0x8C41, 0x4400, 0x84C1, 0x8581, 0x4540,\n        0x8701, 0x47C0, 0x4680, 0x8641, 0x8201, 0x42C0, 0x4380, 0x8341,\n        0x4100, 0x81C1, 0x8081, 0x4040];\n\n    /***********************************************************************\n     * Robert Hegemann 2001-01-17\n     ***********************************************************************/\n\n    function addVbr(v, bitrate) {\n        v.nVbrNumFrames++;\n        v.sum += bitrate;\n        v.seen++;\n\n        if (v.seen < v.want) {\n            return;\n        }\n\n        if (v.pos < v.size) {\n            v.bag[v.pos] = v.sum;\n            v.pos++;\n            v.seen = 0;\n        }\n        if (v.pos == v.size) {\n            for (var i = 1; i < v.size; i += 2) {\n                v.bag[i / 2] = v.bag[i];\n            }\n            v.want *= 2;\n            v.pos /= 2;\n        }\n    }\n\n    function xingSeekTable(v, t) {\n        if (v.pos <= 0)\n            return;\n\n        for (var i = 1; i < NUMTOCENTRIES; ++i) {\n            var j = i / NUMTOCENTRIES, act, sum;\n            var indx = 0 | (Math.floor(j * v.pos));\n            if (indx > v.pos - 1)\n                indx = v.pos - 1;\n            act = v.bag[indx];\n            sum = v.sum;\n            var seek_point = 0 | (256. * act / sum);\n            if (seek_point > 255)\n                seek_point = 255;\n            t[i] = 0xff & seek_point;\n        }\n    }\n\n    /**\n     * Add VBR entry, used to fill the VBR TOC entries.\n     *\n     * @param gfp\n     *            global flags\n     */\n    this.addVbrFrame = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var kbps = Tables.bitrate_table[gfp.version][gfc.bitrate_index];\n        assert$24(gfc.VBR_seek_table.bag != null);\n        addVbr(gfc.VBR_seek_table, kbps);\n    };\n\n    /**\n     * Read big endian integer (4-bytes) from header.\n     *\n     * @param buf\n     *            header containing the integer\n     * @param bufPos\n     *            offset into the header\n     * @return extracted integer\n     */\n    function extractInteger(buf, bufPos) {\n        var x = buf[bufPos + 0] & 0xff;\n        x <<= 8;\n        x |= buf[bufPos + 1] & 0xff;\n        x <<= 8;\n        x |= buf[bufPos + 2] & 0xff;\n        x <<= 8;\n        x |= buf[bufPos + 3] & 0xff;\n        return x;\n    }\n\n    /**\n     * Write big endian integer (4-bytes) in the header.\n     *\n     * @param buf\n     *            header to write the integer into\n     * @param bufPos\n     *            offset into the header\n     * @param value\n     *            integer value to write\n     */\n    function createInteger(buf, bufPos, value) {\n        buf[bufPos + 0] = 0xff & ((value >> 24) & 0xff);\n        buf[bufPos + 1] = 0xff & ((value >> 16) & 0xff);\n        buf[bufPos + 2] = 0xff & ((value >> 8) & 0xff);\n        buf[bufPos + 3] = 0xff & (value & 0xff);\n    }\n\n    /**\n     * Write big endian short (2-bytes) in the header.\n     *\n     * @param buf\n     *            header to write the integer into\n     * @param bufPos\n     *            offset into the header\n     * @param value\n     *            integer value to write\n     */\n    function createShort(buf, bufPos, value) {\n        buf[bufPos + 0] = 0xff & ((value >> 8) & 0xff);\n        buf[bufPos + 1] = 0xff & (value & 0xff);\n    }\n\n    /**\n     * Check for magic strings (Xing/Info).\n     *\n     * @param buf\n     *            header to check\n     * @param bufPos\n     *            header offset to check\n     * @return magic string found\n     */\n    function isVbrTag(buf, bufPos) {\n        return new String(buf, bufPos, VBRTag0.length(), ISO_8859_1)\n                .equals(VBRTag0)\n            || new String(buf, bufPos, VBRTag1.length(), ISO_8859_1)\n                .equals(VBRTag1);\n    }\n\n    function shiftInBitsValue(x, n, v) {\n        return 0xff & ((x << n) | (v & ~(-1 << n)));\n    }\n\n    /**\n     * Construct the MP3 header using the settings of the global flags.\n     *\n     * <img src=\"1000px-Mp3filestructure.svg.png\">\n     *\n     * @param gfp\n     *            global flags\n     * @param buffer\n     *            header\n     */\n    function setLameTagFrameHeader(gfp, buffer) {\n        var gfc = gfp.internal_flags;\n\n        // MP3 Sync Word\n        buffer[0] = shiftInBitsValue(buffer[0], 8, 0xff);\n\n        buffer[1] = shiftInBitsValue(buffer[1], 3, 7);\n        buffer[1] = shiftInBitsValue(buffer[1], 1,\n            (gfp.out_samplerate < 16000) ? 0 : 1);\n        // Version\n        buffer[1] = shiftInBitsValue(buffer[1], 1, gfp.version);\n        // 01 == Layer 3\n        buffer[1] = shiftInBitsValue(buffer[1], 2, 4 - 3);\n        // Error protection\n        buffer[1] = shiftInBitsValue(buffer[1], 1, (!gfp.error_protection) ? 1\n            : 0);\n\n        // Bit rate\n        buffer[2] = shiftInBitsValue(buffer[2], 4, gfc.bitrate_index);\n        // Frequency\n        buffer[2] = shiftInBitsValue(buffer[2], 2, gfc.samplerate_index);\n        // Pad. Bit\n        buffer[2] = shiftInBitsValue(buffer[2], 1, 0);\n        // Priv. Bit\n        buffer[2] = shiftInBitsValue(buffer[2], 1, gfp.extension);\n\n        // Mode\n        buffer[3] = shiftInBitsValue(buffer[3], 2, gfp.mode.ordinal());\n        // Mode extension (Used with Joint Stereo)\n        buffer[3] = shiftInBitsValue(buffer[3], 2, gfc.mode_ext);\n        // Copy\n        buffer[3] = shiftInBitsValue(buffer[3], 1, gfp.copyright);\n        // Original\n        buffer[3] = shiftInBitsValue(buffer[3], 1, gfp.original);\n        // Emphasis\n        buffer[3] = shiftInBitsValue(buffer[3], 2, gfp.emphasis);\n\n        /* the default VBR header. 48 kbps layer III, no padding, no crc */\n        /* but sampling freq, mode and copyright/copy protection taken */\n        /* from first valid frame */\n        buffer[0] = 0xff;\n        var abyte = 0xff & (buffer[1] & 0xf1);\n        var bitrate;\n        if (1 == gfp.version) {\n            bitrate = XING_BITRATE1;\n        } else {\n            if (gfp.out_samplerate < 16000)\n                bitrate = XING_BITRATE25;\n            else\n                bitrate = XING_BITRATE2;\n        }\n\n        if (gfp.VBR == VbrMode$22.vbr_off)\n            bitrate = gfp.brate;\n\n        var bbyte;\n        if (gfp.free_format)\n            bbyte = 0x00;\n        else\n            bbyte = 0xff & (16 * lame.BitrateIndex(bitrate, gfp.version,\n                    gfp.out_samplerate));\n\n        /*\n         * Use as much of the info from the real frames in the Xing header:\n         * samplerate, channels, crc, etc...\n         */\n        if (gfp.version == 1) {\n            /* MPEG1 */\n            buffer[1] = 0xff & (abyte | 0x0a);\n            /* was 0x0b; */\n            abyte = 0xff & (buffer[2] & 0x0d);\n            /* AF keep also private bit */\n            buffer[2] = 0xff & (bbyte | abyte);\n            /* 64kbs MPEG1 frame */\n        } else {\n            /* MPEG2 */\n            buffer[1] = 0xff & (abyte | 0x02);\n            /* was 0x03; */\n            abyte = 0xff & (buffer[2] & 0x0d);\n            /* AF keep also private bit */\n            buffer[2] = 0xff & (bbyte | abyte);\n            /* 64kbs MPEG2 frame */\n        }\n    }\n\n    /**\n     * Get VBR tag information\n     *\n     * @param buf\n     *            header to analyze\n     * @param bufPos\n     *            offset into the header\n     * @return VBR tag data\n     */\n    this.getVbrTag = function (buf) {\n        var pTagData = new VBRTagData();\n        var bufPos = 0;\n\n        /* get Vbr header data */\n        pTagData.flags = 0;\n\n        /* get selected MPEG header data */\n        var hId = (buf[bufPos + 1] >> 3) & 1;\n        var hSrIndex = (buf[bufPos + 2] >> 2) & 3;\n        var hMode = (buf[bufPos + 3] >> 6) & 3;\n        var hBitrate = ((buf[bufPos + 2] >> 4) & 0xf);\n        hBitrate = Tables.bitrate_table[hId][hBitrate];\n\n        /* check for FFE syncword */\n        if ((buf[bufPos + 1] >> 4) == 0xE)\n            pTagData.samprate = Tables.samplerate_table[2][hSrIndex];\n        else\n            pTagData.samprate = Tables.samplerate_table[hId][hSrIndex];\n\n        /* determine offset of header */\n        if (hId != 0) {\n            /* mpeg1 */\n            if (hMode != 3)\n                bufPos += (32 + 4);\n            else\n                bufPos += (17 + 4);\n        } else {\n            /* mpeg2 */\n            if (hMode != 3)\n                bufPos += (17 + 4);\n            else\n                bufPos += (9 + 4);\n        }\n\n        if (!isVbrTag(buf, bufPos))\n            return null;\n\n        bufPos += 4;\n\n        pTagData.hId = hId;\n\n        /* get flags */\n        var head_flags = pTagData.flags = extractInteger(buf, bufPos);\n        bufPos += 4;\n\n        if ((head_flags & FRAMES_FLAG) != 0) {\n            pTagData.frames = extractInteger(buf, bufPos);\n            bufPos += 4;\n        }\n\n        if ((head_flags & BYTES_FLAG) != 0) {\n            pTagData.bytes = extractInteger(buf, bufPos);\n            bufPos += 4;\n        }\n\n        if ((head_flags & TOC_FLAG) != 0) {\n            if (pTagData.toc != null) {\n                for (var i = 0; i < NUMTOCENTRIES; i++)\n                    pTagData.toc[i] = buf[bufPos + i];\n            }\n            bufPos += NUMTOCENTRIES;\n        }\n\n        pTagData.vbrScale = -1;\n\n        if ((head_flags & VBR_SCALE_FLAG) != 0) {\n            pTagData.vbrScale = extractInteger(buf, bufPos);\n            bufPos += 4;\n        }\n\n        pTagData.headersize = ((hId + 1) * 72000 * hBitrate)\n            / pTagData.samprate;\n\n        bufPos += 21;\n        var encDelay = buf[bufPos + 0] << 4;\n        encDelay += buf[bufPos + 1] >> 4;\n        var encPadding = (buf[bufPos + 1] & 0x0F) << 8;\n        encPadding += buf[bufPos + 2] & 0xff;\n        /* check for reasonable values (this may be an old Xing header, */\n        /* not a INFO tag) */\n        if (encDelay < 0 || encDelay > 3000)\n            encDelay = -1;\n        if (encPadding < 0 || encPadding > 3000)\n            encPadding = -1;\n\n        pTagData.encDelay = encDelay;\n        pTagData.encPadding = encPadding;\n\n        /* success */\n        return pTagData;\n    };\n\n    /**\n     * Initializes the header\n     *\n     * @param gfp\n     *            global flags\n     */\n    this.InitVbrTag = function (gfp) {\n        var gfc = gfp.internal_flags;\n\n        /**\n         * <PRE>\n         * Xing VBR pretends to be a 48kbs layer III frame.  (at 44.1kHz).\n         * (at 48kHz they use 56kbs since 48kbs frame not big enough for\n         * table of contents)\n         * let's always embed Xing header inside a 64kbs layer III frame.\n         * this gives us enough room for a LAME version string too.\n         * size determined by sampling frequency (MPEG1)\n         * 32kHz:    216 bytes@48kbs    288bytes@ 64kbs\n         * 44.1kHz:  156 bytes          208bytes@64kbs     (+1 if padding = 1)\n         * 48kHz:    144 bytes          192\n         *\n         * MPEG 2 values are the same since the framesize and samplerate\n         * are each reduced by a factor of 2.\n         * </PRE>\n         */\n        var kbps_header;\n        if (1 == gfp.version) {\n            kbps_header = XING_BITRATE1;\n        } else {\n            if (gfp.out_samplerate < 16000)\n                kbps_header = XING_BITRATE25;\n            else\n                kbps_header = XING_BITRATE2;\n        }\n\n        if (gfp.VBR == VbrMode$22.vbr_off)\n            kbps_header = gfp.brate;\n\n        // make sure LAME Header fits into Frame\n        var totalFrameSize = ((gfp.version + 1) * 72000 * kbps_header)\n            / gfp.out_samplerate;\n        var headerSize = (gfc.sideinfo_len + LAMEHEADERSIZE);\n        gfc.VBR_seek_table.TotalFrameSize = totalFrameSize;\n        if (totalFrameSize < headerSize || totalFrameSize > MAXFRAMESIZE) {\n            /* disable tag, it wont fit */\n            gfp.bWriteVbrTag = false;\n            return;\n        }\n\n        gfc.VBR_seek_table.nVbrNumFrames = 0;\n        gfc.VBR_seek_table.nBytesWritten = 0;\n        gfc.VBR_seek_table.sum = 0;\n\n        gfc.VBR_seek_table.seen = 0;\n        gfc.VBR_seek_table.want = 1;\n        gfc.VBR_seek_table.pos = 0;\n\n        if (gfc.VBR_seek_table.bag == null) {\n            gfc.VBR_seek_table.bag = new int[400];\n            gfc.VBR_seek_table.size = 400;\n        }\n\n        // write dummy VBR tag of all 0's into bitstream\n        var buffer = new_byte$22(MAXFRAMESIZE);\n\n        setLameTagFrameHeader(gfp, buffer);\n        var n = gfc.VBR_seek_table.TotalFrameSize;\n        for (var i = 0; i < n; ++i) {\n            bs.add_dummy_byte(gfp, buffer[i] & 0xff, 1);\n        }\n    };\n\n    /**\n     * Fast CRC-16 computation (uses table crc16Lookup).\n     *\n     * @param value\n     * @param crc\n     * @return\n     */\n    function crcUpdateLookup(value, crc) {\n        var tmp = crc ^ value;\n        crc = (crc >> 8) ^ crc16Lookup[tmp & 0xff];\n        return crc;\n    }\n\n    this.updateMusicCRC = function (crc, buffer, bufferPos, size) {\n        for (var i = 0; i < size; ++i)\n            crc[0] = crcUpdateLookup(buffer[bufferPos + i], crc[0]);\n    };\n\n    /**\n     * Write LAME info: mini version + info on various switches used (Jonathan\n     * Dee 2001/08/31).\n     *\n     * @param gfp\n     *            global flags\n     * @param musicLength\n     *            music length\n     * @param streamBuffer\n     *            pointer to output buffer\n     * @param streamBufferPos\n     *            offset into the output buffer\n     * @param crc\n     *            computation of CRC-16 of Lame Tag so far (starting at frame\n     *            sync)\n     * @return number of bytes written to the stream\n     */\n    function putLameVBR(gfp, musicLength, streamBuffer, streamBufferPos, crc) {\n        var gfc = gfp.internal_flags;\n        var bytesWritten = 0;\n\n        /* encoder delay */\n        var encDelay = gfp.encoder_delay;\n        /* encoder padding */\n        var encPadding = gfp.encoder_padding;\n\n        /* recall: gfp.VBR_q is for example set by the switch -V */\n        /* gfp.quality by -q, -h, -f, etc */\n        var quality = (100 - 10 * gfp.VBR_q - gfp.quality);\n\n        var version = v.getLameVeryShortVersion();\n        var vbr;\n        var revision = 0x00;\n        var revMethod;\n        // numbering different in vbr_mode vs. Lame tag\n        var vbrTypeTranslator = [1, 5, 3, 2, 4, 0, 3];\n        var lowpass = 0 | (((gfp.lowpassfreq / 100.0) + .5) > 255 ? 255\n                : (gfp.lowpassfreq / 100.0) + .5);\n        var peakSignalAmplitude = 0;\n        var radioReplayGain = 0;\n        var audiophileReplayGain = 0;\n        var noiseShaping = gfp.internal_flags.noise_shaping;\n        var stereoMode = 0;\n        var nonOptimal = 0;\n        var sourceFreq = 0;\n        var misc = 0;\n        var musicCRC = 0;\n\n        // psy model type: Gpsycho or NsPsytune\n        var expNPsyTune = (gfp.exp_nspsytune & 1) != 0;\n        var safeJoint = (gfp.exp_nspsytune & 2) != 0;\n        var noGapMore = false;\n        var noGapPrevious = false;\n        var noGapCount = gfp.internal_flags.nogap_total;\n        var noGapCurr = gfp.internal_flags.nogap_current;\n\n        // 4 bits\n        var athType = gfp.ATHtype;\n        var flags = 0;\n\n        // vbr modes\n        var abrBitrate;\n        switch (gfp.VBR) {\n            case vbr_abr:\n                abrBitrate = gfp.VBR_mean_bitrate_kbps;\n                break;\n            case vbr_off:\n                abrBitrate = gfp.brate;\n                break;\n            default:\n                abrBitrate = gfp.VBR_min_bitrate_kbps;\n        }\n\n        // revision and vbr method\n        if (gfp.VBR.ordinal() < vbrTypeTranslator.length)\n            vbr = vbrTypeTranslator[gfp.VBR.ordinal()];\n        else\n            vbr = 0x00; // unknown\n\n        revMethod = 0x10 * revision + vbr;\n\n        // ReplayGain\n        if (gfc.findReplayGain) {\n            if (gfc.RadioGain > 0x1FE)\n                gfc.RadioGain = 0x1FE;\n            if (gfc.RadioGain < -0x1FE)\n                gfc.RadioGain = -0x1FE;\n\n            // set name code\n            radioReplayGain = 0x2000;\n            // set originator code to `determined automatically'\n            radioReplayGain |= 0xC00;\n\n            if (gfc.RadioGain >= 0) {\n                // set gain adjustment\n                radioReplayGain |= gfc.RadioGain;\n            } else {\n                // set the sign bit\n                radioReplayGain |= 0x200;\n                // set gain adjustment\n                radioReplayGain |= -gfc.RadioGain;\n            }\n        }\n\n        // peak sample\n        if (gfc.findPeakSample)\n            peakSignalAmplitude = Math\n                .abs(0 | ((( gfc.PeakSample) / 32767.0) * Math.pow(2, 23) + .5));\n\n        // nogap\n        if (noGapCount != -1) {\n            if (noGapCurr > 0)\n                noGapPrevious = true;\n\n            if (noGapCurr < noGapCount - 1)\n                noGapMore = true;\n        }\n\n        // flags\n        flags = athType + ((expNPsyTune ? 1 : 0) << 4)\n            + ((safeJoint ? 1 : 0) << 5) + ((noGapMore ? 1 : 0) << 6)\n            + ((noGapPrevious ? 1 : 0) << 7);\n\n        if (quality < 0)\n            quality = 0;\n\n        // stereo mode field (Intensity stereo is not implemented)\n        switch (gfp.mode) {\n            case MONO:\n                stereoMode = 0;\n                break;\n            case STEREO:\n                stereoMode = 1;\n                break;\n            case DUAL_CHANNEL:\n                stereoMode = 2;\n                break;\n            case JOINT_STEREO:\n                if (gfp.force_ms)\n                    stereoMode = 4;\n                else\n                    stereoMode = 3;\n                break;\n            case NOT_SET:\n            //$FALL-THROUGH$\n            default:\n                stereoMode = 7;\n                break;\n        }\n\n        if (gfp.in_samplerate <= 32000)\n            sourceFreq = 0x00;\n        else if (gfp.in_samplerate == 48000)\n            sourceFreq = 0x02;\n        else if (gfp.in_samplerate > 48000)\n            sourceFreq = 0x03;\n        else {\n            // default is 44100Hz\n            sourceFreq = 0x01;\n        }\n\n        // Check if the user overrided the default LAME behavior with some\n        // nasty options\n        if (gfp.short_blocks == ShortBlock$22.short_block_forced\n            || gfp.short_blocks == ShortBlock$22.short_block_dispensed\n            || ((gfp.lowpassfreq == -1) && (gfp.highpassfreq == -1)) || /* \"-k\" */\n            (gfp.scale_left < gfp.scale_right)\n            || (gfp.scale_left > gfp.scale_right)\n            || (gfp.disable_reservoir && gfp.brate < 320) || gfp.noATH\n            || gfp.ATHonly || (athType == 0) || gfp.in_samplerate <= 32000)\n            nonOptimal = 1;\n\n        misc = noiseShaping + (stereoMode << 2) + (nonOptimal << 5)\n            + (sourceFreq << 6);\n\n        musicCRC = gfc.nMusicCRC;\n\n        // Write all this information into the stream\n\n        createInteger(streamBuffer, streamBufferPos + bytesWritten, quality);\n        bytesWritten += 4;\n\n        for (var j = 0; j < 9; j++) {\n            streamBuffer[streamBufferPos + bytesWritten + j] = 0xff & version .charAt(j);\n        }\n        bytesWritten += 9;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & revMethod;\n        bytesWritten++;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & lowpass;\n        bytesWritten++;\n\n        createInteger(streamBuffer, streamBufferPos + bytesWritten,\n            peakSignalAmplitude);\n        bytesWritten += 4;\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten,\n            radioReplayGain);\n        bytesWritten += 2;\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten,\n            audiophileReplayGain);\n        bytesWritten += 2;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & flags;\n        bytesWritten++;\n\n        if (abrBitrate >= 255)\n            streamBuffer[streamBufferPos + bytesWritten] = 0xFF;\n        else\n            streamBuffer[streamBufferPos + bytesWritten] = 0xff & abrBitrate;\n        bytesWritten++;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & (encDelay >> 4);\n        streamBuffer[streamBufferPos + bytesWritten + 1] = 0xff & ((encDelay << 4) + (encPadding >> 8));\n        streamBuffer[streamBufferPos + bytesWritten + 2] = 0xff & encPadding;\n\n        bytesWritten += 3;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & misc;\n        bytesWritten++;\n\n        // unused in rev0\n        streamBuffer[streamBufferPos + bytesWritten++] = 0;\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten, gfp.preset);\n        bytesWritten += 2;\n\n        createInteger(streamBuffer, streamBufferPos + bytesWritten, musicLength);\n        bytesWritten += 4;\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten, musicCRC);\n        bytesWritten += 2;\n\n        // Calculate tag CRC.... must be done here, since it includes previous\n        // information\n\n        for (var i = 0; i < bytesWritten; i++)\n            crc = crcUpdateLookup(streamBuffer[streamBufferPos + i], crc);\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten, crc);\n        bytesWritten += 2;\n\n        return bytesWritten;\n    }\n\n    function skipId3v2(fpStream) {\n        // seek to the beginning of the stream\n        fpStream.seek(0);\n        // read 10 bytes in case there's an ID3 version 2 header here\n        var id3v2Header = new_byte$22(10);\n        fpStream.readFully(id3v2Header);\n        /* does the stream begin with the ID3 version 2 file identifier? */\n        var id3v2TagSize;\n        if (!new String(id3v2Header, \"ISO-8859-1\").startsWith(\"ID3\")) {\n            /*\n             * the tag size (minus the 10-byte header) is encoded into four\n             * bytes where the most significant bit is clear in each byte\n             */\n            id3v2TagSize = (((id3v2Header[6] & 0x7f) << 21)\n                | ((id3v2Header[7] & 0x7f) << 14)\n                | ((id3v2Header[8] & 0x7f) << 7) | (id3v2Header[9] & 0x7f))\n                + id3v2Header.length;\n        } else {\n            /* no ID3 version 2 tag in this stream */\n            id3v2TagSize = 0;\n        }\n        return id3v2TagSize;\n    }\n\n    this.getLameTagFrame = function (gfp, buffer) {\n        var gfc = gfp.internal_flags;\n\n        if (!gfp.bWriteVbrTag) {\n            return 0;\n        }\n        if (gfc.Class_ID != Lame.LAME_ID) {\n            return 0;\n        }\n        if (gfc.VBR_seek_table.pos <= 0) {\n            return 0;\n        }\n        if (buffer.length < gfc.VBR_seek_table.TotalFrameSize) {\n            return gfc.VBR_seek_table.TotalFrameSize;\n        }\n\n        Arrays$22.fill(buffer, 0, gfc.VBR_seek_table.TotalFrameSize, 0);\n\n        // 4 bytes frame header\n        setLameTagFrameHeader(gfp, buffer);\n\n        // Create TOC entries\n        var toc = new_byte$22(NUMTOCENTRIES);\n\n        if (gfp.free_format) {\n            for (var i = 1; i < NUMTOCENTRIES; ++i)\n                toc[i] = 0xff & (255 * i / 100);\n        } else {\n            xingSeekTable(gfc.VBR_seek_table, toc);\n        }\n\n        // Start writing the tag after the zero frame\n        var streamIndex = gfc.sideinfo_len;\n        /**\n         * Note: Xing header specifies that Xing data goes in the ancillary data\n         * with NO ERROR PROTECTION. If error protecton in enabled, the Xing\n         * data still starts at the same offset, and now it is in sideinfo data\n         * block, and thus will not decode correctly by non-Xing tag aware\n         * players\n         */\n        if (gfp.error_protection)\n            streamIndex -= 2;\n\n        // Put Vbr tag\n        if (gfp.VBR == VbrMode$22.vbr_off) {\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(0);\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(1);\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(2);\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(3);\n\n        } else {\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(0);\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(1);\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(2);\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(3);\n        }\n\n        // Put header flags\n        createInteger(buffer, streamIndex, FRAMES_FLAG + BYTES_FLAG + TOC_FLAG\n            + VBR_SCALE_FLAG);\n        streamIndex += 4;\n\n        // Put Total Number of frames\n        createInteger(buffer, streamIndex, gfc.VBR_seek_table.nVbrNumFrames);\n        streamIndex += 4;\n\n        // Put total audio stream size, including Xing/LAME Header\n        var streamSize = (gfc.VBR_seek_table.nBytesWritten + gfc.VBR_seek_table.TotalFrameSize);\n        createInteger(buffer, streamIndex, 0 | streamSize);\n        streamIndex += 4;\n\n        /* Put TOC */\n        System$22.arraycopy(toc, 0, buffer, streamIndex, toc.length);\n        streamIndex += toc.length;\n\n        if (gfp.error_protection) {\n            // (jo) error_protection: add crc16 information to header\n            bs.CRC_writeheader(gfc, buffer);\n        }\n\n        // work out CRC so far: initially crc = 0\n        var crc = 0x00;\n        for (var i = 0; i < streamIndex; i++)\n            crc = crcUpdateLookup(buffer[i], crc);\n        // Put LAME VBR info\n        streamIndex += putLameVBR(gfp, streamSize, buffer, streamIndex, crc);\n\n        return gfc.VBR_seek_table.TotalFrameSize;\n    };\n\n    /**\n     * Write final VBR tag to the file.\n     *\n     * @param gfp\n     *            global flags\n     * @param stream\n     *            stream to add the VBR tag to\n     * @return 0 (OK), -1 else\n     * @throws IOException\n     *             I/O error\n     */\n    this.putVbrTag = function (gfp, stream) {\n        var gfc = gfp.internal_flags;\n\n        if (gfc.VBR_seek_table.pos <= 0)\n            return -1;\n\n        // Seek to end of file\n        stream.seek(stream.length());\n\n        // Get file size, abort if file has zero length.\n        if (stream.length() == 0)\n            return -1;\n\n        // The VBR tag may NOT be located at the beginning of the stream. If an\n        // ID3 version 2 tag was added, then it must be skipped to write the VBR\n        // tag data.\n        var id3v2TagSize = skipId3v2(stream);\n\n        // Seek to the beginning of the stream\n        stream.seek(id3v2TagSize);\n\n        var buffer = new_byte$22(MAXFRAMESIZE);\n        var bytes = getLameTagFrame(gfp, buffer);\n        if (bytes > buffer.length) {\n            return -1;\n        }\n\n        if (bytes < 1) {\n            return 0;\n        }\n\n        // Put it all to disk again\n        stream.write(buffer, 0, bytes);\n        // success\n        return 0;\n    };\n\n}\n\nvar VBRTag_1 = VBRTag;\n\nvar new_byte = common.new_byte;\nvar assert = common.assert;\n\nLame = Lame_1;\nPresets = Presets_1;\nGainAnalysis = GainAnalysis_1;\nQuantizePVT = QuantizePVT_1;\nQuantize = Quantize_1;\nTakehiro = Takehiro_1;\nReservoir = Reservoir_1;\nMPEGMode = MPEGMode_1;\nBitStream = BitStream_1;\n\n\n\n\nfunction GetAudio() {\n    var parse;\n    var mpg;\n\n    this.setModules = function (parse2, mpg2) {\n        parse = parse2;\n        mpg = mpg2;\n    };\n}\n\n\nfunction Parse() {\n    var ver;\n    var id3;\n    var pre;\n\n    this.setModules = function (ver2, id32, pre2) {\n        ver = ver2;\n        id3 = id32;\n        pre = pre2;\n    };\n}\n\nfunction MPGLib() {\n}\n\nfunction ID3Tag() {\n    var bits;\n    var ver;\n\n    this.setModules = function (_bits, _ver) {\n        bits = _bits;\n        ver = _ver;\n    };\n}\n\nfunction Mp3Encoder(channels, samplerate, kbps) {\n    if (arguments.length != 3) {\n        console.error('WARN: Mp3Encoder(channels, samplerate, kbps) not specified');\n        channels = 1;\n        samplerate = 44100;\n        kbps = 128;\n    }\n    var lame = new Lame();\n    var gaud = new GetAudio();\n    var ga = new GainAnalysis();\n    var bs = new BitStream();\n    var p = new Presets();\n    var qupvt = new QuantizePVT();\n    var qu = new Quantize();\n    var vbr = new VBRTag_1();\n    var ver = new Version_1();\n    var id3 = new ID3Tag();\n    var rv = new Reservoir();\n    var tak = new Takehiro();\n    var parse = new Parse();\n    var mpg = new MPGLib();\n\n    lame.setModules(ga, bs, p, qupvt, qu, vbr, ver, id3, mpg);\n    bs.setModules(ga, mpg, ver, vbr);\n    id3.setModules(bs, ver);\n    p.setModules(lame);\n    qu.setModules(bs, rv, qupvt, tak);\n    qupvt.setModules(tak, rv, lame.enc.psy);\n    rv.setModules(bs);\n    tak.setModules(qupvt);\n    vbr.setModules(lame, bs, ver);\n    gaud.setModules(parse, mpg);\n    parse.setModules(ver, id3, p);\n\n    var gfp = lame.lame_init();\n\n    gfp.num_channels = channels;\n    gfp.in_samplerate = samplerate;\n    gfp.brate = kbps;\n    gfp.mode = MPEGMode.STEREO;\n    gfp.quality = 3;\n    gfp.bWriteVbrTag = false;\n    gfp.disable_reservoir = true;\n    gfp.write_id3tag_automatic = false;\n\n    var retcode = lame.lame_init_params(gfp);\n    assert(0 == retcode);\n    var maxSamples = 1152;\n    var mp3buf_size = 0 | (1.25 * maxSamples + 7200);\n    var mp3buf = new_byte(mp3buf_size);\n\n    this.encodeBuffer = function (left, right) {\n        if (channels == 1) {\n            right = left;\n        }\n        assert(left.length == right.length);\n        if (left.length > maxSamples) {\n            maxSamples = left.length;\n            mp3buf_size = 0 | (1.25 * maxSamples + 7200);\n            mp3buf = new_byte(mp3buf_size);\n        }\n\n        var _sz = lame.lame_encode_buffer(gfp, left, right, left.length, mp3buf, 0, mp3buf_size);\n        return new Int8Array(mp3buf.subarray(0, _sz));\n    };\n\n    this.flush = function () {\n        var _sz = lame.lame_encode_flush(gfp, mp3buf, 0, mp3buf_size);\n        return new Int8Array(mp3buf.subarray(0, _sz));\n    };\n}\n\nfunction WavHeader() {\n    this.dataOffset = 0;\n    this.dataLen = 0;\n    this.channels = 0;\n    this.sampleRate = 0;\n}\n\nfunction fourccToInt(fourcc) {\n    return fourcc.charCodeAt(0) << 24 | fourcc.charCodeAt(1) << 16 | fourcc.charCodeAt(2) << 8 | fourcc.charCodeAt(3);\n}\n\nWavHeader.RIFF = fourccToInt(\"RIFF\");\nWavHeader.WAVE = fourccToInt(\"WAVE\");\nWavHeader.fmt_ = fourccToInt(\"fmt \");\nWavHeader.data = fourccToInt(\"data\");\n\nWavHeader.readHeader = function (dataView) {\n    var w = new WavHeader();\n\n    var header = dataView.getUint32(0, false);\n    if (WavHeader.RIFF != header) {\n        return;\n    }\n    var fileLen = dataView.getUint32(4, true);\n    if (WavHeader.WAVE != dataView.getUint32(8, false)) {\n        return;\n    }\n    if (WavHeader.fmt_ != dataView.getUint32(12, false)) {\n        return;\n    }\n    var fmtLen = dataView.getUint32(16, true);\n    var pos = 16 + 4;\n    switch (fmtLen) {\n        case 16:\n        case 18:\n            w.channels = dataView.getUint16(pos + 2, true);\n            w.sampleRate = dataView.getUint32(pos + 4, true);\n            break;\n        default:\n            throw 'extended fmt chunk not implemented';\n    }\n    pos += fmtLen;\n    var data = WavHeader.data;\n    var len = 0;\n    while (data != header) {\n        header = dataView.getUint32(pos, false);\n        len = dataView.getUint32(pos + 4, true);\n        if (data == header) {\n            break;\n        }\n        pos += (len + 8);\n    }\n    w.dataLen = len;\n    w.dataOffset = pos + 8;\n    return w;\n};\n\nvar Mp3Encoder_1 = Mp3Encoder;\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar Encoder = function () {\n  function Encoder(config) {\n    classCallCheck(this, Encoder);\n\n    this.config = {\n      sampleRate: 44100,\n      bitRate: 128\n    };\n\n    Object.assign(this.config, config);\n\n    this.mp3Encoder = new Mp3Encoder_1(1, this.config.sampleRate, this.config.bitRate);\n\n    // Audio is processed by frames of 1152 samples per audio channel\n    // http://lame.sourceforge.net/tech-FAQ.txt\n    this.maxSamples = 1152;\n\n    this.samplesMono = null;\n    this.clearBuffer();\n  }\n\n  /**\n   * Clear active buffer\n   */\n\n\n  createClass(Encoder, [{\n    key: 'clearBuffer',\n    value: function clearBuffer() {\n      this.dataBuffer = [];\n    }\n\n    /**\n     * Append new audio buffer to current active buffer\n     * @param {Buffer} buffer\n     */\n\n  }, {\n    key: 'appendToBuffer',\n    value: function appendToBuffer(buffer) {\n      this.dataBuffer.push(new Int8Array(buffer));\n    }\n\n    /**\n     * Float current data to 16 bits PCM\n     * @param {Float32Array} input\n     * @param {Int16Array} output\n     */\n\n  }, {\n    key: 'floatTo16BitPCM',\n    value: function floatTo16BitPCM(input, output) {\n      for (var i = 0; i < input.length; i++) {\n        var s = Math.max(-1, Math.min(1, input[i]));\n        output[i] = s < 0 ? s * 0x8000 : s * 0x7FFF;\n      }\n    }\n\n    /**\n     * Convert buffer to proper format\n     * @param {Array} arrayBuffer\n     */\n\n  }, {\n    key: 'convertBuffer',\n    value: function convertBuffer(arrayBuffer) {\n      var data = new Float32Array(arrayBuffer);\n      var out = new Int16Array(arrayBuffer.length);\n      this.floatTo16BitPCM(data, out);\n\n      return out;\n    }\n\n    /**\n     * Encode and append current buffer to dataBuffer\n     * @param {Array} arrayBuffer\n     */\n\n  }, {\n    key: 'encode',\n    value: function encode(arrayBuffer) {\n      this.samplesMono = this.convertBuffer(arrayBuffer);\n      var remaining = this.samplesMono.length;\n\n      for (var i = 0; remaining >= 0; i += this.maxSamples) {\n        var left = this.samplesMono.subarray(i, i + this.maxSamples);\n        var mp3buffer = this.mp3Encoder.encodeBuffer(left);\n        this.appendToBuffer(mp3buffer);\n        remaining -= this.maxSamples;\n      }\n    }\n\n    /**\n     * Return full dataBuffer\n     */\n\n  }, {\n    key: 'finish',\n    value: function finish() {\n      this.appendToBuffer(this.mp3Encoder.flush());\n\n      return this.dataBuffer;\n    }\n  }]);\n  return Encoder;\n}();\n\nvar MicRecorder = function () {\n  function MicRecorder(config) {\n    classCallCheck(this, MicRecorder);\n\n    this.config = {\n      // 128 or 160 kbit/s – mid-range bitrate quality\n      bitRate: 128,\n\n      // There is a known issue with some macOS machines, where the recording\n      // will sometimes have a loud 'pop' or 'pop-click' sound. This flag\n      // prevents getting audio from the microphone a few milliseconds after\n      // the begining of the recording. It also helps to remove the mouse\n      // \"click\" sound from the output mp3 file.\n      startRecordingAt: 300,\n      deviceId: null\n    };\n\n    this.activeStream = null;\n    this.context = null;\n    this.microphone = null;\n    this.processor = null;\n    this.startTime = 0;\n\n    Object.assign(this.config, config);\n  }\n\n  /**\n   * Starts to listen for the microphone sound\n   * @param {MediaStream} stream\n   */\n\n\n  createClass(MicRecorder, [{\n    key: 'addMicrophoneListener',\n    value: function addMicrophoneListener(stream) {\n      var _this = this;\n\n      this.activeStream = stream;\n\n      // This prevents the weird noise once you start listening to the microphone\n      this.timerToStart = setTimeout(function () {\n        delete _this.timerToStart;\n      }, this.config.startRecordingAt);\n\n      // Set up Web Audio API to process data from the media stream (microphone).\n      this.microphone = this.context.createMediaStreamSource(stream);\n\n      // Settings a bufferSize of 0 instructs the browser to choose the best bufferSize\n      this.processor = this.context.createScriptProcessor(0, 1, 1);\n\n      // Add all buffers from LAME into an array.\n      this.processor.onaudioprocess = function (event) {\n        if (_this.timerToStart) {\n          return;\n        }\n\n        // Send microphone data to LAME for MP3 encoding while recording.\n        _this.lameEncoder.encode(event.inputBuffer.getChannelData(0));\n      };\n\n      // Begin retrieving microphone data.\n      this.microphone.connect(this.processor);\n      this.processor.connect(this.context.destination);\n    }\n  }, {\n    key: 'stop',\n\n\n    /**\n     * Disconnect microphone, processor and remove activeStream\n     */\n    value: function stop() {\n      if (this.processor && this.microphone) {\n        // Clean up the Web Audio API resources.\n        this.microphone.disconnect();\n        this.processor.disconnect();\n\n        // If all references using this.context are destroyed, context is closed\n        // automatically. DOMException is fired when trying to close again\n        if (this.context && this.context.state !== 'closed') {\n          this.context.close();\n        }\n\n        this.processor.onaudioprocess = null;\n\n        // Stop all audio tracks. Also, removes recording icon from chrome tab\n        this.activeStream.getAudioTracks().forEach(function (track) {\n          return track.stop();\n        });\n      }\n\n      return this;\n    }\n  }, {\n    key: 'start',\n\n\n    /**\n     * Requests access to the microphone and start recording\n     * @return Promise\n     */\n    value: function start() {\n      var _this2 = this;\n\n      var AudioContext = window.AudioContext || window.webkitAudioContext;\n      this.context = new AudioContext();\n      this.config.sampleRate = this.context.sampleRate;\n      this.lameEncoder = new Encoder(this.config);\n\n      var audio = this.config.deviceId ? { deviceId: { exact: this.config.deviceId } } : true;\n\n      return new Promise(function (resolve, reject) {\n        navigator.mediaDevices.getUserMedia({ audio: audio }).then(function (stream) {\n          _this2.addMicrophoneListener(stream);\n          resolve(stream);\n        }).catch(function (err) {\n          reject(err);\n        });\n      });\n    }\n  }, {\n    key: 'getMp3',\n\n\n    /**\n     * Return Mp3 Buffer and Blob with type mp3\n     * @return {Promise}\n     */\n    value: function getMp3() {\n      var _this3 = this;\n\n      var finalBuffer = this.lameEncoder.finish();\n\n      return new Promise(function (resolve, reject) {\n        if (finalBuffer.length === 0) {\n          reject(new Error('No buffer to send'));\n        } else {\n          resolve([finalBuffer, new Blob(finalBuffer, { type: 'audio/mp3' })]);\n          _this3.lameEncoder.clearBuffer();\n        }\n      });\n    }\n  }]);\n  return MicRecorder;\n}();\n\nreturn MicRecorder;\n\n})));\n//# sourceMappingURL=index.js.map\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  return function () {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","/** @license React v16.13.1\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var l=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.forward_ref\"):60112,y=n?Symbol.for(\"react.suspense\"):60113,z=n?Symbol.for(\"react.memo\"):60115,A=n?Symbol.for(\"react.lazy\"):\n60116,B=\"function\"===typeof Symbol&&Symbol.iterator;function C(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar D={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},E={};function F(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}F.prototype.isReactComponent={};F.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(C(85));this.updater.enqueueSetState(this,a,b,\"setState\")};F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction G(){}G.prototype=F.prototype;function H(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}var I=H.prototype=new G;I.constructor=H;l(I,F.prototype);I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,c){var e,d={},g=null,k=null;if(null!=b)for(e in void 0!==b.ref&&(k=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,e)&&!L.hasOwnProperty(e)&&(d[e]=b[e]);var f=arguments.length-2;if(1===f)d.children=c;else if(1<f){for(var h=Array(f),m=0;m<f;m++)h[m]=arguments[m+2];d.children=h}if(a&&a.defaultProps)for(e in f=a.defaultProps,f)void 0===d[e]&&(d[e]=f[e]);return{$$typeof:p,type:a,key:g,ref:k,props:d,_owner:J.current}}\nfunction N(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g,Q=[];function R(a,b,c,e){if(Q.length){var d=Q.pop();d.result=a;d.keyPrefix=b;d.func=c;d.context=e;d.count=0;return d}return{result:a,keyPrefix:b,func:c,context:e,count:0}}\nfunction S(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>Q.length&&Q.push(a)}\nfunction T(a,b,c,e){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return c(e,a,\"\"===b?\".\"+U(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var k=0;k<a.length;k++){d=a[k];var f=b+U(d,k);g+=T(d,f,c,e)}else if(null===a||\"object\"!==typeof a?f=null:(f=B&&a[B]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),k=\n0;!(d=a.next()).done;)d=d.value,f=b+U(d,k++),g+=T(d,f,c,e);else if(\"object\"===d)throw c=\"\"+a,Error(C(31,\"[object Object]\"===c?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":c,\"\"));return g}function V(a,b,c){return null==a?0:T(a,\"\",b,c)}function U(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function W(a,b){a.func.call(a.context,b,a.count++)}\nfunction aa(a,b,c){var e=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?X(a,e,c,function(a){return a}):null!=a&&(O(a)&&(a=N(a,d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(P,\"$&/\")+\"/\")+c)),e.push(a))}function X(a,b,c,e,d){var g=\"\";null!=c&&(g=(\"\"+c).replace(P,\"$&/\")+\"/\");b=R(b,g,e,d);V(a,aa,b);S(b)}var Y={current:null};function Z(){var a=Y.current;if(null===a)throw Error(C(321));return a}\nvar ba={ReactCurrentDispatcher:Y,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:J,IsSomeRendererActing:{current:!1},assign:l};exports.Children={map:function(a,b,c){if(null==a)return a;var e=[];X(a,e,null,b,c);return e},forEach:function(a,b,c){if(null==a)return a;b=R(null,null,b,c);V(a,W,b);S(b)},count:function(a){return V(a,function(){return null},null)},toArray:function(a){var b=[];X(a,b,null,function(a){return a});return b},only:function(a){if(!O(a))throw Error(C(143));return a}};\nexports.Component=F;exports.Fragment=r;exports.Profiler=u;exports.PureComponent=H;exports.StrictMode=t;exports.Suspense=y;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ba;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(C(267,a));var e=l({},a.props),d=a.key,g=a.ref,k=a._owner;if(null!=b){void 0!==b.ref&&(g=b.ref,k=J.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(h in b)K.call(b,h)&&!L.hasOwnProperty(h)&&(e[h]=void 0===b[h]&&void 0!==f?f[h]:b[h])}var h=arguments.length-2;if(1===h)e.children=c;else if(1<h){f=Array(h);for(var m=0;m<h;m++)f[m]=arguments[m+2];e.children=f}return{$$typeof:p,type:a.type,\nkey:d,ref:g,props:e,_owner:k}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:x,render:a}};exports.isValidElement=O;\nexports.lazy=function(a){return{$$typeof:A,_ctor:a,_status:-1,_result:null}};exports.memo=function(a,b){return{$$typeof:z,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return Z().useCallback(a,b)};exports.useContext=function(a,b){return Z().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return Z().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return Z().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return Z().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return Z().useMemo(a,b)};exports.useReducer=function(a,b,c){return Z().useReducer(a,b,c)};exports.useRef=function(a){return Z().useRef(a)};exports.useState=function(a){return Z().useState(a)};exports.version=\"16.13.1\";\n","/** @license React v16.13.1\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),n=require(\"object-assign\"),r=require(\"scheduler\");function u(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}if(!aa)throw Error(u(227));\nfunction ba(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var da=!1,ea=null,fa=!1,ha=null,ia={onError:function(a){da=!0;ea=a}};function ja(a,b,c,d,e,f,g,h,k){da=!1;ea=null;ba.apply(ia,arguments)}function ka(a,b,c,d,e,f,g,h,k){ja.apply(this,arguments);if(da){if(da){var l=ea;da=!1;ea=null}else throw Error(u(198));fa||(fa=!0,ha=l)}}var la=null,ma=null,na=null;\nfunction oa(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=na(c);ka(d,b,void 0,a);a.currentTarget=null}var pa=null,qa={};\nfunction ra(){if(pa)for(var a in qa){var b=qa[a],c=pa.indexOf(a);if(!(-1<c))throw Error(u(96,a));if(!sa[c]){if(!b.extractEvents)throw Error(u(97,a));sa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;if(ta.hasOwnProperty(h))throw Error(u(99,h));ta[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&ua(k[e],g,h);e=!0}else f.registrationName?(ua(f.registrationName,g,h),e=!0):e=!1;if(!e)throw Error(u(98,d,a));}}}}\nfunction ua(a,b,c){if(va[a])throw Error(u(100,a));va[a]=b;wa[a]=b.eventTypes[c].dependencies}var sa=[],ta={},va={},wa={};function xa(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];if(!qa.hasOwnProperty(c)||qa[c]!==d){if(qa[c])throw Error(u(102,c));qa[c]=d;b=!0}}b&&ra()}var ya=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),za=null,Aa=null,Ba=null;\nfunction Ca(a){if(a=ma(a)){if(\"function\"!==typeof za)throw Error(u(280));var b=a.stateNode;b&&(b=la(b),za(a.stateNode,a.type,b))}}function Da(a){Aa?Ba?Ba.push(a):Ba=[a]:Aa=a}function Ea(){if(Aa){var a=Aa,b=Ba;Ba=Aa=null;Ca(a);if(b)for(a=0;a<b.length;a++)Ca(b[a])}}function Fa(a,b){return a(b)}function Ga(a,b,c,d,e){return a(b,c,d,e)}function Ha(){}var Ia=Fa,Ja=!1,Ka=!1;function La(){if(null!==Aa||null!==Ba)Ha(),Ea()}\nfunction Ma(a,b,c){if(Ka)return a(b,c);Ka=!0;try{return Ia(a,b,c)}finally{Ka=!1,La()}}var Na=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,Oa=Object.prototype.hasOwnProperty,Pa={},Qa={};\nfunction Ra(a){if(Oa.call(Qa,a))return!0;if(Oa.call(Pa,a))return!1;if(Na.test(a))return Qa[a]=!0;Pa[a]=!0;return!1}function Sa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction Ta(a,b,c,d){if(null===b||\"undefined\"===typeof b||Sa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f}var C={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){C[a]=new v(a,0,!1,a,null,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];C[b]=new v(b,1,!1,a[1],null,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){C[a]=new v(a,2,!1,a.toLowerCase(),null,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){C[a]=new v(a,2,!1,a,null,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){C[a]=new v(a,3,!1,a.toLowerCase(),null,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){C[a]=new v(a,3,!0,a,null,!1)});[\"capture\",\"download\"].forEach(function(a){C[a]=new v(a,4,!1,a,null,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){C[a]=new v(a,6,!1,a,null,!1)});[\"rowSpan\",\"start\"].forEach(function(a){C[a]=new v(a,5,!1,a.toLowerCase(),null,!1)});var Ua=/[\\-:]([a-z])/g;function Va(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(Ua,\nVa);C[b]=new v(b,1,!1,a,null,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(Ua,Va);C[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(Ua,Va);C[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){C[a]=new v(a,1,!1,a.toLowerCase(),null,!1)});\nC.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){C[a]=new v(a,1,!1,a.toLowerCase(),null,!0)});var Wa=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;Wa.hasOwnProperty(\"ReactCurrentDispatcher\")||(Wa.ReactCurrentDispatcher={current:null});Wa.hasOwnProperty(\"ReactCurrentBatchConfig\")||(Wa.ReactCurrentBatchConfig={suspense:null});\nfunction Xa(a,b,c,d){var e=C.hasOwnProperty(b)?C[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(Ta(b,c,e,d)&&(c=null),d||null===e?Ra(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nvar Ya=/^(.*)[\\\\\\/]/,E=\"function\"===typeof Symbol&&Symbol.for,Za=E?Symbol.for(\"react.element\"):60103,$a=E?Symbol.for(\"react.portal\"):60106,ab=E?Symbol.for(\"react.fragment\"):60107,bb=E?Symbol.for(\"react.strict_mode\"):60108,cb=E?Symbol.for(\"react.profiler\"):60114,db=E?Symbol.for(\"react.provider\"):60109,eb=E?Symbol.for(\"react.context\"):60110,fb=E?Symbol.for(\"react.concurrent_mode\"):60111,gb=E?Symbol.for(\"react.forward_ref\"):60112,hb=E?Symbol.for(\"react.suspense\"):60113,ib=E?Symbol.for(\"react.suspense_list\"):\n60120,jb=E?Symbol.for(\"react.memo\"):60115,kb=E?Symbol.for(\"react.lazy\"):60116,lb=E?Symbol.for(\"react.block\"):60121,mb=\"function\"===typeof Symbol&&Symbol.iterator;function nb(a){if(null===a||\"object\"!==typeof a)return null;a=mb&&a[mb]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}function ob(a){if(-1===a._status){a._status=0;var b=a._ctor;b=b();a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}}\nfunction pb(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ab:return\"Fragment\";case $a:return\"Portal\";case cb:return\"Profiler\";case bb:return\"StrictMode\";case hb:return\"Suspense\";case ib:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case eb:return\"Context.Consumer\";case db:return\"Context.Provider\";case gb:var b=a.render;b=b.displayName||b.name||\"\";return a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\")\":\n\"ForwardRef\");case jb:return pb(a.type);case lb:return pb(a.render);case kb:if(a=1===a._status?a._result:null)return pb(a)}return null}function qb(a){var b=\"\";do{a:switch(a.tag){case 3:case 4:case 6:case 7:case 10:case 9:var c=\"\";break a;default:var d=a._debugOwner,e=a._debugSource,f=pb(a.type);c=null;d&&(c=pb(d.type));d=f;f=\"\";e?f=\" (at \"+e.fileName.replace(Ya,\"\")+\":\"+e.lineNumber+\")\":c&&(f=\" (created by \"+c+\")\");c=\"\\n    in \"+(d||\"Unknown\")+f}b+=c;a=a.return}while(a);return b}\nfunction rb(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function sb(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction tb(a){var b=sb(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function xb(a){a._valueTracker||(a._valueTracker=tb(a))}function yb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=sb(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function zb(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}\nfunction Ab(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=rb(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function Bb(a,b){b=b.checked;null!=b&&Xa(a,\"checked\",b,!1)}\nfunction Cb(a,b){Bb(a,b);var c=rb(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?Db(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&Db(a,b.type,rb(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Eb(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction Db(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}function Fb(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}function Gb(a,b){a=n({children:void 0},b);if(b=Fb(b.children))a.children=b;return a}\nfunction Hb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+rb(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction Ib(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(u(91));return n({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function Jb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(u(92));if(Array.isArray(c)){if(!(1>=c.length))throw Error(u(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:rb(c)}}\nfunction Kb(a,b){var c=rb(b.value),d=rb(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function Lb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}var Mb={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction Nb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function Ob(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?Nb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar Pb,Qb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Mb.svg||\"innerHTML\"in a)a.innerHTML=b;else{Pb=Pb||document.createElement(\"div\");Pb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=Pb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction Rb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}function Sb(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Tb={animationend:Sb(\"Animation\",\"AnimationEnd\"),animationiteration:Sb(\"Animation\",\"AnimationIteration\"),animationstart:Sb(\"Animation\",\"AnimationStart\"),transitionend:Sb(\"Transition\",\"TransitionEnd\")},Ub={},Vb={};\nya&&(Vb=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Tb.animationend.animation,delete Tb.animationiteration.animation,delete Tb.animationstart.animation),\"TransitionEvent\"in window||delete Tb.transitionend.transition);function Wb(a){if(Ub[a])return Ub[a];if(!Tb[a])return a;var b=Tb[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Vb)return Ub[a]=b[c];return a}\nvar Xb=Wb(\"animationend\"),Yb=Wb(\"animationiteration\"),Zb=Wb(\"animationstart\"),$b=Wb(\"transitionend\"),ac=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),bc=new (\"function\"===typeof WeakMap?WeakMap:Map);function cc(a){var b=bc.get(a);void 0===b&&(b=new Map,bc.set(a,b));return b}\nfunction dc(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.effectTag&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function ec(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function fc(a){if(dc(a)!==a)throw Error(u(188));}\nfunction gc(a){var b=a.alternate;if(!b){b=dc(a);if(null===b)throw Error(u(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return fc(e),a;if(f===d)return fc(e),b;f=f.sibling}throw Error(u(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(u(189));}}if(c.alternate!==d)throw Error(u(190));}if(3!==c.tag)throw Error(u(188));return c.stateNode.current===c?a:b}function hc(a){a=gc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nfunction ic(a,b){if(null==b)throw Error(u(30));if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function jc(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var kc=null;\nfunction lc(a){if(a){var b=a._dispatchListeners,c=a._dispatchInstances;if(Array.isArray(b))for(var d=0;d<b.length&&!a.isPropagationStopped();d++)oa(a,b[d],c[d]);else b&&oa(a,b,c);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function mc(a){null!==a&&(kc=ic(kc,a));a=kc;kc=null;if(a){jc(a,lc);if(kc)throw Error(u(95));if(fa)throw a=ha,fa=!1,ha=null,a;}}\nfunction nc(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function oc(a){if(!ya)return!1;a=\"on\"+a;var b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}var pc=[];function qc(a){a.topLevelType=null;a.nativeEvent=null;a.targetInst=null;a.ancestors.length=0;10>pc.length&&pc.push(a)}\nfunction rc(a,b,c,d){if(pc.length){var e=pc.pop();e.topLevelType=a;e.eventSystemFlags=d;e.nativeEvent=b;e.targetInst=c;return e}return{topLevelType:a,eventSystemFlags:d,nativeEvent:b,targetInst:c,ancestors:[]}}\nfunction sc(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d=c;if(3===d.tag)d=d.stateNode.containerInfo;else{for(;d.return;)d=d.return;d=3!==d.tag?null:d.stateNode.containerInfo}if(!d)break;b=c.tag;5!==b&&6!==b||a.ancestors.push(c);c=tc(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=nc(a.nativeEvent);d=a.topLevelType;var f=a.nativeEvent,g=a.eventSystemFlags;0===c&&(g|=64);for(var h=null,k=0;k<sa.length;k++){var l=sa[k];l&&(l=l.extractEvents(d,b,f,e,g))&&(h=\nic(h,l))}mc(h)}}function uc(a,b,c){if(!c.has(a)){switch(a){case \"scroll\":vc(b,\"scroll\",!0);break;case \"focus\":case \"blur\":vc(b,\"focus\",!0);vc(b,\"blur\",!0);c.set(\"blur\",null);c.set(\"focus\",null);break;case \"cancel\":case \"close\":oc(a)&&vc(b,a,!0);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===ac.indexOf(a)&&F(a,b)}c.set(a,null)}}\nvar wc,xc,yc,zc=!1,Ac=[],Bc=null,Cc=null,Dc=null,Ec=new Map,Fc=new Map,Gc=[],Hc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit\".split(\" \"),Ic=\"focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture\".split(\" \");\nfunction Jc(a,b){var c=cc(b);Hc.forEach(function(a){uc(a,b,c)});Ic.forEach(function(a){uc(a,b,c)})}function Kc(a,b,c,d,e){return{blockedOn:a,topLevelType:b,eventSystemFlags:c|32,nativeEvent:e,container:d}}\nfunction Lc(a,b){switch(a){case \"focus\":case \"blur\":Bc=null;break;case \"dragenter\":case \"dragleave\":Cc=null;break;case \"mouseover\":case \"mouseout\":Dc=null;break;case \"pointerover\":case \"pointerout\":Ec.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Fc.delete(b.pointerId)}}function Mc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a=Kc(b,c,d,e,f),null!==b&&(b=Nc(b),null!==b&&xc(b)),a;a.eventSystemFlags|=d;return a}\nfunction Oc(a,b,c,d,e){switch(b){case \"focus\":return Bc=Mc(Bc,a,b,c,d,e),!0;case \"dragenter\":return Cc=Mc(Cc,a,b,c,d,e),!0;case \"mouseover\":return Dc=Mc(Dc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Ec.set(f,Mc(Ec.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Fc.set(f,Mc(Fc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Pc(a){var b=tc(a.target);if(null!==b){var c=dc(b);if(null!==c)if(b=c.tag,13===b){if(b=ec(c),null!==b){a.blockedOn=b;r.unstable_runWithPriority(a.priority,function(){yc(c)});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}function Qc(a){if(null!==a.blockedOn)return!1;var b=Rc(a.topLevelType,a.eventSystemFlags,a.container,a.nativeEvent);if(null!==b){var c=Nc(b);null!==c&&xc(c);a.blockedOn=b;return!1}return!0}\nfunction Sc(a,b,c){Qc(a)&&c.delete(b)}function Tc(){for(zc=!1;0<Ac.length;){var a=Ac[0];if(null!==a.blockedOn){a=Nc(a.blockedOn);null!==a&&wc(a);break}var b=Rc(a.topLevelType,a.eventSystemFlags,a.container,a.nativeEvent);null!==b?a.blockedOn=b:Ac.shift()}null!==Bc&&Qc(Bc)&&(Bc=null);null!==Cc&&Qc(Cc)&&(Cc=null);null!==Dc&&Qc(Dc)&&(Dc=null);Ec.forEach(Sc);Fc.forEach(Sc)}function Uc(a,b){a.blockedOn===b&&(a.blockedOn=null,zc||(zc=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Tc)))}\nfunction Vc(a){function b(b){return Uc(b,a)}if(0<Ac.length){Uc(Ac[0],a);for(var c=1;c<Ac.length;c++){var d=Ac[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Bc&&Uc(Bc,a);null!==Cc&&Uc(Cc,a);null!==Dc&&Uc(Dc,a);Ec.forEach(b);Fc.forEach(b);for(c=0;c<Gc.length;c++)d=Gc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Gc.length&&(c=Gc[0],null===c.blockedOn);)Pc(c),null===c.blockedOn&&Gc.shift()}\nvar Wc={},Yc=new Map,Zc=new Map,$c=[\"abort\",\"abort\",Xb,\"animationEnd\",Yb,\"animationIteration\",Zb,\"animationStart\",\"canplay\",\"canPlay\",\"canplaythrough\",\"canPlayThrough\",\"durationchange\",\"durationChange\",\"emptied\",\"emptied\",\"encrypted\",\"encrypted\",\"ended\",\"ended\",\"error\",\"error\",\"gotpointercapture\",\"gotPointerCapture\",\"load\",\"load\",\"loadeddata\",\"loadedData\",\"loadedmetadata\",\"loadedMetadata\",\"loadstart\",\"loadStart\",\"lostpointercapture\",\"lostPointerCapture\",\"playing\",\"playing\",\"progress\",\"progress\",\"seeking\",\n\"seeking\",\"stalled\",\"stalled\",\"suspend\",\"suspend\",\"timeupdate\",\"timeUpdate\",$b,\"transitionEnd\",\"waiting\",\"waiting\"];function ad(a,b){for(var c=0;c<a.length;c+=2){var d=a[c],e=a[c+1],f=\"on\"+(e[0].toUpperCase()+e.slice(1));f={phasedRegistrationNames:{bubbled:f,captured:f+\"Capture\"},dependencies:[d],eventPriority:b};Zc.set(d,b);Yc.set(d,f);Wc[e]=f}}\nad(\"blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange\".split(\" \"),0);\nad(\"drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel\".split(\" \"),1);ad($c,2);for(var bd=\"change selectionchange textInput compositionstart compositionend compositionupdate\".split(\" \"),cd=0;cd<bd.length;cd++)Zc.set(bd[cd],0);\nvar dd=r.unstable_UserBlockingPriority,ed=r.unstable_runWithPriority,fd=!0;function F(a,b){vc(b,a,!1)}function vc(a,b,c){var d=Zc.get(b);switch(void 0===d?2:d){case 0:d=gd.bind(null,b,1,a);break;case 1:d=hd.bind(null,b,1,a);break;default:d=id.bind(null,b,1,a)}c?a.addEventListener(b,d,!0):a.addEventListener(b,d,!1)}function gd(a,b,c,d){Ja||Ha();var e=id,f=Ja;Ja=!0;try{Ga(e,a,b,c,d)}finally{(Ja=f)||La()}}function hd(a,b,c,d){ed(dd,id.bind(null,a,b,c,d))}\nfunction id(a,b,c,d){if(fd)if(0<Ac.length&&-1<Hc.indexOf(a))a=Kc(null,a,b,c,d),Ac.push(a);else{var e=Rc(a,b,c,d);if(null===e)Lc(a,d);else if(-1<Hc.indexOf(a))a=Kc(e,a,b,c,d),Ac.push(a);else if(!Oc(e,a,b,c,d)){Lc(a,d);a=rc(a,d,null,b);try{Ma(sc,a)}finally{qc(a)}}}}\nfunction Rc(a,b,c,d){c=nc(d);c=tc(c);if(null!==c){var e=dc(c);if(null===e)c=null;else{var f=e.tag;if(13===f){c=ec(e);if(null!==c)return c;c=null}else if(3===f){if(e.stateNode.hydrate)return 3===e.tag?e.stateNode.containerInfo:null;c=null}else e!==c&&(c=null)}}a=rc(a,d,c,b);try{Ma(sc,a)}finally{qc(a)}return null}\nvar jd={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},kd=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(jd).forEach(function(a){kd.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);jd[b]=jd[a]})});function ld(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||jd.hasOwnProperty(a)&&jd[a]?(\"\"+b).trim():b+\"px\"}\nfunction md(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=ld(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var nd=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction od(a,b){if(b){if(nd[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(u(137,a,\"\"));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(u(60));if(!(\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML))throw Error(u(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(u(62,\"\"));}}\nfunction pd(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var qd=Mb.html;function rd(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=cc(a);b=wa[b];for(var d=0;d<b.length;d++)uc(b[d],a,c)}function sd(){}\nfunction td(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function ud(a){for(;a&&a.firstChild;)a=a.firstChild;return a}function vd(a,b){var c=ud(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=ud(c)}}\nfunction wd(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?wd(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}function xd(){for(var a=window,b=td();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=td(a.document)}return b}\nfunction yd(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}var zd=\"$\",Ad=\"/$\",Bd=\"$?\",Cd=\"$!\",Dd=null,Ed=null;function Fd(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\nfunction Gd(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var Hd=\"function\"===typeof setTimeout?setTimeout:void 0,Id=\"function\"===typeof clearTimeout?clearTimeout:void 0;function Jd(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}\nfunction Kd(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(c===zd||c===Cd||c===Bd){if(0===b)return a;b--}else c===Ad&&b++}a=a.previousSibling}return null}var Ld=Math.random().toString(36).slice(2),Md=\"__reactInternalInstance$\"+Ld,Nd=\"__reactEventHandlers$\"+Ld,Od=\"__reactContainere$\"+Ld;\nfunction tc(a){var b=a[Md];if(b)return b;for(var c=a.parentNode;c;){if(b=c[Od]||c[Md]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Kd(a);null!==a;){if(c=a[Md])return c;a=Kd(a)}return b}a=c;c=a.parentNode}return null}function Nc(a){a=a[Md]||a[Od];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function Pd(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(u(33));}function Qd(a){return a[Nd]||null}\nfunction Rd(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction Sd(a,b){var c=a.stateNode;if(!c)return null;var d=la(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==typeof c)throw Error(u(231,\nb,typeof c));return c}function Td(a,b,c){if(b=Sd(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=ic(c._dispatchListeners,b),c._dispatchInstances=ic(c._dispatchInstances,a)}function Ud(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=Rd(b);for(b=c.length;0<b--;)Td(c[b],\"captured\",a);for(b=0;b<c.length;b++)Td(c[b],\"bubbled\",a)}}\nfunction Vd(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Sd(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=ic(c._dispatchListeners,b),c._dispatchInstances=ic(c._dispatchInstances,a))}function Wd(a){a&&a.dispatchConfig.registrationName&&Vd(a._targetInst,null,a)}function Xd(a){jc(a,Ud)}var Yd=null,Zd=null,$d=null;\nfunction ae(){if($d)return $d;var a,b=Zd,c=b.length,d,e=\"value\"in Yd?Yd.value:Yd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return $d=e.slice(a,1<d?1-d:void 0)}function be(){return!0}function ce(){return!1}\nfunction G(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?be:ce;this.isPropagationStopped=ce;return this}\nn(G.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=be)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=be)},persist:function(){this.isPersistent=be},isPersistent:ce,destructor:function(){var a=this.constructor.Interface,\nb;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=ce;this._dispatchInstances=this._dispatchListeners=null}});G.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\nG.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;de(c);return c};de(G);function ee(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}\nfunction fe(a){if(!(a instanceof this))throw Error(u(279));a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function de(a){a.eventPool=[];a.getPooled=ee;a.release=fe}var ge=G.extend({data:null}),he=G.extend({data:null}),ie=[9,13,27,32],je=ya&&\"CompositionEvent\"in window,ke=null;ya&&\"documentMode\"in document&&(ke=document.documentMode);\nvar le=ya&&\"TextEvent\"in window&&!ke,me=ya&&(!je||ke&&8<ke&&11>=ke),ne=String.fromCharCode(32),oe={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},pe=!1;\nfunction qe(a,b){switch(a){case \"keyup\":return-1!==ie.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function re(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var se=!1;function te(a,b){switch(a){case \"compositionend\":return re(b);case \"keypress\":if(32!==b.which)return null;pe=!0;return ne;case \"textInput\":return a=b.data,a===ne&&pe?null:a;default:return null}}\nfunction ue(a,b){if(se)return\"compositionend\"===a||!je&&qe(a,b)?(a=ae(),$d=Zd=Yd=null,se=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return me&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar ve={eventTypes:oe,extractEvents:function(a,b,c,d){var e;if(je)b:{switch(a){case \"compositionstart\":var f=oe.compositionStart;break b;case \"compositionend\":f=oe.compositionEnd;break b;case \"compositionupdate\":f=oe.compositionUpdate;break b}f=void 0}else se?qe(a,c)&&(f=oe.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(f=oe.compositionStart);f?(me&&\"ko\"!==c.locale&&(se||f!==oe.compositionStart?f===oe.compositionEnd&&se&&(e=ae()):(Yd=d,Zd=\"value\"in Yd?Yd.value:Yd.textContent,se=!0)),f=ge.getPooled(f,\nb,c,d),e?f.data=e:(e=re(c),null!==e&&(f.data=e)),Xd(f),e=f):e=null;(a=le?te(a,c):ue(a,c))?(b=he.getPooled(oe.beforeInput,b,c,d),b.data=a,Xd(b)):b=null;return null===e?b:null===b?e:[e,b]}},we={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function xe(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!we[a.type]:\"textarea\"===b?!0:!1}\nvar ye={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function ze(a,b,c){a=G.getPooled(ye.change,a,b,c);a.type=\"change\";Da(c);Xd(a);return a}var Ae=null,Be=null;function Ce(a){mc(a)}function De(a){var b=Pd(a);if(yb(b))return a}function Ee(a,b){if(\"change\"===a)return b}var Fe=!1;ya&&(Fe=oc(\"input\")&&(!document.documentMode||9<document.documentMode));\nfunction Ge(){Ae&&(Ae.detachEvent(\"onpropertychange\",He),Be=Ae=null)}function He(a){if(\"value\"===a.propertyName&&De(Be))if(a=ze(Be,a,nc(a)),Ja)mc(a);else{Ja=!0;try{Fa(Ce,a)}finally{Ja=!1,La()}}}function Ie(a,b,c){\"focus\"===a?(Ge(),Ae=b,Be=c,Ae.attachEvent(\"onpropertychange\",He)):\"blur\"===a&&Ge()}function Je(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return De(Be)}function Ke(a,b){if(\"click\"===a)return De(b)}function Le(a,b){if(\"input\"===a||\"change\"===a)return De(b)}\nvar Me={eventTypes:ye,_isInputEventSupported:Fe,extractEvents:function(a,b,c,d){var e=b?Pd(b):window,f=e.nodeName&&e.nodeName.toLowerCase();if(\"select\"===f||\"input\"===f&&\"file\"===e.type)var g=Ee;else if(xe(e))if(Fe)g=Le;else{g=Je;var h=Ie}else(f=e.nodeName)&&\"input\"===f.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(g=Ke);if(g&&(g=g(a,b)))return ze(g,c,d);h&&h(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&Db(e,\"number\",e.value)}},Ne=G.extend({view:null,detail:null}),\nOe={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pe(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Oe[a])?!!b[a]:!1}function Qe(){return Pe}\nvar Re=0,Se=0,Te=!1,Ue=!1,Ve=Ne.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Qe,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if(\"movementX\"in a)return a.movementX;var b=Re;Re=a.screenX;return Te?\"mousemove\"===a.type?a.screenX-b:0:(Te=!0,0)},movementY:function(a){if(\"movementY\"in a)return a.movementY;\nvar b=Se;Se=a.screenY;return Ue?\"mousemove\"===a.type?a.screenY-b:0:(Ue=!0,0)}}),We=Ve.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Xe={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"mouseout\",\"mouseover\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",\ndependencies:[\"pointerout\",\"pointerover\"]}},Ye={eventTypes:Xe,extractEvents:function(a,b,c,d,e){var f=\"mouseover\"===a||\"pointerover\"===a,g=\"mouseout\"===a||\"pointerout\"===a;if(f&&0===(e&32)&&(c.relatedTarget||c.fromElement)||!g&&!f)return null;f=d.window===d?d:(f=d.ownerDocument)?f.defaultView||f.parentWindow:window;if(g){if(g=b,b=(b=c.relatedTarget||c.toElement)?tc(b):null,null!==b){var h=dc(b);if(b!==h||5!==b.tag&&6!==b.tag)b=null}}else g=null;if(g===b)return null;if(\"mouseout\"===a||\"mouseover\"===\na){var k=Ve;var l=Xe.mouseLeave;var m=Xe.mouseEnter;var p=\"mouse\"}else if(\"pointerout\"===a||\"pointerover\"===a)k=We,l=Xe.pointerLeave,m=Xe.pointerEnter,p=\"pointer\";a=null==g?f:Pd(g);f=null==b?f:Pd(b);l=k.getPooled(l,g,c,d);l.type=p+\"leave\";l.target=a;l.relatedTarget=f;c=k.getPooled(m,b,c,d);c.type=p+\"enter\";c.target=f;c.relatedTarget=a;d=g;p=b;if(d&&p)a:{k=d;m=p;g=0;for(a=k;a;a=Rd(a))g++;a=0;for(b=m;b;b=Rd(b))a++;for(;0<g-a;)k=Rd(k),g--;for(;0<a-g;)m=Rd(m),a--;for(;g--;){if(k===m||k===m.alternate)break a;\nk=Rd(k);m=Rd(m)}k=null}else k=null;m=k;for(k=[];d&&d!==m;){g=d.alternate;if(null!==g&&g===m)break;k.push(d);d=Rd(d)}for(d=[];p&&p!==m;){g=p.alternate;if(null!==g&&g===m)break;d.push(p);p=Rd(p)}for(p=0;p<k.length;p++)Vd(k[p],\"bubbled\",l);for(p=d.length;0<p--;)Vd(d[p],\"captured\",c);return 0===(e&64)?[l]:[l,c]}};function Ze(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var $e=\"function\"===typeof Object.is?Object.is:Ze,af=Object.prototype.hasOwnProperty;\nfunction bf(a,b){if($e(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!af.call(b,c[d])||!$e(a[c[d]],b[c[d]]))return!1;return!0}\nvar cf=ya&&\"documentMode\"in document&&11>=document.documentMode,df={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},ef=null,ff=null,gf=null,hf=!1;\nfunction jf(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if(hf||null==ef||ef!==td(c))return null;c=ef;\"selectionStart\"in c&&yd(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return gf&&bf(gf,c)?null:(gf=c,a=G.getPooled(df.select,ff,a,b),a.type=\"select\",a.target=ef,Xd(a),a)}\nvar kf={eventTypes:df,extractEvents:function(a,b,c,d,e,f){e=f||(d.window===d?d.document:9===d.nodeType?d:d.ownerDocument);if(!(f=!e)){a:{e=cc(e);f=wa.onSelect;for(var g=0;g<f.length;g++)if(!e.has(f[g])){e=!1;break a}e=!0}f=!e}if(f)return null;e=b?Pd(b):window;switch(a){case \"focus\":if(xe(e)||\"true\"===e.contentEditable)ef=e,ff=b,gf=null;break;case \"blur\":gf=ff=ef=null;break;case \"mousedown\":hf=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":return hf=!1,jf(c,d);case \"selectionchange\":if(cf)break;\ncase \"keydown\":case \"keyup\":return jf(c,d)}return null}},lf=G.extend({animationName:null,elapsedTime:null,pseudoElement:null}),mf=G.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),nf=Ne.extend({relatedTarget:null});function of(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar pf={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},qf={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},rf=Ne.extend({key:function(a){if(a.key){var b=pf[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=of(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?qf[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Qe,charCode:function(a){return\"keypress\"===\na.type?of(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?of(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),sf=Ve.extend({dataTransfer:null}),tf=Ne.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Qe}),uf=G.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),vf=Ve.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\na?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),wf={eventTypes:Wc,extractEvents:function(a,b,c,d){var e=Yc.get(a);if(!e)return null;switch(a){case \"keypress\":if(0===of(c))return null;case \"keydown\":case \"keyup\":a=rf;break;case \"blur\":case \"focus\":a=nf;break;case \"click\":if(2===c.button)return null;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=\nVe;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=sf;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=tf;break;case Xb:case Yb:case Zb:a=lf;break;case $b:a=uf;break;case \"scroll\":a=Ne;break;case \"wheel\":a=vf;break;case \"copy\":case \"cut\":case \"paste\":a=mf;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=\nWe;break;default:a=G}b=a.getPooled(e,b,c,d);Xd(b);return b}};if(pa)throw Error(u(101));pa=Array.prototype.slice.call(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));ra();var xf=Nc;la=Qd;ma=xf;na=Pd;xa({SimpleEventPlugin:wf,EnterLeaveEventPlugin:Ye,ChangeEventPlugin:Me,SelectEventPlugin:kf,BeforeInputEventPlugin:ve});var yf=[],zf=-1;function H(a){0>zf||(a.current=yf[zf],yf[zf]=null,zf--)}\nfunction I(a,b){zf++;yf[zf]=a.current;a.current=b}var Af={},J={current:Af},K={current:!1},Bf=Af;function Cf(a,b){var c=a.type.contextTypes;if(!c)return Af;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function L(a){a=a.childContextTypes;return null!==a&&void 0!==a}\nfunction Df(){H(K);H(J)}function Ef(a,b,c){if(J.current!==Af)throw Error(u(168));I(J,b);I(K,c)}function Ff(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(u(108,pb(b)||\"Unknown\",e));return n({},c,{},d)}function Gf(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Af;Bf=J.current;I(J,a);I(K,K.current);return!0}\nfunction Hf(a,b,c){var d=a.stateNode;if(!d)throw Error(u(169));c?(a=Ff(a,b,Bf),d.__reactInternalMemoizedMergedChildContext=a,H(K),H(J),I(J,a)):H(K);I(K,c)}\nvar If=r.unstable_runWithPriority,Jf=r.unstable_scheduleCallback,Kf=r.unstable_cancelCallback,Lf=r.unstable_requestPaint,Mf=r.unstable_now,Nf=r.unstable_getCurrentPriorityLevel,Of=r.unstable_ImmediatePriority,Pf=r.unstable_UserBlockingPriority,Qf=r.unstable_NormalPriority,Rf=r.unstable_LowPriority,Sf=r.unstable_IdlePriority,Tf={},Uf=r.unstable_shouldYield,Vf=void 0!==Lf?Lf:function(){},Wf=null,Xf=null,Yf=!1,Zf=Mf(),$f=1E4>Zf?Mf:function(){return Mf()-Zf};\nfunction ag(){switch(Nf()){case Of:return 99;case Pf:return 98;case Qf:return 97;case Rf:return 96;case Sf:return 95;default:throw Error(u(332));}}function bg(a){switch(a){case 99:return Of;case 98:return Pf;case 97:return Qf;case 96:return Rf;case 95:return Sf;default:throw Error(u(332));}}function cg(a,b){a=bg(a);return If(a,b)}function dg(a,b,c){a=bg(a);return Jf(a,b,c)}function eg(a){null===Wf?(Wf=[a],Xf=Jf(Of,fg)):Wf.push(a);return Tf}function gg(){if(null!==Xf){var a=Xf;Xf=null;Kf(a)}fg()}\nfunction fg(){if(!Yf&&null!==Wf){Yf=!0;var a=0;try{var b=Wf;cg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});Wf=null}catch(c){throw null!==Wf&&(Wf=Wf.slice(a+1)),Jf(Of,gg),c;}finally{Yf=!1}}}function hg(a,b,c){c/=10;return 1073741821-(((1073741821-a+b/10)/c|0)+1)*c}function ig(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}var jg={current:null},kg=null,lg=null,mg=null;function ng(){mg=lg=kg=null}\nfunction og(a){var b=jg.current;H(jg);a.type._context._currentValue=b}function pg(a,b){for(;null!==a;){var c=a.alternate;if(a.childExpirationTime<b)a.childExpirationTime=b,null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);else if(null!==c&&c.childExpirationTime<b)c.childExpirationTime=b;else break;a=a.return}}function qg(a,b){kg=a;mg=lg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(a.expirationTime>=b&&(rg=!0),a.firstContext=null)}\nfunction sg(a,b){if(mg!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)mg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===lg){if(null===kg)throw Error(u(308));lg=b;kg.dependencies={expirationTime:0,firstContext:b,responders:null}}else lg=lg.next=b}return a._currentValue}var tg=!1;function ug(a){a.updateQueue={baseState:a.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}\nfunction vg(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,baseQueue:a.baseQueue,shared:a.shared,effects:a.effects})}function wg(a,b){a={expirationTime:a,suspenseConfig:b,tag:0,payload:null,callback:null,next:null};return a.next=a}function xg(a,b){a=a.updateQueue;if(null!==a){a=a.shared;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}}\nfunction yg(a,b){var c=a.alternate;null!==c&&vg(c,a);a=a.updateQueue;c=a.baseQueue;null===c?(a.baseQueue=b.next=b,b.next=b):(b.next=c.next,c.next=b)}\nfunction zg(a,b,c,d){var e=a.updateQueue;tg=!1;var f=e.baseQueue,g=e.shared.pending;if(null!==g){if(null!==f){var h=f.next;f.next=g.next;g.next=h}f=g;e.shared.pending=null;h=a.alternate;null!==h&&(h=h.updateQueue,null!==h&&(h.baseQueue=g))}if(null!==f){h=f.next;var k=e.baseState,l=0,m=null,p=null,x=null;if(null!==h){var z=h;do{g=z.expirationTime;if(g<d){var ca={expirationTime:z.expirationTime,suspenseConfig:z.suspenseConfig,tag:z.tag,payload:z.payload,callback:z.callback,next:null};null===x?(p=x=\nca,m=k):x=x.next=ca;g>l&&(l=g)}else{null!==x&&(x=x.next={expirationTime:1073741823,suspenseConfig:z.suspenseConfig,tag:z.tag,payload:z.payload,callback:z.callback,next:null});Ag(g,z.suspenseConfig);a:{var D=a,t=z;g=b;ca=c;switch(t.tag){case 1:D=t.payload;if(\"function\"===typeof D){k=D.call(ca,k,g);break a}k=D;break a;case 3:D.effectTag=D.effectTag&-4097|64;case 0:D=t.payload;g=\"function\"===typeof D?D.call(ca,k,g):D;if(null===g||void 0===g)break a;k=n({},k,g);break a;case 2:tg=!0}}null!==z.callback&&\n(a.effectTag|=32,g=e.effects,null===g?e.effects=[z]:g.push(z))}z=z.next;if(null===z||z===h)if(g=e.shared.pending,null===g)break;else z=f.next=g.next,g.next=h,e.baseQueue=f=g,e.shared.pending=null}while(1)}null===x?m=k:x.next=p;e.baseState=m;e.baseQueue=x;Bg(l);a.expirationTime=l;a.memoizedState=k}}\nfunction Cg(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=e;e=c;if(\"function\"!==typeof d)throw Error(u(191,d));d.call(e)}}}var Dg=Wa.ReactCurrentBatchConfig,Eg=(new aa.Component).refs;function Fg(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;0===a.expirationTime&&(a.updateQueue.baseState=c)}\nvar Jg={isMounted:function(a){return(a=a._reactInternalFiber)?dc(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=Gg(),e=Dg.suspense;d=Hg(d,a,e);e=wg(d,e);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);xg(a,e);Ig(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=Gg(),e=Dg.suspense;d=Hg(d,a,e);e=wg(d,e);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);xg(a,e);Ig(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=Gg(),d=Dg.suspense;\nc=Hg(c,a,d);d=wg(c,d);d.tag=2;void 0!==b&&null!==b&&(d.callback=b);xg(a,d);Ig(a,c)}};function Kg(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!bf(c,d)||!bf(e,f):!0}\nfunction Lg(a,b,c){var d=!1,e=Af;var f=b.contextType;\"object\"===typeof f&&null!==f?f=sg(f):(e=L(b)?Bf:J.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Cf(a,e):Af);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Jg;a.stateNode=b;b._reactInternalFiber=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Mg(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Jg.enqueueReplaceState(b,b.state,null)}\nfunction Ng(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Eg;ug(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=sg(f):(f=L(b)?Bf:J.current,e.context=Cf(a,f));zg(a,c,e,d);e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Fg(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||\n(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Jg.enqueueReplaceState(e,e.state,null),zg(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.effectTag|=4)}var Og=Array.isArray;\nfunction Pg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(u(309));var d=c.stateNode}if(!d)throw Error(u(147,a));var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Eg&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if(\"string\"!==typeof a)throw Error(u(284));if(!c._owner)throw Error(u(290,a));}return a}\nfunction Qg(a,b){if(\"textarea\"!==a.type)throw Error(u(31,\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\"));}\nfunction Rg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Sg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Tg(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props),d.ref=Pg(a,b,c),d.return=a,d;d=Ug(c.type,c.key,c.props,null,a.mode,d);d.ref=Pg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==\nc.implementation)return b=Vg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Wg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function p(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Tg(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case Za:return c=Ug(b.type,b.key,b.props,null,a.mode,c),c.ref=Pg(a,null,b),c.return=a,c;case $a:return b=Vg(b,a.mode,c),b.return=a,b}if(Og(b)||\nnb(b))return b=Wg(b,a.mode,c,null),b.return=a,b;Qg(a,b)}return null}function x(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case Za:return c.key===e?c.type===ab?m(a,b,c.props.children,d,e):k(a,b,c,d):null;case $a:return c.key===e?l(a,b,c,d):null}if(Og(c)||nb(c))return null!==e?null:m(a,b,c,d,null);Qg(a,c)}return null}function z(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=\na.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case Za:return a=a.get(null===d.key?c:d.key)||null,d.type===ab?m(b,a,d.props.children,e,d.key):k(b,a,d,e);case $a:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Og(d)||nb(d))return a=a.get(c)||null,m(b,a,d,e,null);Qg(b,d)}return null}function ca(e,g,h,k){for(var l=null,t=null,m=g,y=g=0,A=null;null!==m&&y<h.length;y++){m.index>y?(A=m,m=null):A=m.sibling;var q=x(e,m,h[y],k);if(null===q){null===m&&(m=A);break}a&&\nm&&null===q.alternate&&b(e,m);g=f(q,g,y);null===t?l=q:t.sibling=q;t=q;m=A}if(y===h.length)return c(e,m),l;if(null===m){for(;y<h.length;y++)m=p(e,h[y],k),null!==m&&(g=f(m,g,y),null===t?l=m:t.sibling=m,t=m);return l}for(m=d(e,m);y<h.length;y++)A=z(m,e,y,h[y],k),null!==A&&(a&&null!==A.alternate&&m.delete(null===A.key?y:A.key),g=f(A,g,y),null===t?l=A:t.sibling=A,t=A);a&&m.forEach(function(a){return b(e,a)});return l}function D(e,g,h,l){var k=nb(h);if(\"function\"!==typeof k)throw Error(u(150));h=k.call(h);\nif(null==h)throw Error(u(151));for(var m=k=null,t=g,y=g=0,A=null,q=h.next();null!==t&&!q.done;y++,q=h.next()){t.index>y?(A=t,t=null):A=t.sibling;var D=x(e,t,q.value,l);if(null===D){null===t&&(t=A);break}a&&t&&null===D.alternate&&b(e,t);g=f(D,g,y);null===m?k=D:m.sibling=D;m=D;t=A}if(q.done)return c(e,t),k;if(null===t){for(;!q.done;y++,q=h.next())q=p(e,q.value,l),null!==q&&(g=f(q,g,y),null===m?k=q:m.sibling=q,m=q);return k}for(t=d(e,t);!q.done;y++,q=h.next())q=z(t,e,y,q.value,l),null!==q&&(a&&null!==\nq.alternate&&t.delete(null===q.key?y:q.key),g=f(q,g,y),null===m?k=q:m.sibling=q,m=q);a&&t.forEach(function(a){return b(e,a)});return k}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ab&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case Za:a:{l=f.key;for(k=d;null!==k;){if(k.key===l){switch(k.tag){case 7:if(f.type===ab){c(a,k.sibling);d=e(k,f.props.children);d.return=a;a=d;break a}break;default:if(k.elementType===f.type){c(a,\nk.sibling);d=e(k,f.props);d.ref=Pg(a,k,f);d.return=a;a=d;break a}}c(a,k);break}else b(a,k);k=k.sibling}f.type===ab?(d=Wg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Ug(f.type,f.key,f.props,null,a.mode,h),h.ref=Pg(a,d,f),h.return=a,a=h)}return g(a);case $a:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=\nd.sibling}d=Vg(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):(c(a,d),d=Tg(f,a.mode,h),d.return=a,a=d),g(a);if(Og(f))return ca(a,d,f,h);if(nb(f))return D(a,d,f,h);l&&Qg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 0:throw a=a.type,Error(u(152,a.displayName||a.name||\"Component\"));}return c(a,d)}}var Xg=Rg(!0),Yg=Rg(!1),Zg={},$g={current:Zg},ah={current:Zg},bh={current:Zg};\nfunction ch(a){if(a===Zg)throw Error(u(174));return a}function dh(a,b){I(bh,b);I(ah,a);I($g,Zg);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:Ob(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=Ob(b,a)}H($g);I($g,b)}function eh(){H($g);H(ah);H(bh)}function fh(a){ch(bh.current);var b=ch($g.current);var c=Ob(b,a.type);b!==c&&(I(ah,a),I($g,c))}function gh(a){ah.current===a&&(H($g),H(ah))}var M={current:0};\nfunction hh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||c.data===Bd||c.data===Cd))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.effectTag&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}function ih(a,b){return{responder:a,props:b}}\nvar jh=Wa.ReactCurrentDispatcher,kh=Wa.ReactCurrentBatchConfig,lh=0,N=null,O=null,P=null,mh=!1;function Q(){throw Error(u(321));}function nh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!$e(a[c],b[c]))return!1;return!0}\nfunction oh(a,b,c,d,e,f){lh=f;N=b;b.memoizedState=null;b.updateQueue=null;b.expirationTime=0;jh.current=null===a||null===a.memoizedState?ph:qh;a=c(d,e);if(b.expirationTime===lh){f=0;do{b.expirationTime=0;if(!(25>f))throw Error(u(301));f+=1;P=O=null;b.updateQueue=null;jh.current=rh;a=c(d,e)}while(b.expirationTime===lh)}jh.current=sh;b=null!==O&&null!==O.next;lh=0;P=O=N=null;mh=!1;if(b)throw Error(u(300));return a}\nfunction th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===P?N.memoizedState=P=a:P=P.next=a;return P}function uh(){if(null===O){var a=N.alternate;a=null!==a?a.memoizedState:null}else a=O.next;var b=null===P?N.memoizedState:P.next;if(null!==b)P=b,O=a;else{if(null===a)throw Error(u(310));O=a;a={memoizedState:O.memoizedState,baseState:O.baseState,baseQueue:O.baseQueue,queue:O.queue,next:null};null===P?N.memoizedState=P=a:P=P.next=a}return P}\nfunction vh(a,b){return\"function\"===typeof b?b(a):b}\nfunction wh(a){var b=uh(),c=b.queue;if(null===c)throw Error(u(311));c.lastRenderedReducer=a;var d=O,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){e=e.next;d=d.baseState;var h=g=f=null,k=e;do{var l=k.expirationTime;if(l<lh){var m={expirationTime:k.expirationTime,suspenseConfig:k.suspenseConfig,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null};null===h?(g=h=m,f=d):h=h.next=m;l>N.expirationTime&&\n(N.expirationTime=l,Bg(l))}else null!==h&&(h=h.next={expirationTime:1073741823,suspenseConfig:k.suspenseConfig,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null}),Ag(l,k.suspenseConfig),d=k.eagerReducer===a?k.eagerState:a(d,k.action);k=k.next}while(null!==k&&k!==e);null===h?f=d:h.next=g;$e(d,b.memoizedState)||(rg=!0);b.memoizedState=d;b.baseState=f;b.baseQueue=h;c.lastRenderedState=d}return[b.memoizedState,c.dispatch]}\nfunction xh(a){var b=uh(),c=b.queue;if(null===c)throw Error(u(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);$e(f,b.memoizedState)||(rg=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}\nfunction yh(a){var b=th();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={pending:null,dispatch:null,lastRenderedReducer:vh,lastRenderedState:a};a=a.dispatch=zh.bind(null,N,a);return[b.memoizedState,a]}function Ah(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=N.updateQueue;null===b?(b={lastEffect:null},N.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}\nfunction Bh(){return uh().memoizedState}function Ch(a,b,c,d){var e=th();N.effectTag|=a;e.memoizedState=Ah(1|b,c,void 0,void 0===d?null:d)}function Dh(a,b,c,d){var e=uh();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&nh(d,g.deps)){Ah(b,c,f,d);return}}N.effectTag|=a;e.memoizedState=Ah(1|b,c,f,d)}function Eh(a,b){return Ch(516,4,a,b)}function Fh(a,b){return Dh(516,4,a,b)}function Gh(a,b){return Dh(4,2,a,b)}\nfunction Hh(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function Ih(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Dh(4,2,Hh.bind(null,b,a),c)}function Jh(){}function Kh(a,b){th().memoizedState=[a,void 0===b?null:b];return a}function Lh(a,b){var c=uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&nh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction Mh(a,b){var c=uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&nh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function Nh(a,b,c){var d=ag();cg(98>d?98:d,function(){a(!0)});cg(97<d?97:d,function(){var d=kh.suspense;kh.suspense=void 0===b?null:b;try{a(!1),c()}finally{kh.suspense=d}})}\nfunction zh(a,b,c){var d=Gg(),e=Dg.suspense;d=Hg(d,a,e);e={expirationTime:d,suspenseConfig:e,action:c,eagerReducer:null,eagerState:null,next:null};var f=b.pending;null===f?e.next=e:(e.next=f.next,f.next=e);b.pending=e;f=a.alternate;if(a===N||null!==f&&f===N)mh=!0,e.expirationTime=lh,N.expirationTime=lh;else{if(0===a.expirationTime&&(null===f||0===f.expirationTime)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.eagerReducer=f;e.eagerState=h;if($e(h,g))return}catch(k){}finally{}Ig(a,\nd)}}\nvar sh={readContext:sg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useResponder:Q,useDeferredValue:Q,useTransition:Q},ph={readContext:sg,useCallback:Kh,useContext:sg,useEffect:Eh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Ch(4,2,Hh.bind(null,b,a),c)},useLayoutEffect:function(a,b){return Ch(4,2,a,b)},useMemo:function(a,b){var c=th();b=void 0===b?null:b;a=a();c.memoizedState=[a,\nb];return a},useReducer:function(a,b,c){var d=th();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={pending:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=zh.bind(null,N,a);return[d.memoizedState,a]},useRef:function(a){var b=th();a={current:a};return b.memoizedState=a},useState:yh,useDebugValue:Jh,useResponder:ih,useDeferredValue:function(a,b){var c=yh(a),d=c[0],e=c[1];Eh(function(){var c=kh.suspense;kh.suspense=void 0===b?null:b;try{e(a)}finally{kh.suspense=\nc}},[a,b]);return d},useTransition:function(a){var b=yh(!1),c=b[0];b=b[1];return[Kh(Nh.bind(null,b,a),[b,a]),c]}},qh={readContext:sg,useCallback:Lh,useContext:sg,useEffect:Fh,useImperativeHandle:Ih,useLayoutEffect:Gh,useMemo:Mh,useReducer:wh,useRef:Bh,useState:function(){return wh(vh)},useDebugValue:Jh,useResponder:ih,useDeferredValue:function(a,b){var c=wh(vh),d=c[0],e=c[1];Fh(function(){var c=kh.suspense;kh.suspense=void 0===b?null:b;try{e(a)}finally{kh.suspense=c}},[a,b]);return d},useTransition:function(a){var b=\nwh(vh),c=b[0];b=b[1];return[Lh(Nh.bind(null,b,a),[b,a]),c]}},rh={readContext:sg,useCallback:Lh,useContext:sg,useEffect:Fh,useImperativeHandle:Ih,useLayoutEffect:Gh,useMemo:Mh,useReducer:xh,useRef:Bh,useState:function(){return xh(vh)},useDebugValue:Jh,useResponder:ih,useDeferredValue:function(a,b){var c=xh(vh),d=c[0],e=c[1];Fh(function(){var c=kh.suspense;kh.suspense=void 0===b?null:b;try{e(a)}finally{kh.suspense=c}},[a,b]);return d},useTransition:function(a){var b=xh(vh),c=b[0];b=b[1];return[Lh(Nh.bind(null,\nb,a),[b,a]),c]}},Oh=null,Ph=null,Qh=!1;function Rh(a,b){var c=Sh(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}\nfunction Th(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\nfunction Uh(a){if(Qh){var b=Ph;if(b){var c=b;if(!Th(a,b)){b=Jd(c.nextSibling);if(!b||!Th(a,b)){a.effectTag=a.effectTag&-1025|2;Qh=!1;Oh=a;return}Rh(Oh,c)}Oh=a;Ph=Jd(b.firstChild)}else a.effectTag=a.effectTag&-1025|2,Qh=!1,Oh=a}}function Vh(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;Oh=a}\nfunction Wh(a){if(a!==Oh)return!1;if(!Qh)return Vh(a),Qh=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!Gd(b,a.memoizedProps))for(b=Ph;b;)Rh(a,b),b=Jd(b.nextSibling);Vh(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(u(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(c===Ad){if(0===b){Ph=Jd(a.nextSibling);break a}b--}else c!==zd&&c!==Cd&&c!==Bd||b++}a=a.nextSibling}Ph=null}}else Ph=Oh?Jd(a.stateNode.nextSibling):null;return!0}\nfunction Xh(){Ph=Oh=null;Qh=!1}var Yh=Wa.ReactCurrentOwner,rg=!1;function R(a,b,c,d){b.child=null===a?Yg(b,null,c,d):Xg(b,a.child,c,d)}function Zh(a,b,c,d,e){c=c.render;var f=b.ref;qg(b,e);d=oh(a,b,c,d,f,e);if(null!==a&&!rg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),$h(a,b,e);b.effectTag|=1;R(a,b,d,e);return b.child}\nfunction ai(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!bi(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ci(a,b,g,d,e,f);a=Ug(c.type,null,d,null,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(e<f&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:bf,c(e,d)&&a.ref===b.ref))return $h(a,b,f);b.effectTag|=1;a=Sg(g,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction ci(a,b,c,d,e,f){return null!==a&&bf(a.memoizedProps,d)&&a.ref===b.ref&&(rg=!1,e<f)?(b.expirationTime=a.expirationTime,$h(a,b,f)):di(a,b,c,d,f)}function ei(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function di(a,b,c,d,e){var f=L(c)?Bf:J.current;f=Cf(b,f);qg(b,e);c=oh(a,b,c,d,f,e);if(null!==a&&!rg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),$h(a,b,e);b.effectTag|=1;R(a,b,c,e);return b.child}\nfunction fi(a,b,c,d,e){if(L(c)){var f=!0;Gf(b)}else f=!1;qg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),Lg(b,c,d),Ng(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=sg(l):(l=L(c)?Bf:J.current,l=Cf(b,l));var m=c.getDerivedStateFromProps,p=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;p||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Mg(b,g,d,l);tg=!1;var x=b.memoizedState;g.state=x;zg(b,d,g,e);k=b.memoizedState;h!==d||x!==k||K.current||tg?(\"function\"===typeof m&&(Fg(b,c,m,d),k=b.memoizedState),(h=tg||Kg(b,c,h,d,x,k,l))?(p||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===\ntypeof g.componentDidMount&&(b.effectTag|=4)):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,vg(a,b),h=b.memoizedProps,g.props=b.type===b.elementType?h:ig(b.type,h),k=g.context,l=c.contextType,\"object\"===typeof l&&null!==l?l=sg(l):(l=L(c)?Bf:J.current,l=Cf(b,l)),m=c.getDerivedStateFromProps,(p=\"function\"===typeof m||\"function\"===\ntypeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Mg(b,g,d,l),tg=!1,k=b.memoizedState,g.state=k,zg(b,d,g,e),x=b.memoizedState,h!==d||k!==x||K.current||tg?(\"function\"===typeof m&&(Fg(b,c,m,d),x=b.memoizedState),(m=tg||Kg(b,c,h,d,k,x,l))?(p||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,\nx,l),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,x,l)),\"function\"===typeof g.componentDidUpdate&&(b.effectTag|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),b.memoizedProps=d,b.memoizedState=x),g.props=d,g.state=x,g.context=l,d=m):\n(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),d=!1);return gi(a,b,c,d,f,e)}\nfunction gi(a,b,c,d,e,f){ei(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Hf(b,c,!1),$h(a,b,f);d=b.stateNode;Yh.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.effectTag|=1;null!==a&&g?(b.child=Xg(b,a.child,null,f),b.child=Xg(b,null,h,f)):R(a,b,h,f);b.memoizedState=d.state;e&&Hf(b,c,!0);return b.child}function hi(a){var b=a.stateNode;b.pendingContext?Ef(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Ef(a,b.context,!1);dh(a,b.containerInfo)}\nvar ii={dehydrated:null,retryTime:0};\nfunction ji(a,b,c){var d=b.mode,e=b.pendingProps,f=M.current,g=!1,h;(h=0!==(b.effectTag&64))||(h=0!==(f&2)&&(null===a||null!==a.memoizedState));h?(g=!0,b.effectTag&=-65):null!==a&&null===a.memoizedState||void 0===e.fallback||!0===e.unstable_avoidThisFallback||(f|=1);I(M,f&1);if(null===a){void 0!==e.fallback&&Uh(b);if(g){g=e.fallback;e=Wg(null,d,0,null);e.return=b;if(0===(b.mode&2))for(a=null!==b.memoizedState?b.child.child:b.child,e.child=a;null!==a;)a.return=e,a=a.sibling;c=Wg(g,d,c,null);c.return=\nb;e.sibling=c;b.memoizedState=ii;b.child=e;return c}d=e.children;b.memoizedState=null;return b.child=Yg(b,null,d,c)}if(null!==a.memoizedState){a=a.child;d=a.sibling;if(g){e=e.fallback;c=Sg(a,a.pendingProps);c.return=b;if(0===(b.mode&2)&&(g=null!==b.memoizedState?b.child.child:b.child,g!==a.child))for(c.child=g;null!==g;)g.return=c,g=g.sibling;d=Sg(d,e);d.return=b;c.sibling=d;c.childExpirationTime=0;b.memoizedState=ii;b.child=c;return d}c=Xg(b,a.child,e.children,c);b.memoizedState=null;return b.child=\nc}a=a.child;if(g){g=e.fallback;e=Wg(null,d,0,null);e.return=b;e.child=a;null!==a&&(a.return=e);if(0===(b.mode&2))for(a=null!==b.memoizedState?b.child.child:b.child,e.child=a;null!==a;)a.return=e,a=a.sibling;c=Wg(g,d,c,null);c.return=b;e.sibling=c;c.effectTag|=2;e.childExpirationTime=0;b.memoizedState=ii;b.child=e;return c}b.memoizedState=null;return b.child=Xg(b,a,e.children,c)}\nfunction ki(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);pg(a.return,b)}function li(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailExpiration:0,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.renderingStartTime=0,g.last=d,g.tail=c,g.tailExpiration=0,g.tailMode=e,g.lastEffect=f)}\nfunction mi(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;R(a,b,d.children,c);d=M.current;if(0!==(d&2))d=d&1|2,b.effectTag|=64;else{if(null!==a&&0!==(a.effectTag&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&ki(a,c);else if(19===a.tag)ki(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}I(M,d);if(0===(b.mode&2))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===hh(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);li(b,!1,e,c,f,b.lastEffect);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===hh(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}li(b,!0,c,null,f,b.lastEffect);break;case \"together\":li(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}\nfunction $h(a,b,c){null!==a&&(b.dependencies=a.dependencies);var d=b.expirationTime;0!==d&&Bg(d);if(b.childExpirationTime<c)return null;if(null!==a&&b.child!==a.child)throw Error(u(153));if(null!==b.child){a=b.child;c=Sg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Sg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}var ni,oi,pi,qi;\nni=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};oi=function(){};\npi=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;ch($g.current);a=null;switch(c){case \"input\":f=zb(g,f);d=zb(g,d);a=[];break;case \"option\":f=Gb(g,f);d=Gb(g,d);a=[];break;case \"select\":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case \"textarea\":f=Ib(g,f);d=Ib(g,d);a=[];break;default:\"function\"!==typeof f.onClick&&\"function\"===typeof d.onClick&&(g.onclick=sd)}od(c,d);var h,k;c=null;for(h in f)if(!d.hasOwnProperty(h)&&f.hasOwnProperty(h)&&null!=f[h])if(\"style\"===\nh)for(k in g=f[h],g)g.hasOwnProperty(k)&&(c||(c={}),c[k]=\"\");else\"dangerouslySetInnerHTML\"!==h&&\"children\"!==h&&\"suppressContentEditableWarning\"!==h&&\"suppressHydrationWarning\"!==h&&\"autoFocus\"!==h&&(va.hasOwnProperty(h)?a||(a=[]):(a=a||[]).push(h,null));for(h in d){var l=d[h];g=null!=f?f[h]:void 0;if(d.hasOwnProperty(h)&&l!==g&&(null!=l||null!=g))if(\"style\"===h)if(g){for(k in g)!g.hasOwnProperty(k)||l&&l.hasOwnProperty(k)||(c||(c={}),c[k]=\"\");for(k in l)l.hasOwnProperty(k)&&g[k]!==l[k]&&(c||(c={}),\nc[k]=l[k])}else c||(a||(a=[]),a.push(h,c)),c=l;else\"dangerouslySetInnerHTML\"===h?(l=l?l.__html:void 0,g=g?g.__html:void 0,null!=l&&g!==l&&(a=a||[]).push(h,l)):\"children\"===h?g===l||\"string\"!==typeof l&&\"number\"!==typeof l||(a=a||[]).push(h,\"\"+l):\"suppressContentEditableWarning\"!==h&&\"suppressHydrationWarning\"!==h&&(va.hasOwnProperty(h)?(null!=l&&rd(e,h),a||g===l||(a=[])):(a=a||[]).push(h,l))}c&&(a=a||[]).push(\"style\",c);e=a;if(b.updateQueue=e)b.effectTag|=4}};\nqi=function(a,b,c,d){c!==d&&(b.effectTag|=4)};function ri(a,b){switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction si(a,b,c){var d=b.pendingProps;switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return L(b.type)&&Df(),null;case 3:return eh(),H(K),H(J),c=b.stateNode,c.pendingContext&&(c.context=c.pendingContext,c.pendingContext=null),null!==a&&null!==a.child||!Wh(b)||(b.effectTag|=4),oi(b),null;case 5:gh(b);c=ch(bh.current);var e=b.type;if(null!==a&&null!=b.stateNode)pi(a,b,e,d,c),a.ref!==b.ref&&(b.effectTag|=128);else{if(!d){if(null===b.stateNode)throw Error(u(166));\nreturn null}a=ch($g.current);if(Wh(b)){d=b.stateNode;e=b.type;var f=b.memoizedProps;d[Md]=b;d[Nd]=f;switch(e){case \"iframe\":case \"object\":case \"embed\":F(\"load\",d);break;case \"video\":case \"audio\":for(a=0;a<ac.length;a++)F(ac[a],d);break;case \"source\":F(\"error\",d);break;case \"img\":case \"image\":case \"link\":F(\"error\",d);F(\"load\",d);break;case \"form\":F(\"reset\",d);F(\"submit\",d);break;case \"details\":F(\"toggle\",d);break;case \"input\":Ab(d,f);F(\"invalid\",d);rd(c,\"onChange\");break;case \"select\":d._wrapperState=\n{wasMultiple:!!f.multiple};F(\"invalid\",d);rd(c,\"onChange\");break;case \"textarea\":Jb(d,f),F(\"invalid\",d),rd(c,\"onChange\")}od(e,f);a=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(a=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(a=[\"children\",\"\"+h]):va.hasOwnProperty(g)&&null!=h&&rd(c,g)}switch(e){case \"input\":xb(d);Eb(d,f,!0);break;case \"textarea\":xb(d);Lb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&\n(d.onclick=sd)}c=a;b.updateQueue=c;null!==c&&(b.effectTag|=4)}else{g=9===c.nodeType?c:c.ownerDocument;a===qd&&(a=Nb(e));a===qd?\"script\"===e?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\"string\"===typeof d.is?a=g.createElement(e,{is:d.is}):(a=g.createElement(e),\"select\"===e&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,e);a[Md]=b;a[Nd]=d;ni(a,b,!1,!1);b.stateNode=a;g=pd(e,d);switch(e){case \"iframe\":case \"object\":case \"embed\":F(\"load\",\na);h=d;break;case \"video\":case \"audio\":for(h=0;h<ac.length;h++)F(ac[h],a);h=d;break;case \"source\":F(\"error\",a);h=d;break;case \"img\":case \"image\":case \"link\":F(\"error\",a);F(\"load\",a);h=d;break;case \"form\":F(\"reset\",a);F(\"submit\",a);h=d;break;case \"details\":F(\"toggle\",a);h=d;break;case \"input\":Ab(a,d);h=zb(a,d);F(\"invalid\",a);rd(c,\"onChange\");break;case \"option\":h=Gb(a,d);break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};h=n({},d,{value:void 0});F(\"invalid\",a);rd(c,\"onChange\");break;case \"textarea\":Jb(a,\nd);h=Ib(a,d);F(\"invalid\",a);rd(c,\"onChange\");break;default:h=d}od(e,h);var k=h;for(f in k)if(k.hasOwnProperty(f)){var l=k[f];\"style\"===f?md(a,l):\"dangerouslySetInnerHTML\"===f?(l=l?l.__html:void 0,null!=l&&Qb(a,l)):\"children\"===f?\"string\"===typeof l?(\"textarea\"!==e||\"\"!==l)&&Rb(a,l):\"number\"===typeof l&&Rb(a,\"\"+l):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(va.hasOwnProperty(f)?null!=l&&rd(c,f):null!=l&&Xa(a,f,l,g))}switch(e){case \"input\":xb(a);Eb(a,d,!1);\nbreak;case \"textarea\":xb(a);Lb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+rb(d.value));break;case \"select\":a.multiple=!!d.multiple;c=d.value;null!=c?Hb(a,!!d.multiple,c,!1):null!=d.defaultValue&&Hb(a,!!d.multiple,d.defaultValue,!0);break;default:\"function\"===typeof h.onClick&&(a.onclick=sd)}Fd(e,d)&&(b.effectTag|=4)}null!==b.ref&&(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)qi(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(u(166));\nc=ch(bh.current);ch($g.current);Wh(b)?(c=b.stateNode,d=b.memoizedProps,c[Md]=b,c.nodeValue!==d&&(b.effectTag|=4)):(c=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),c[Md]=b,b.stateNode=c)}return null;case 13:H(M);d=b.memoizedState;if(0!==(b.effectTag&64))return b.expirationTime=c,b;c=null!==d;d=!1;null===a?void 0!==b.memoizedProps.fallback&&Wh(b):(e=a.memoizedState,d=null!==e,c||null===e||(e=a.child.sibling,null!==e&&(f=b.firstEffect,null!==f?(b.firstEffect=e,e.nextEffect=f):(b.firstEffect=b.lastEffect=\ne,e.nextEffect=null),e.effectTag=8)));if(c&&!d&&0!==(b.mode&2))if(null===a&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(M.current&1))S===ti&&(S=ui);else{if(S===ti||S===ui)S=vi;0!==wi&&null!==T&&(xi(T,U),yi(T,wi))}if(c||d)b.effectTag|=4;return null;case 4:return eh(),oi(b),null;case 10:return og(b),null;case 17:return L(b.type)&&Df(),null;case 19:H(M);d=b.memoizedState;if(null===d)return null;e=0!==(b.effectTag&64);f=d.rendering;if(null===f)if(e)ri(d,!1);else{if(S!==ti||null!==a&&0!==(a.effectTag&\n64))for(f=b.child;null!==f;){a=hh(f);if(null!==a){b.effectTag|=64;ri(d,!1);e=a.updateQueue;null!==e&&(b.updateQueue=e,b.effectTag|=4);null===d.lastEffect&&(b.firstEffect=null);b.lastEffect=d.lastEffect;for(d=b.child;null!==d;)e=d,f=c,e.effectTag&=2,e.nextEffect=null,e.firstEffect=null,e.lastEffect=null,a=e.alternate,null===a?(e.childExpirationTime=0,e.expirationTime=f,e.child=null,e.memoizedProps=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null):(e.childExpirationTime=a.childExpirationTime,\ne.expirationTime=a.expirationTime,e.child=a.child,e.memoizedProps=a.memoizedProps,e.memoizedState=a.memoizedState,e.updateQueue=a.updateQueue,f=a.dependencies,e.dependencies=null===f?null:{expirationTime:f.expirationTime,firstContext:f.firstContext,responders:f.responders}),d=d.sibling;I(M,M.current&1|2);return b.child}f=f.sibling}}else{if(!e)if(a=hh(f),null!==a){if(b.effectTag|=64,e=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.effectTag|=4),ri(d,!0),null===d.tail&&\"hidden\"===d.tailMode&&!f.alternate)return b=\nb.lastEffect=d.lastEffect,null!==b&&(b.nextEffect=null),null}else 2*$f()-d.renderingStartTime>d.tailExpiration&&1<c&&(b.effectTag|=64,e=!0,ri(d,!1),b.expirationTime=b.childExpirationTime=c-1);d.isBackwards?(f.sibling=b.child,b.child=f):(c=d.last,null!==c?c.sibling=f:b.child=f,d.last=f)}return null!==d.tail?(0===d.tailExpiration&&(d.tailExpiration=$f()+500),c=d.tail,d.rendering=c,d.tail=c.sibling,d.lastEffect=b.lastEffect,d.renderingStartTime=$f(),c.sibling=null,b=M.current,I(M,e?b&1|2:b&1),c):null}throw Error(u(156,\nb.tag));}function zi(a){switch(a.tag){case 1:L(a.type)&&Df();var b=a.effectTag;return b&4096?(a.effectTag=b&-4097|64,a):null;case 3:eh();H(K);H(J);b=a.effectTag;if(0!==(b&64))throw Error(u(285));a.effectTag=b&-4097|64;return a;case 5:return gh(a),null;case 13:return H(M),b=a.effectTag,b&4096?(a.effectTag=b&-4097|64,a):null;case 19:return H(M),null;case 4:return eh(),null;case 10:return og(a),null;default:return null}}function Ai(a,b){return{value:a,source:b,stack:qb(b)}}\nvar Bi=\"function\"===typeof WeakSet?WeakSet:Set;function Ci(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=qb(c));null!==c&&pb(c.type);b=b.value;null!==a&&1===a.tag&&pb(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function Di(a,b){try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(c){Ei(a,c)}}function Fi(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Ei(a,c)}else b.current=null}\nfunction Gi(a,b){switch(b.tag){case 0:case 11:case 15:case 22:return;case 1:if(b.effectTag&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:ig(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(u(163));}\nfunction Hi(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.destroy;c.destroy=void 0;void 0!==d&&d()}c=c.next}while(c!==b)}}function Ii(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}\nfunction Ji(a,b,c){switch(c.tag){case 0:case 11:case 15:case 22:Ii(3,c);return;case 1:a=c.stateNode;if(c.effectTag&4)if(null===b)a.componentDidMount();else{var d=c.elementType===c.type?b.memoizedProps:ig(c.type,b.memoizedProps);a.componentDidUpdate(d,b.memoizedState,a.__reactInternalSnapshotBeforeUpdate)}b=c.updateQueue;null!==b&&Cg(c,b,a);return;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=c.child.stateNode;break;case 1:a=c.child.stateNode}Cg(c,b,a)}return;\ncase 5:a=c.stateNode;null===b&&c.effectTag&4&&Fd(c.type,c.memoizedProps)&&a.focus();return;case 6:return;case 4:return;case 12:return;case 13:null===c.memoizedState&&(c=c.alternate,null!==c&&(c=c.memoizedState,null!==c&&(c=c.dehydrated,null!==c&&Vc(c))));return;case 19:case 17:case 20:case 21:return}throw Error(u(163));}\nfunction Ki(a,b,c){\"function\"===typeof Li&&Li(b);switch(b.tag){case 0:case 11:case 14:case 15:case 22:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var d=a.next;cg(97<c?97:c,function(){var a=d;do{var c=a.destroy;if(void 0!==c){var g=b;try{c()}catch(h){Ei(g,h)}}a=a.next}while(a!==d)})}break;case 1:Fi(b);c=b.stateNode;\"function\"===typeof c.componentWillUnmount&&Di(b,c);break;case 5:Fi(b);break;case 4:Mi(a,b,c)}}\nfunction Ni(a){var b=a.alternate;a.return=null;a.child=null;a.memoizedState=null;a.updateQueue=null;a.dependencies=null;a.alternate=null;a.firstEffect=null;a.lastEffect=null;a.pendingProps=null;a.memoizedProps=null;a.stateNode=null;null!==b&&Ni(b)}function Oi(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Pi(a){a:{for(var b=a.return;null!==b;){if(Oi(b)){var c=b;break a}b=b.return}throw Error(u(160));}b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(u(161));}c.effectTag&16&&(Rb(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||Oi(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.effectTag&2)continue b;\nif(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}d?Qi(a,c,b):Ri(a,c,b)}\nfunction Qi(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=sd));else if(4!==d&&(a=a.child,null!==a))for(Qi(a,b,c),a=a.sibling;null!==a;)Qi(a,b,c),a=a.sibling}\nfunction Ri(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Ri(a,b,c),a=a.sibling;null!==a;)Ri(a,b,c),a=a.sibling}\nfunction Mi(a,b,c){for(var d=b,e=!1,f,g;;){if(!e){e=d.return;a:for(;;){if(null===e)throw Error(u(160));f=e.stateNode;switch(e.tag){case 5:g=!1;break a;case 3:f=f.containerInfo;g=!0;break a;case 4:f=f.containerInfo;g=!0;break a}e=e.return}e=!0}if(5===d.tag||6===d.tag){a:for(var h=a,k=d,l=c,m=k;;)if(Ki(h,m,l),null!==m.child&&4!==m.tag)m.child.return=m,m=m.child;else{if(m===k)break a;for(;null===m.sibling;){if(null===m.return||m.return===k)break a;m=m.return}m.sibling.return=m.return;m=m.sibling}g?(h=\nf,k=d.stateNode,8===h.nodeType?h.parentNode.removeChild(k):h.removeChild(k)):f.removeChild(d.stateNode)}else if(4===d.tag){if(null!==d.child){f=d.stateNode.containerInfo;g=!0;d.child.return=d;d=d.child;continue}}else if(Ki(a,d,c),null!==d.child){d.child.return=d;d=d.child;continue}if(d===b)break;for(;null===d.sibling;){if(null===d.return||d.return===b)return;d=d.return;4===d.tag&&(e=!1)}d.sibling.return=d.return;d=d.sibling}}\nfunction Si(a,b){switch(b.tag){case 0:case 11:case 14:case 15:case 22:Hi(3,b);return;case 1:return;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps,e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[Nd]=d;\"input\"===a&&\"radio\"===d.type&&null!=d.name&&Bb(c,d);pd(a,e);b=pd(a,d);for(e=0;e<f.length;e+=2){var g=f[e],h=f[e+1];\"style\"===g?md(c,h):\"dangerouslySetInnerHTML\"===g?Qb(c,h):\"children\"===g?Rb(c,h):Xa(c,g,h,b)}switch(a){case \"input\":Cb(c,d);break;\ncase \"textarea\":Kb(c,d);break;case \"select\":b=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,a=d.value,null!=a?Hb(c,!!d.multiple,a,!1):b!==!!d.multiple&&(null!=d.defaultValue?Hb(c,!!d.multiple,d.defaultValue,!0):Hb(c,!!d.multiple,d.multiple?[]:\"\",!1))}}}return;case 6:if(null===b.stateNode)throw Error(u(162));b.stateNode.nodeValue=b.memoizedProps;return;case 3:b=b.stateNode;b.hydrate&&(b.hydrate=!1,Vc(b.containerInfo));return;case 12:return;case 13:c=b;null===b.memoizedState?\nd=!1:(d=!0,c=b.child,Ti=$f());if(null!==c)a:for(a=c;;){if(5===a.tag)f=a.stateNode,d?(f=f.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(f=a.stateNode,e=a.memoizedProps.style,e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null,f.style.display=ld(\"display\",e));else if(6===a.tag)a.stateNode.nodeValue=d?\"\":a.memoizedProps;else if(13===a.tag&&null!==a.memoizedState&&null===a.memoizedState.dehydrated){f=a.child.sibling;f.return=a;a=\nf;continue}else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===c)break;for(;null===a.sibling;){if(null===a.return||a.return===c)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}Ui(b);return;case 19:Ui(b);return;case 17:return}throw Error(u(163));}function Ui(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Bi);b.forEach(function(b){var d=Vi.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nvar Wi=\"function\"===typeof WeakMap?WeakMap:Map;function Xi(a,b,c){c=wg(c,null);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Yi||(Yi=!0,Zi=d);Ci(a,b)};return c}\nfunction $i(a,b,c){c=wg(c,null);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){Ci(a,b);return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===aj?aj=new Set([this]):aj.add(this),Ci(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nvar bj=Math.ceil,cj=Wa.ReactCurrentDispatcher,dj=Wa.ReactCurrentOwner,V=0,ej=8,fj=16,gj=32,ti=0,hj=1,ij=2,ui=3,vi=4,jj=5,W=V,T=null,X=null,U=0,S=ti,kj=null,lj=1073741823,mj=1073741823,nj=null,wi=0,oj=!1,Ti=0,pj=500,Y=null,Yi=!1,Zi=null,aj=null,qj=!1,rj=null,sj=90,tj=null,uj=0,vj=null,wj=0;function Gg(){return(W&(fj|gj))!==V?1073741821-($f()/10|0):0!==wj?wj:wj=1073741821-($f()/10|0)}\nfunction Hg(a,b,c){b=b.mode;if(0===(b&2))return 1073741823;var d=ag();if(0===(b&4))return 99===d?1073741823:1073741822;if((W&fj)!==V)return U;if(null!==c)a=hg(a,c.timeoutMs|0||5E3,250);else switch(d){case 99:a=1073741823;break;case 98:a=hg(a,150,100);break;case 97:case 96:a=hg(a,5E3,250);break;case 95:a=2;break;default:throw Error(u(326));}null!==T&&a===U&&--a;return a}\nfunction Ig(a,b){if(50<uj)throw uj=0,vj=null,Error(u(185));a=xj(a,b);if(null!==a){var c=ag();1073741823===b?(W&ej)!==V&&(W&(fj|gj))===V?yj(a):(Z(a),W===V&&gg()):Z(a);(W&4)===V||98!==c&&99!==c||(null===tj?tj=new Map([[a,b]]):(c=tj.get(a),(void 0===c||c>b)&&tj.set(a,b)))}}\nfunction xj(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);var d=a.return,e=null;if(null===d&&3===a.tag)e=a.stateNode;else for(;null!==d;){c=d.alternate;d.childExpirationTime<b&&(d.childExpirationTime=b);null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);if(null===d.return&&3===d.tag){e=d.stateNode;break}d=d.return}null!==e&&(T===e&&(Bg(b),S===vi&&xi(e,U)),yi(e,b));return e}\nfunction zj(a){var b=a.lastExpiredTime;if(0!==b)return b;b=a.firstPendingTime;if(!Aj(a,b))return b;var c=a.lastPingedTime;a=a.nextKnownPendingLevel;a=c>a?c:a;return 2>=a&&b!==a?0:a}\nfunction Z(a){if(0!==a.lastExpiredTime)a.callbackExpirationTime=1073741823,a.callbackPriority=99,a.callbackNode=eg(yj.bind(null,a));else{var b=zj(a),c=a.callbackNode;if(0===b)null!==c&&(a.callbackNode=null,a.callbackExpirationTime=0,a.callbackPriority=90);else{var d=Gg();1073741823===b?d=99:1===b||2===b?d=95:(d=10*(1073741821-b)-10*(1073741821-d),d=0>=d?99:250>=d?98:5250>=d?97:95);if(null!==c){var e=a.callbackPriority;if(a.callbackExpirationTime===b&&e>=d)return;c!==Tf&&Kf(c)}a.callbackExpirationTime=\nb;a.callbackPriority=d;b=1073741823===b?eg(yj.bind(null,a)):dg(d,Bj.bind(null,a),{timeout:10*(1073741821-b)-$f()});a.callbackNode=b}}}\nfunction Bj(a,b){wj=0;if(b)return b=Gg(),Cj(a,b),Z(a),null;var c=zj(a);if(0!==c){b=a.callbackNode;if((W&(fj|gj))!==V)throw Error(u(327));Dj();a===T&&c===U||Ej(a,c);if(null!==X){var d=W;W|=fj;var e=Fj();do try{Gj();break}catch(h){Hj(a,h)}while(1);ng();W=d;cj.current=e;if(S===hj)throw b=kj,Ej(a,c),xi(a,c),Z(a),b;if(null===X)switch(e=a.finishedWork=a.current.alternate,a.finishedExpirationTime=c,d=S,T=null,d){case ti:case hj:throw Error(u(345));case ij:Cj(a,2<c?2:c);break;case ui:xi(a,c);d=a.lastSuspendedTime;\nc===d&&(a.nextKnownPendingLevel=Ij(e));if(1073741823===lj&&(e=Ti+pj-$f(),10<e)){if(oj){var f=a.lastPingedTime;if(0===f||f>=c){a.lastPingedTime=c;Ej(a,c);break}}f=zj(a);if(0!==f&&f!==c)break;if(0!==d&&d!==c){a.lastPingedTime=d;break}a.timeoutHandle=Hd(Jj.bind(null,a),e);break}Jj(a);break;case vi:xi(a,c);d=a.lastSuspendedTime;c===d&&(a.nextKnownPendingLevel=Ij(e));if(oj&&(e=a.lastPingedTime,0===e||e>=c)){a.lastPingedTime=c;Ej(a,c);break}e=zj(a);if(0!==e&&e!==c)break;if(0!==d&&d!==c){a.lastPingedTime=\nd;break}1073741823!==mj?d=10*(1073741821-mj)-$f():1073741823===lj?d=0:(d=10*(1073741821-lj)-5E3,e=$f(),c=10*(1073741821-c)-e,d=e-d,0>d&&(d=0),d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*bj(d/1960))-d,c<d&&(d=c));if(10<d){a.timeoutHandle=Hd(Jj.bind(null,a),d);break}Jj(a);break;case jj:if(1073741823!==lj&&null!==nj){f=lj;var g=nj;d=g.busyMinDurationMs|0;0>=d?d=0:(e=g.busyDelayMs|0,f=$f()-(10*(1073741821-f)-(g.timeoutMs|0||5E3)),d=f<=e?0:e+d-f);if(10<d){xi(a,c);a.timeoutHandle=\nHd(Jj.bind(null,a),d);break}}Jj(a);break;default:throw Error(u(329));}Z(a);if(a.callbackNode===b)return Bj.bind(null,a)}}return null}\nfunction yj(a){var b=a.lastExpiredTime;b=0!==b?b:1073741823;if((W&(fj|gj))!==V)throw Error(u(327));Dj();a===T&&b===U||Ej(a,b);if(null!==X){var c=W;W|=fj;var d=Fj();do try{Kj();break}catch(e){Hj(a,e)}while(1);ng();W=c;cj.current=d;if(S===hj)throw c=kj,Ej(a,b),xi(a,b),Z(a),c;if(null!==X)throw Error(u(261));a.finishedWork=a.current.alternate;a.finishedExpirationTime=b;T=null;Jj(a);Z(a)}return null}function Lj(){if(null!==tj){var a=tj;tj=null;a.forEach(function(a,c){Cj(c,a);Z(c)});gg()}}\nfunction Mj(a,b){var c=W;W|=1;try{return a(b)}finally{W=c,W===V&&gg()}}function Nj(a,b){var c=W;W&=-2;W|=ej;try{return a(b)}finally{W=c,W===V&&gg()}}\nfunction Ej(a,b){a.finishedWork=null;a.finishedExpirationTime=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Id(c));if(null!==X)for(c=X.return;null!==c;){var d=c;switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&Df();break;case 3:eh();H(K);H(J);break;case 5:gh(d);break;case 4:eh();break;case 13:H(M);break;case 19:H(M);break;case 10:og(d)}c=c.return}T=a;X=Sg(a.current,null);U=b;S=ti;kj=null;mj=lj=1073741823;nj=null;wi=0;oj=!1}\nfunction Hj(a,b){do{try{ng();jh.current=sh;if(mh)for(var c=N.memoizedState;null!==c;){var d=c.queue;null!==d&&(d.pending=null);c=c.next}lh=0;P=O=N=null;mh=!1;if(null===X||null===X.return)return S=hj,kj=b,X=null;a:{var e=a,f=X.return,g=X,h=b;b=U;g.effectTag|=2048;g.firstEffect=g.lastEffect=null;if(null!==h&&\"object\"===typeof h&&\"function\"===typeof h.then){var k=h;if(0===(g.mode&2)){var l=g.alternate;l?(g.updateQueue=l.updateQueue,g.memoizedState=l.memoizedState,g.expirationTime=l.expirationTime):(g.updateQueue=\nnull,g.memoizedState=null)}var m=0!==(M.current&1),p=f;do{var x;if(x=13===p.tag){var z=p.memoizedState;if(null!==z)x=null!==z.dehydrated?!0:!1;else{var ca=p.memoizedProps;x=void 0===ca.fallback?!1:!0!==ca.unstable_avoidThisFallback?!0:m?!1:!0}}if(x){var D=p.updateQueue;if(null===D){var t=new Set;t.add(k);p.updateQueue=t}else D.add(k);if(0===(p.mode&2)){p.effectTag|=64;g.effectTag&=-2981;if(1===g.tag)if(null===g.alternate)g.tag=17;else{var y=wg(1073741823,null);y.tag=2;xg(g,y)}g.expirationTime=1073741823;\nbreak a}h=void 0;g=b;var A=e.pingCache;null===A?(A=e.pingCache=new Wi,h=new Set,A.set(k,h)):(h=A.get(k),void 0===h&&(h=new Set,A.set(k,h)));if(!h.has(g)){h.add(g);var q=Oj.bind(null,e,k,g);k.then(q,q)}p.effectTag|=4096;p.expirationTime=b;break a}p=p.return}while(null!==p);h=Error((pb(g.type)||\"A React component\")+\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\"+qb(g))}S!==\njj&&(S=ij);h=Ai(h,g);p=f;do{switch(p.tag){case 3:k=h;p.effectTag|=4096;p.expirationTime=b;var B=Xi(p,k,b);yg(p,B);break a;case 1:k=h;var w=p.type,ub=p.stateNode;if(0===(p.effectTag&64)&&(\"function\"===typeof w.getDerivedStateFromError||null!==ub&&\"function\"===typeof ub.componentDidCatch&&(null===aj||!aj.has(ub)))){p.effectTag|=4096;p.expirationTime=b;var vb=$i(p,k,b);yg(p,vb);break a}}p=p.return}while(null!==p)}X=Pj(X)}catch(Xc){b=Xc;continue}break}while(1)}\nfunction Fj(){var a=cj.current;cj.current=sh;return null===a?sh:a}function Ag(a,b){a<lj&&2<a&&(lj=a);null!==b&&a<mj&&2<a&&(mj=a,nj=b)}function Bg(a){a>wi&&(wi=a)}function Kj(){for(;null!==X;)X=Qj(X)}function Gj(){for(;null!==X&&!Uf();)X=Qj(X)}function Qj(a){var b=Rj(a.alternate,a,U);a.memoizedProps=a.pendingProps;null===b&&(b=Pj(a));dj.current=null;return b}\nfunction Pj(a){X=a;do{var b=X.alternate;a=X.return;if(0===(X.effectTag&2048)){b=si(b,X,U);if(1===U||1!==X.childExpirationTime){for(var c=0,d=X.child;null!==d;){var e=d.expirationTime,f=d.childExpirationTime;e>c&&(c=e);f>c&&(c=f);d=d.sibling}X.childExpirationTime=c}if(null!==b)return b;null!==a&&0===(a.effectTag&2048)&&(null===a.firstEffect&&(a.firstEffect=X.firstEffect),null!==X.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=X.firstEffect),a.lastEffect=X.lastEffect),1<X.effectTag&&(null!==\na.lastEffect?a.lastEffect.nextEffect=X:a.firstEffect=X,a.lastEffect=X))}else{b=zi(X);if(null!==b)return b.effectTag&=2047,b;null!==a&&(a.firstEffect=a.lastEffect=null,a.effectTag|=2048)}b=X.sibling;if(null!==b)return b;X=a}while(null!==X);S===ti&&(S=jj);return null}function Ij(a){var b=a.expirationTime;a=a.childExpirationTime;return b>a?b:a}function Jj(a){var b=ag();cg(99,Sj.bind(null,a,b));return null}\nfunction Sj(a,b){do Dj();while(null!==rj);if((W&(fj|gj))!==V)throw Error(u(327));var c=a.finishedWork,d=a.finishedExpirationTime;if(null===c)return null;a.finishedWork=null;a.finishedExpirationTime=0;if(c===a.current)throw Error(u(177));a.callbackNode=null;a.callbackExpirationTime=0;a.callbackPriority=90;a.nextKnownPendingLevel=0;var e=Ij(c);a.firstPendingTime=e;d<=a.lastSuspendedTime?a.firstSuspendedTime=a.lastSuspendedTime=a.nextKnownPendingLevel=0:d<=a.firstSuspendedTime&&(a.firstSuspendedTime=\nd-1);d<=a.lastPingedTime&&(a.lastPingedTime=0);d<=a.lastExpiredTime&&(a.lastExpiredTime=0);a===T&&(X=T=null,U=0);1<c.effectTag?null!==c.lastEffect?(c.lastEffect.nextEffect=c,e=c.firstEffect):e=c:e=c.firstEffect;if(null!==e){var f=W;W|=gj;dj.current=null;Dd=fd;var g=xd();if(yd(g)){if(\"selectionStart\"in g)var h={start:g.selectionStart,end:g.selectionEnd};else a:{h=(h=g.ownerDocument)&&h.defaultView||window;var k=h.getSelection&&h.getSelection();if(k&&0!==k.rangeCount){h=k.anchorNode;var l=k.anchorOffset,\nm=k.focusNode;k=k.focusOffset;try{h.nodeType,m.nodeType}catch(wb){h=null;break a}var p=0,x=-1,z=-1,ca=0,D=0,t=g,y=null;b:for(;;){for(var A;;){t!==h||0!==l&&3!==t.nodeType||(x=p+l);t!==m||0!==k&&3!==t.nodeType||(z=p+k);3===t.nodeType&&(p+=t.nodeValue.length);if(null===(A=t.firstChild))break;y=t;t=A}for(;;){if(t===g)break b;y===h&&++ca===l&&(x=p);y===m&&++D===k&&(z=p);if(null!==(A=t.nextSibling))break;t=y;y=t.parentNode}t=A}h=-1===x||-1===z?null:{start:x,end:z}}else h=null}h=h||{start:0,end:0}}else h=\nnull;Ed={activeElementDetached:null,focusedElem:g,selectionRange:h};fd=!1;Y=e;do try{Tj()}catch(wb){if(null===Y)throw Error(u(330));Ei(Y,wb);Y=Y.nextEffect}while(null!==Y);Y=e;do try{for(g=a,h=b;null!==Y;){var q=Y.effectTag;q&16&&Rb(Y.stateNode,\"\");if(q&128){var B=Y.alternate;if(null!==B){var w=B.ref;null!==w&&(\"function\"===typeof w?w(null):w.current=null)}}switch(q&1038){case 2:Pi(Y);Y.effectTag&=-3;break;case 6:Pi(Y);Y.effectTag&=-3;Si(Y.alternate,Y);break;case 1024:Y.effectTag&=-1025;break;case 1028:Y.effectTag&=\n-1025;Si(Y.alternate,Y);break;case 4:Si(Y.alternate,Y);break;case 8:l=Y,Mi(g,l,h),Ni(l)}Y=Y.nextEffect}}catch(wb){if(null===Y)throw Error(u(330));Ei(Y,wb);Y=Y.nextEffect}while(null!==Y);w=Ed;B=xd();q=w.focusedElem;h=w.selectionRange;if(B!==q&&q&&q.ownerDocument&&wd(q.ownerDocument.documentElement,q)){null!==h&&yd(q)&&(B=h.start,w=h.end,void 0===w&&(w=B),\"selectionStart\"in q?(q.selectionStart=B,q.selectionEnd=Math.min(w,q.value.length)):(w=(B=q.ownerDocument||document)&&B.defaultView||window,w.getSelection&&\n(w=w.getSelection(),l=q.textContent.length,g=Math.min(h.start,l),h=void 0===h.end?g:Math.min(h.end,l),!w.extend&&g>h&&(l=h,h=g,g=l),l=vd(q,g),m=vd(q,h),l&&m&&(1!==w.rangeCount||w.anchorNode!==l.node||w.anchorOffset!==l.offset||w.focusNode!==m.node||w.focusOffset!==m.offset)&&(B=B.createRange(),B.setStart(l.node,l.offset),w.removeAllRanges(),g>h?(w.addRange(B),w.extend(m.node,m.offset)):(B.setEnd(m.node,m.offset),w.addRange(B))))));B=[];for(w=q;w=w.parentNode;)1===w.nodeType&&B.push({element:w,left:w.scrollLeft,\ntop:w.scrollTop});\"function\"===typeof q.focus&&q.focus();for(q=0;q<B.length;q++)w=B[q],w.element.scrollLeft=w.left,w.element.scrollTop=w.top}fd=!!Dd;Ed=Dd=null;a.current=c;Y=e;do try{for(q=a;null!==Y;){var ub=Y.effectTag;ub&36&&Ji(q,Y.alternate,Y);if(ub&128){B=void 0;var vb=Y.ref;if(null!==vb){var Xc=Y.stateNode;switch(Y.tag){case 5:B=Xc;break;default:B=Xc}\"function\"===typeof vb?vb(B):vb.current=B}}Y=Y.nextEffect}}catch(wb){if(null===Y)throw Error(u(330));Ei(Y,wb);Y=Y.nextEffect}while(null!==Y);Y=\nnull;Vf();W=f}else a.current=c;if(qj)qj=!1,rj=a,sj=b;else for(Y=e;null!==Y;)b=Y.nextEffect,Y.nextEffect=null,Y=b;b=a.firstPendingTime;0===b&&(aj=null);1073741823===b?a===vj?uj++:(uj=0,vj=a):uj=0;\"function\"===typeof Uj&&Uj(c.stateNode,d);Z(a);if(Yi)throw Yi=!1,a=Zi,Zi=null,a;if((W&ej)!==V)return null;gg();return null}function Tj(){for(;null!==Y;){var a=Y.effectTag;0!==(a&256)&&Gi(Y.alternate,Y);0===(a&512)||qj||(qj=!0,dg(97,function(){Dj();return null}));Y=Y.nextEffect}}\nfunction Dj(){if(90!==sj){var a=97<sj?97:sj;sj=90;return cg(a,Vj)}}function Vj(){if(null===rj)return!1;var a=rj;rj=null;if((W&(fj|gj))!==V)throw Error(u(331));var b=W;W|=gj;for(a=a.current.firstEffect;null!==a;){try{var c=a;if(0!==(c.effectTag&512))switch(c.tag){case 0:case 11:case 15:case 22:Hi(5,c),Ii(5,c)}}catch(d){if(null===a)throw Error(u(330));Ei(a,d)}c=a.nextEffect;a.nextEffect=null;a=c}W=b;gg();return!0}\nfunction Wj(a,b,c){b=Ai(c,b);b=Xi(a,b,1073741823);xg(a,b);a=xj(a,1073741823);null!==a&&Z(a)}function Ei(a,b){if(3===a.tag)Wj(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){Wj(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===aj||!aj.has(d))){a=Ai(b,a);a=$i(c,a,1073741823);xg(c,a);c=xj(c,1073741823);null!==c&&Z(c);break}}c=c.return}}\nfunction Oj(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);T===a&&U===c?S===vi||S===ui&&1073741823===lj&&$f()-Ti<pj?Ej(a,U):oj=!0:Aj(a,c)&&(b=a.lastPingedTime,0!==b&&b<c||(a.lastPingedTime=c,Z(a)))}function Vi(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=Gg(),b=Hg(b,a,null));a=xj(a,b);null!==a&&Z(a)}var Rj;\nRj=function(a,b,c){var d=b.expirationTime;if(null!==a){var e=b.pendingProps;if(a.memoizedProps!==e||K.current)rg=!0;else{if(d<c){rg=!1;switch(b.tag){case 3:hi(b);Xh();break;case 5:fh(b);if(b.mode&4&&1!==c&&e.hidden)return b.expirationTime=b.childExpirationTime=1,null;break;case 1:L(b.type)&&Gf(b);break;case 4:dh(b,b.stateNode.containerInfo);break;case 10:d=b.memoizedProps.value;e=b.type._context;I(jg,e._currentValue);e._currentValue=d;break;case 13:if(null!==b.memoizedState){d=b.child.childExpirationTime;\nif(0!==d&&d>=c)return ji(a,b,c);I(M,M.current&1);b=$h(a,b,c);return null!==b?b.sibling:null}I(M,M.current&1);break;case 19:d=b.childExpirationTime>=c;if(0!==(a.effectTag&64)){if(d)return mi(a,b,c);b.effectTag|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null);I(M,M.current);if(!d)return null}return $h(a,b,c)}rg=!1}}else rg=!1;b.expirationTime=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;e=Cf(b,J.current);qg(b,c);e=oh(null,\nb,d,a,e,c);b.effectTag|=1;if(\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;b.memoizedState=null;b.updateQueue=null;if(L(d)){var f=!0;Gf(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;ug(b);var g=d.getDerivedStateFromProps;\"function\"===typeof g&&Fg(b,d,g,a);e.updater=Jg;b.stateNode=e;e._reactInternalFiber=b;Ng(b,d,a,c);b=gi(null,b,d,!0,f,c)}else b.tag=0,R(null,b,e,c),b=b.child;return b;case 16:a:{e=b.elementType;null!==a&&(a.alternate=\nnull,b.alternate=null,b.effectTag|=2);a=b.pendingProps;ob(e);if(1!==e._status)throw e._result;e=e._result;b.type=e;f=b.tag=Xj(e);a=ig(e,a);switch(f){case 0:b=di(null,b,e,a,c);break a;case 1:b=fi(null,b,e,a,c);break a;case 11:b=Zh(null,b,e,a,c);break a;case 14:b=ai(null,b,e,ig(e.type,a),d,c);break a}throw Error(u(306,e,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),di(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),fi(a,b,d,e,c);\ncase 3:hi(b);d=b.updateQueue;if(null===a||null===d)throw Error(u(282));d=b.pendingProps;e=b.memoizedState;e=null!==e?e.element:null;vg(a,b);zg(b,d,null,c);d=b.memoizedState.element;if(d===e)Xh(),b=$h(a,b,c);else{if(e=b.stateNode.hydrate)Ph=Jd(b.stateNode.containerInfo.firstChild),Oh=b,e=Qh=!0;if(e)for(c=Yg(b,null,d,c),b.child=c;c;)c.effectTag=c.effectTag&-3|1024,c=c.sibling;else R(a,b,d,c),Xh();b=b.child}return b;case 5:return fh(b),null===a&&Uh(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:\nnull,g=e.children,Gd(d,e)?g=null:null!==f&&Gd(d,f)&&(b.effectTag|=16),ei(a,b),b.mode&4&&1!==c&&e.hidden?(b.expirationTime=b.childExpirationTime=1,b=null):(R(a,b,g,c),b=b.child),b;case 6:return null===a&&Uh(b),null;case 13:return ji(a,b,c);case 4:return dh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Xg(b,null,d,c):R(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),Zh(a,b,d,e,c);case 7:return R(a,b,b.pendingProps,c),b.child;case 8:return R(a,\nb,b.pendingProps.children,c),b.child;case 12:return R(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;var h=b.type._context;I(jg,h._currentValue);h._currentValue=f;if(null!==g)if(h=g.value,f=$e(h,f)?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0,0===f){if(g.children===e.children&&!K.current){b=$h(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==\nk){g=h.child;for(var l=k.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=wg(c,null),l.tag=2,xg(h,l));h.expirationTime<c&&(h.expirationTime=c);l=h.alternate;null!==l&&l.expirationTime<c&&(l.expirationTime=c);pg(h.return,c);k.expirationTime<c&&(k.expirationTime=c);break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=\ng}R(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,qg(b,c),e=sg(e,f.unstable_observedBits),d=d(e),b.effectTag|=1,R(a,b,d,c),b.child;case 14:return e=b.type,f=ig(e,b.pendingProps),f=ig(e.type,f),ai(a,b,e,f,d,c);case 15:return ci(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),b.tag=1,L(d)?(a=!0,Gf(b)):a=!1,qg(b,c),Lg(b,d,e),Ng(b,d,e,c),gi(null,\nb,d,!0,a,c);case 19:return mi(a,b,c)}throw Error(u(156,b.tag));};var Uj=null,Li=null;function Yj(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Uj=function(a){try{b.onCommitFiberRoot(c,a,void 0,64===(a.current.effectTag&64))}catch(e){}};Li=function(a){try{b.onCommitFiberUnmount(c,a)}catch(e){}}}catch(d){}return!0}\nfunction Zj(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function Sh(a,b,c,d){return new Zj(a,b,c,d)}\nfunction bi(a){a=a.prototype;return!(!a||!a.isReactComponent)}function Xj(a){if(\"function\"===typeof a)return bi(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===gb)return 11;if(a===jb)return 14}return 2}\nfunction Sg(a,b){var c=a.alternate;null===c?(c=Sh(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.effectTag=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childExpirationTime=a.childExpirationTime;c.expirationTime=a.expirationTime;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{expirationTime:b.expirationTime,\nfirstContext:b.firstContext,responders:b.responders};c.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Ug(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)bi(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ab:return Wg(c.children,e,f,b);case fb:g=8;e|=7;break;case bb:g=8;e|=1;break;case cb:return a=Sh(12,c,b,e|8),a.elementType=cb,a.type=cb,a.expirationTime=f,a;case hb:return a=Sh(13,c,b,e),a.type=hb,a.elementType=hb,a.expirationTime=f,a;case ib:return a=Sh(19,c,b,e),a.elementType=ib,a.expirationTime=f,a;default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case db:g=\n10;break a;case eb:g=9;break a;case gb:g=11;break a;case jb:g=14;break a;case kb:g=16;d=null;break a;case lb:g=22;break a}throw Error(u(130,null==a?a:typeof a,\"\"));}b=Sh(g,c,b,e);b.elementType=a;b.type=d;b.expirationTime=f;return b}function Wg(a,b,c,d){a=Sh(7,a,d,b);a.expirationTime=c;return a}function Tg(a,b,c){a=Sh(6,a,null,b);a.expirationTime=c;return a}\nfunction Vg(a,b,c){b=Sh(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction ak(a,b,c){this.tag=b;this.current=null;this.containerInfo=a;this.pingCache=this.pendingChildren=null;this.finishedExpirationTime=0;this.finishedWork=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=90;this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}\nfunction Aj(a,b){var c=a.firstSuspendedTime;a=a.lastSuspendedTime;return 0!==c&&c>=b&&a<=b}function xi(a,b){var c=a.firstSuspendedTime,d=a.lastSuspendedTime;c<b&&(a.firstSuspendedTime=b);if(d>b||0===c)a.lastSuspendedTime=b;b<=a.lastPingedTime&&(a.lastPingedTime=0);b<=a.lastExpiredTime&&(a.lastExpiredTime=0)}\nfunction yi(a,b){b>a.firstPendingTime&&(a.firstPendingTime=b);var c=a.firstSuspendedTime;0!==c&&(b>=c?a.firstSuspendedTime=a.lastSuspendedTime=a.nextKnownPendingLevel=0:b>=a.lastSuspendedTime&&(a.lastSuspendedTime=b+1),b>a.nextKnownPendingLevel&&(a.nextKnownPendingLevel=b))}function Cj(a,b){var c=a.lastExpiredTime;if(0===c||c>b)a.lastExpiredTime=b}\nfunction bk(a,b,c,d){var e=b.current,f=Gg(),g=Dg.suspense;f=Hg(f,e,g);a:if(c){c=c._reactInternalFiber;b:{if(dc(c)!==c||1!==c.tag)throw Error(u(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(L(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(u(171));}if(1===c.tag){var k=c.type;if(L(k)){c=Ff(c,k,h);break a}}c=h}else c=Af;null===b.context?b.context=c:b.pendingContext=c;b=wg(f,g);b.payload={element:a};d=void 0===\nd?null:d;null!==d&&(b.callback=d);xg(e,b);Ig(e,f);return f}function ck(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function dk(a,b){a=a.memoizedState;null!==a&&null!==a.dehydrated&&a.retryTime<b&&(a.retryTime=b)}function ek(a,b){dk(a,b);(a=a.alternate)&&dk(a,b)}\nfunction fk(a,b,c){c=null!=c&&!0===c.hydrate;var d=new ak(a,b,c),e=Sh(3,null,null,2===b?7:1===b?3:0);d.current=e;e.stateNode=d;ug(e);a[Od]=d.current;c&&0!==b&&Jc(a,9===a.nodeType?a:a.ownerDocument);this._internalRoot=d}fk.prototype.render=function(a){bk(a,this._internalRoot,null,null)};fk.prototype.unmount=function(){var a=this._internalRoot,b=a.containerInfo;bk(null,a,null,function(){b[Od]=null})};\nfunction gk(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function hk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new fk(a,0,b?{hydrate:!0}:void 0)}\nfunction ik(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if(\"function\"===typeof e){var h=e;e=function(){var a=ck(g);h.call(a)}}bk(b,g,a,e)}else{f=c._reactRootContainer=hk(c,d);g=f._internalRoot;if(\"function\"===typeof e){var k=e;e=function(){var a=ck(g);k.call(a)}}Nj(function(){bk(b,g,a,e)})}return ck(g)}function jk(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:$a,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nwc=function(a){if(13===a.tag){var b=hg(Gg(),150,100);Ig(a,b);ek(a,b)}};xc=function(a){13===a.tag&&(Ig(a,3),ek(a,3))};yc=function(a){if(13===a.tag){var b=Gg();b=Hg(b,a,null);Ig(a,b);ek(a,b)}};\nza=function(a,b,c){switch(b){case \"input\":Cb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Qd(d);if(!e)throw Error(u(90));yb(d);Cb(d,e)}}}break;case \"textarea\":Kb(a,c);break;case \"select\":b=c.value,null!=b&&Hb(a,!!c.multiple,b,!1)}};Fa=Mj;\nGa=function(a,b,c,d,e){var f=W;W|=4;try{return cg(98,a.bind(null,b,c,d,e))}finally{W=f,W===V&&gg()}};Ha=function(){(W&(1|fj|gj))===V&&(Lj(),Dj())};Ia=function(a,b){var c=W;W|=2;try{return a(b)}finally{W=c,W===V&&gg()}};function kk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!gk(b))throw Error(u(200));return jk(a,b,null,c)}var lk={Events:[Nc,Pd,Qd,xa,ta,Xd,function(a){jc(a,Wd)},Da,Ea,id,mc,Dj,{current:!1}]};\n(function(a){var b=a.findFiberByHostInstance;return Yj(n({},a,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Wa.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=hc(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}))})({findFiberByHostInstance:tc,bundleType:0,version:\"16.13.1\",\nrendererPackageName:\"react-dom\"});exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=lk;exports.createPortal=kk;exports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;if(void 0===b){if(\"function\"===typeof a.render)throw Error(u(188));throw Error(u(268,Object.keys(a)));}a=hc(b);a=null===a?null:a.stateNode;return a};\nexports.flushSync=function(a,b){if((W&(fj|gj))!==V)throw Error(u(187));var c=W;W|=1;try{return cg(99,a.bind(null,b))}finally{W=c,gg()}};exports.hydrate=function(a,b,c){if(!gk(b))throw Error(u(200));return ik(null,a,b,!0,c)};exports.render=function(a,b,c){if(!gk(b))throw Error(u(200));return ik(null,a,b,!1,c)};\nexports.unmountComponentAtNode=function(a){if(!gk(a))throw Error(u(40));return a._reactRootContainer?(Nj(function(){ik(null,null,a,!1,function(){a._reactRootContainer=null;a[Od]=null})}),!0):!1};exports.unstable_batchedUpdates=Mj;exports.unstable_createPortal=function(a,b){return kk(a,b,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)};\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!gk(c))throw Error(u(200));if(null==a||void 0===a._reactInternalFiber)throw Error(u(38));return ik(a,b,c,!1,d)};exports.version=\"16.13.1\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/** @license React v0.19.1\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var f,g,h,k,l;\nif(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var p=null,q=null,t=function(){if(null!==p)try{var a=exports.unstable_now();p(!0,a);p=null}catch(b){throw setTimeout(t,0),b;}},u=Date.now();exports.unstable_now=function(){return Date.now()-u};f=function(a){null!==p?setTimeout(f,0,a):(p=a,setTimeout(t,0))};g=function(a,b){q=setTimeout(a,b)};h=function(){clearTimeout(q)};k=function(){return!1};l=exports.unstable_forceFrameRate=function(){}}else{var w=window.performance,x=window.Date,\ny=window.setTimeout,z=window.clearTimeout;if(\"undefined\"!==typeof console){var A=window.cancelAnimationFrame;\"function\"!==typeof window.requestAnimationFrame&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\");\"function\"!==typeof A&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\")}if(\"object\"===\ntypeof w&&\"function\"===typeof w.now)exports.unstable_now=function(){return w.now()};else{var B=x.now();exports.unstable_now=function(){return x.now()-B}}var C=!1,D=null,E=-1,F=5,G=0;k=function(){return exports.unstable_now()>=G};l=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported\"):F=0<a?Math.floor(1E3/a):5};var H=new MessageChannel,I=H.port2;H.port1.onmessage=\nfunction(){if(null!==D){var a=exports.unstable_now();G=a+F;try{D(!0,a)?I.postMessage(null):(C=!1,D=null)}catch(b){throw I.postMessage(null),b;}}else C=!1};f=function(a){D=a;C||(C=!0,I.postMessage(null))};g=function(a,b){E=y(function(){a(exports.unstable_now())},b)};h=function(){z(E);E=-1}}function J(a,b){var c=a.length;a.push(b);a:for(;;){var d=c-1>>>1,e=a[d];if(void 0!==e&&0<K(e,b))a[d]=b,a[c]=e,c=d;else break a}}function L(a){a=a[0];return void 0===a?null:a}\nfunction M(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>K(n,c))void 0!==r&&0>K(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>K(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function K(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var N=[],O=[],P=1,Q=null,R=3,S=!1,T=!1,U=!1;\nfunction V(a){for(var b=L(O);null!==b;){if(null===b.callback)M(O);else if(b.startTime<=a)M(O),b.sortIndex=b.expirationTime,J(N,b);else break;b=L(O)}}function W(a){U=!1;V(a);if(!T)if(null!==L(N))T=!0,f(X);else{var b=L(O);null!==b&&g(W,b.startTime-a)}}\nfunction X(a,b){T=!1;U&&(U=!1,h());S=!0;var c=R;try{V(b);for(Q=L(N);null!==Q&&(!(Q.expirationTime>b)||a&&!k());){var d=Q.callback;if(null!==d){Q.callback=null;R=Q.priorityLevel;var e=d(Q.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?Q.callback=e:Q===L(N)&&M(N);V(b)}else M(N);Q=L(N)}if(null!==Q)var m=!0;else{var n=L(O);null!==n&&g(W,n.startTime-b);m=!1}return m}finally{Q=null,R=c,S=!1}}\nfunction Y(a){switch(a){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1E4;default:return 5E3}}var Z=l;exports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){T||S||(T=!0,f(X))};\nexports.unstable_getCurrentPriorityLevel=function(){return R};exports.unstable_getFirstCallbackNode=function(){return L(N)};exports.unstable_next=function(a){switch(R){case 1:case 2:case 3:var b=3;break;default:b=R}var c=R;R=b;try{return a()}finally{R=c}};exports.unstable_pauseExecution=function(){};exports.unstable_requestPaint=Z;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=R;R=a;try{return b()}finally{R=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();if(\"object\"===typeof c&&null!==c){var e=c.delay;e=\"number\"===typeof e&&0<e?d+e:d;c=\"number\"===typeof c.timeout?c.timeout:Y(a)}else c=Y(a),e=d;c=e+c;a={id:P++,callback:b,priorityLevel:a,startTime:e,expirationTime:c,sortIndex:-1};e>d?(a.sortIndex=e,J(O,a),null===L(N)&&a===L(O)&&(U?h():U=!0,g(W,e-d))):(a.sortIndex=c,J(N,a),T||S||(T=!0,f(X)));return a};\nexports.unstable_shouldYield=function(){var a=exports.unstable_now();V(a);var b=L(N);return b!==Q&&null!==Q&&null!==b&&null!==b.callback&&b.startTime<=a&&b.expirationTime<Q.expirationTime||k()};exports.unstable_wrapCallback=function(a){var b=R;return function(){var c=R;R=b;try{return a.apply(this,arguments)}finally{R=c}}};\n"],"sourceRoot":""}