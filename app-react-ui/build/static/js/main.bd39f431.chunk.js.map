{"version":3,"sources":["Recorder.js","SelectFilePanel.js","OutputPanel.js","App.js","index.js"],"names":["Mp3Recorder","MicRecorder","bitRate","Recorder","props","start","state","isBlocked","alert","then","setState","isRecording","catch","e","console","error","stop","getMp3","blob","blobURL","URL","createObjectURL","log","fetch","method","body","res","json","navigator","getUserMedia","audio","className","onClick","this","src","controls","React","Component","SelectFilePanel","useState","uploading","setUploading","uploadedIndicator","setUploadedIndicator","onSubmit","preventDefault","data","FormData","target","reset","type","name","accept","id","disabled","value","aria-hidden","OutputPanel","emotion","setEmotion","fetching","setFetching","file_format","response","prediction","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd39f431.chunk.js","sourcesContent":["import React from 'react';\r\nimport MicRecorder from 'mic-recorder-to-mp3';\r\n// import AudioRecorder from 'react-audio-recorder';\r\nimport AudioRecorder from 'react-audio-recorder-wavdownloader';\r\n\r\nconst Mp3Recorder = new MicRecorder({ bitRate: 128 });\r\n\r\nexport default class Recorder extends React.Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisRecording: false,\r\n\t\t\tblob:'',\r\n\t\t\tblobURL: '',\r\n\t\t\tisBlocked: false,\r\n\t\t};\r\n\t}\r\n\r\n\tstart = () => {\r\n\t\tif (this.state.isBlocked) {\r\n\t\t\talert('Permission Denied');\r\n\t\t}\r\n\t\telse {\r\n\t\t\tMp3Recorder\r\n\t\t\t.start()\r\n\t\t\t.then(() => {\r\n\t\t\tthis.setState({ isRecording: true });\r\n\t\t\t})\r\n\t\t\t.catch((e) => console.error(e));\r\n\t\t}\r\n\t};\r\n\r\n\tstop = () => {\r\n\t\tMp3Recorder\r\n\t\t.stop()\r\n\t\t.getMp3()\r\n\t\t.then(([buffer, blob]) => {\r\n\t\t\tconst blobURL = URL.createObjectURL(blob)\r\n\t\t\tthis.setState({ blobURL, isRecording: false, blob:blob });\r\n\t\t})\r\n\t\t.catch((e) => console.log(e));\r\n\r\n\t\t\r\n\t\tfetch('/api/send_data', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\t// headers: {\r\n\t\t\t// \t'Content-Type':'application/json'\r\n\t\t\t// },\r\n\t\t\t// body: JSON.stringify( {'blob' : this.state.blob} )\r\n\t\t\tbody: this.state.blob\r\n\t\t})\r\n\t\t.then(res => res.json())\r\n\t\t.then(res => console.log(res))\r\n\t\t.catch((e) => console.log(e));\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tnavigator.getUserMedia({ audio: true },\r\n\t\t\t() => {\r\n\t\t\t\tconsole.log('Permission Granted');\r\n\t\t\t\tthis.setState({ isBlocked: false });\r\n\t\t\t},\r\n\t\t\t() => {\r\n\t\t\t\tconsole.log('Permission Denied');\r\n\t\t\t\tthis.setState({ isBlocked: true })\r\n\t\t\t},\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div className='recorder'>\r\n\t\t\t\t<h1 className='header'>Speech Emotion Recognition</h1>\r\n\t\t\t\t<div className='play-button-parent-div'>\r\n\t\t\t\t\t<button className=\"play-button\" onClick={(this.state.isRecording) ? (this.stop) : (this.start) }>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t(this.state.isRecording)?\r\n\t\t\t\t\t\t(<i className='play-button-img' className=\"fa fa-stop\"></i>):\r\n\t\t\t\t\t\t(<i className='play-button-img' className=\"fa fa-microphone\"></i>)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t{/* <AudioRecorder downloadable = 'true' filename='output.wav' /> */}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='audio-player-div'>\r\n\t\t\t\t\t<audio className='audio-player' src={this.state.blobURL} controls=\"controls\" />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nexport default function SelectFilePanel() {\r\n\r\n    const [uploading, setUploading] = useState(false)\r\n    const [uploadedIndicator, setUploadedIndicator] = useState(false)\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        setUploading(true)\r\n        setUploadedIndicator(false)\r\n        const data = new FormData(e.target) \r\n    \r\n        fetch('/api/send_soundfile', {\r\n            method: 'POST',\r\n            body: data\r\n        })\r\n        .then(res => {\r\n            console.log(res)\r\n            setUploading(false)\r\n            setUploadedIndicator(true)\r\n            e.target.reset()\r\n        })\r\n        .catch((e) => console.log(\"err\", e))\r\n    }\r\n\r\n    return(\r\n        <div className=\"select-file-panel\">\r\n            <form onSubmit={handleSubmit} className='select-file-form'>\r\n                <input type=\"file\" name=\"file\" accept='.mp3,.wav' />\r\n                <input \r\n                    type='submit' \r\n                    id=\"fetch-button\" \r\n                    className={(uploading)?('button-fetching'):('button-ready')}\r\n                    disabled = {uploading}\r\n                    value= { (uploading) ? (\"Uploading...\") : (\"Upload\") }\r\n                />\r\n            </form>\r\n            { \r\n                (uploadedIndicator)?\r\n                (<div className='file-uploaded-indicator'>Uploaded <i className=\"fa fa-check-circle\" aria-hidden=\"true\"></i></div>) :\r\n                (\"\")\r\n            }\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\n\r\nexport default function OutputPanel() {\r\n\r\n    const [emotion, setEmotion] = useState('Click below')\r\n    const [fetching, setFetching] = useState(false)\r\n\r\n    function buttonClick() {\r\n        setFetching(true)\r\n        fetch('/api/get_file_format')\r\n        .then(res => res.json())\r\n        .then(function(data) {\r\n            const file_format = data['file_format']\r\n\r\n            if (file_format == 'wav'){\r\n                fetch('/api/data_wav')\r\n                .then(response => response.json())\r\n                .then(response => {\r\n                    setEmotion(response.prediction)\r\n                    setFetching(false)\r\n                });\r\n            }\r\n\r\n            if (file_format == 'mp3') {\r\n                fetch('/api/data_mp3')\r\n                .then(response => response.json())\r\n                .then(response => {\r\n                    setEmotion(response.prediction)\r\n                    setFetching(false)\r\n                });\r\n            }\r\n\r\n            if (file_format == 'no_file') {\r\n                setEmotion(\"error: no wav or mp3 files uploaded\")\r\n                setFetching(false)\r\n            }\r\n        })\r\n        .catch( e => console.log(e) )\r\n    }\r\n\r\n    return(\r\n        <div className='output-panel'>\r\n            <h1>{emotion}</h1>\r\n            <button \r\n                id='fetch-button' \r\n                className={(fetching)?('button-fetching'):('button-ready')}\r\n                disabled = {fetching}\r\n                onClick={buttonClick}>\r\n                    {(fetching)?('Fetching...'):('Check')}\r\n            </button>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport Recorder from './Recorder';\r\n// import EmotionPanel from './EmotionPanel';\r\nimport SelectFilePanel from './SelectFilePanel';\r\nimport OutputPanel from './OutputPanel';\r\n\r\n\r\nfunction App() {\r\n  return(\r\n    <>\r\n\t\t<Recorder />\r\n\t\t<div className='bottom-part'>\r\n\t\t\t{/* <EmotionPanel /> */}\r\n\t\t\t<SelectFilePanel />\r\n\t\t\t<OutputPanel />\r\n\t\t</div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport './style.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}